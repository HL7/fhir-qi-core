{
  "resourceType": "Library",
  "id": "QICore-ModelInfo",
  "name": "QICore",
  "title": "QICore Model Definition",
  "status": "active",
  "experimental": false,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "model-definition"
    } ]
  },
  "date": "2024-02-12",
  "description": "Model definition for the QI-Core IG Model",
  "approvalDate": "2024-02-12",
  "lastReviewDate": "2024-02-12",
  "topic": [ {
    "text": "QICore"
  }, {
    "text": "CQL Model Information"
  } ],
  "content": [ {
    "contentType": "application/xml",
    "data": "<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<modelInfo name="QICore" version="6.0.0" url="http://hl7.org/fhir/us/qicore" targetUrl="http://hl7.org/fhir" targetQualifier="qicore" patientClassName="Patient" patientBirthDatePropertyName="birthDate" xmlns="urn:hl7-org:elm-modelinfo:r1" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <requiredModelInfo name="System" version="1.0.0"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Address" identifier="http://hl7.org/fhir/StructureDefinition/Address" label="Address" retrievable="false" baseType="QICore.Element">
        <element name="use" elementType="QICore.AddressUse" target="%value.value" description="home | work | temp | old | billing - purpose of this address" definition="The purpose of this address." comment="Applications can assume that an address is current unless it explicitly says that it is temporary or old.">
            <binding name="AddressUse" description="The use of an address." strength="Required"/>
        </element>
        <element name="type" elementType="QICore.AddressType" target="%value.value" description="postal | physical | both" definition="Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both." comment="The definition of Address states that &quot;address is intended to describe postal addresses, not physical locations&quot;. However, many applications track whether an address has a dual purpose of being a location that can be visited as well as being a valid delivery destination, and Postal addresses are often used as proxies for physical locations (also see the [Location](location.html#) resource).">
            <binding name="AddressType" description="The type of an address (physical / postal)." strength="Required"/>
        </element>
        <element name="text" elementType="System.String" target="%value.value" description="Text representation of the address" definition="Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts." comment="Can provide both a text representation and parts. Applications updating an address SHALL ensure that  when both text and parts are present,  no content is included in the text that isn't found in a part."/>
        <element name="line" target="%value.value" description="Street name, number, direction &amp; P.O. Box etc." definition="This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="city" elementType="System.String" target="%value.value" description="Name of city, town etc." definition="The name of the city, town, suburb, village or other community or delivery center."/>
        <element name="district" elementType="System.String" target="%value.value" description="District name (aka county)" definition="The name of the administrative area (county)." comment="District is sometimes known as county, but in some regions 'county' is used in place of city (municipality), so county name should be conveyed in city instead."/>
        <element name="state" elementType="System.String" target="%value.value" description="Sub-unit of country (abbreviations ok)" definition="Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes)."/>
        <element name="postalCode" elementType="System.String" target="%value.value" description="Postal code for area" definition="A postal code designating a region defined by the postal service."/>
        <element name="country" elementType="System.String" target="%value.value" description="Country (e.g. can be ISO 3166 2 or 3 letter code)" definition="Country - a nation as commonly understood or generally accepted." comment="ISO 3166 3 letter codes can be used in place of a human readable country name."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Time period when address was/is in use" definition="Time period when address was/is in use.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AddressType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AddressUse" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AdministrativeGender" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AdverseEvent" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-adverseevent" label="QICore AdverseEvent" retrievable="true" primaryCodePath="event" baseType="QICore.DomainResource">
        <element name="identifier" elementType="QICore.Identifier" description="Business identifier for the event" definition="Business identifiers assigned to this adverse event by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number."/>
        <element name="actuality" elementType="QICore.AdverseEventActuality" target="%value.value" description="(QI-Core) actual | potential" definition="Whether the event actually happened, or just had the potential to. Note that this is independent of whether anyone was affected or harmed or how severely.">
            <binding name="AdverseEventActuality" description="Overall nature of the adverse event, e.g. real or potential." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) product-problem | product-quality | product-use-error | wrong-dose | incorrect-prescribing-information | wrong-technique | wrong-route-of-administration | wrong-rate | wrong-duration | wrong-time | expired-drug | medical-device-use-error | problem-different-manufacturer | unsafe-physical-environment" definition="The overall type of event, intended for search and filtering purposes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="AdverseEventCategory" description="Overall categorization of the event, e.g. product-related or situational." strength="Extensible"/>
        </element>
        <element name="event" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Type of the event itself in relation to the subject" definition="This element defines the specific type of event that occurred or that was prevented from occurring.">
            <binding description="Detailed type of event." strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Subject impacted by event" definition="This subject or group impacted by the event." comment="If AdverseEvent.resultingCondition differs among members of the group, then use Patient as the subject."/>
        <element name="encounter" elementType="QICore.Reference" description="(QI-Core) Encounter created as part of" definition="The Encounter during which AdverseEvent was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter.  For example, if a medication administration was considered an adverse event because it resulted in a rash, then the encounter when the medication administration was given is the context.  If the patient reports the AdverseEvent during a second encounter, that second encounter is not the context."/>
        <element name="date" elementType="System.DateTime" target="%value.value" description="When the event occurred" definition="The date (and perhaps time) when the adverse event occurred." mustSupport="false"/>
        <element name="detected" elementType="System.DateTime" target="%value.value" description="When the event was detected" definition="Estimated or actual date the AdverseEvent began, in the opinion of the reporter."/>
        <element name="recordedDate" elementType="System.DateTime" target="%value.value" description="When the event was recorded" definition="The date on which the existence of the AdverseEvent was first recorded." comment="The recordedDate represents the date when this particular AdverseEvent record was created in the system, not the date of the most recent update.  The date of the last record modification can be retrieved from the resource metadata."/>
        <element name="resultingCondition" description="(QI-Core) Effect on the subject due to this event" definition="Includes information about the reaction that occurred as a result of exposure to a substance (for example, a drug or a chemical).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Location where adverse event occurred" definition="The information about where the adverse event occurred." mustSupport="false"/>
        <element name="seriousness" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Seriousness of the event" definition="Assessment whether this event was of real importance.">
            <binding name="AdverseEventSeriousness" description="Overall seriousness of this event for the patient." strength="Example"/>
        </element>
        <element name="severity" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="mild | moderate | severe" definition="Describes the severity of the adverse event, in relation to the subject. Contrast to AdverseEvent.seriousness - a severe rash might not be serious, but a mild heart problem is.">
            <binding name="AdverseEventSeverity" description="The severity of the adverse event itself, in direct relation to the subject." strength="Required"/>
        </element>
        <element name="outcome" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="resolved | recovering | ongoing | resolvedWithSequelae | fatal | unknown" definition="Describes the type of outcome from the adverse event.">
            <binding name="AdverseEventOutcome" description="TODO (and should this be required?)." strength="Required"/>
        </element>
        <element name="recorder" elementType="QICore.Reference" description="Who recorded the adverse event" definition="Information on who recorded the adverse event.  May be the patient or a practitioner." mustSupport="false"/>
        <element name="contributor" description="Who  was involved in the adverse event or the potential adverse event" definition="Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness)." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="suspectEntity" description="The suspected agent causing the adverse event" definition="Describes the entity that is suspected to have caused the adverse event." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.AdverseEvent.SuspectEntity"/>
        </element>
        <element name="subjectMedicalHistory" description="AdverseEvent.subjectMedicalHistory" definition="AdverseEvent.subjectMedicalHistory." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="referenceDocument" description="AdverseEvent.referenceDocument" definition="AdverseEvent.referenceDocument.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="study" description="AdverseEvent.study" definition="AdverseEvent.study.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="recorder"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="recorder"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AdverseEvent.SuspectEntity" retrievable="false" baseType="QICore.BackboneElement">
        <element name="instance" elementType="QICore.Reference" description="(QI-Core) Refers to the specific entity that caused the adverse event" definition="Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device."/>
        <element name="causality" elementType="QICore.AdverseEvent.SuspectEntity.Causality" description="Information on the possible cause of the event" definition="Information on the possible cause of the event." mustSupport="false"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AdverseEvent.SuspectEntity.Causality" retrievable="false" baseType="QICore.BackboneElement">
        <element name="assessment" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Assessment of if the entity caused the event" definition="Assessment of if the entity caused the event.">
            <binding name="AdverseEventCausalityAssessment" description="Codes for the assessment of whether the entity caused the event." strength="Example"/>
        </element>
        <element name="productRelatedness" elementType="System.String" target="%value.value" description="AdverseEvent.suspectEntity.causalityProductRelatedness" definition="AdverseEvent.suspectEntity.causalityProductRelatedness."/>
        <element name="author" elementType="QICore.Reference" description="AdverseEvent.suspectEntity.causalityAuthor" definition="AdverseEvent.suspectEntity.causalityAuthor."/>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="ProbabilityScale | Bayesian | Checklist" definition="ProbabilityScale | Bayesian | Checklist.">
            <binding name="AdverseEventCausalityMethod" description="TODO." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AdverseEventActuality" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AllergyIntolerance" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-allergyintolerance" label="QICore AllergyIntolerance" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="resolutionAge" elementType="QICore.resolutionAge" target="FHIRHelpers.ToQuantity(%parent.extension[url='http://hl7.org/fhir/StructureDefinition/allergyintolerance-resolutionAge'].value)" description="Age that the allergy or intolerance resolved" definition="The estimated patient age at which the allergy or intolerance resolved. Should be specified only if the status is resolved." comment="Removed Date since it is hard to imagine knowing the date an allergy abated. The assertion date is already captured." mustSupport="false"/>
        <element name="identifier" description="External ids for this item" definition="Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="clinicalStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) active | inactive | resolved" definition="The clinical status of the allergy or intolerance." comment="Refer to [discussion](http://hl7.org/fhir/R4/extensibility.html#Special-Case) if clincalStatus is missing data.&#10;The data type is CodeableConcept because clinicalStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="verificationStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) unconfirmed | confirmed | refuted | entered-in-error" definition="Assertion about certainty associated with the propensity, or potential risk, of a reaction to the identified substance (including pharmaceutical product)." comment="The data type is CodeableConcept because verificationStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="type" elementType="QICore.AllergyIntoleranceType" target="%value.value" description="(QI-Core) allergy | intolerance - Underlying mechanism (if known)" definition="Identification of the underlying physiological mechanism for the reaction risk." comment="Allergic (typically immune-mediated) reactions have been traditionally regarded as an indicator for potential escalation to significant future risk. Contemporary knowledge suggests that some reactions previously thought to be immune-mediated are, in fact, non-immune, but in some cases can still pose a life threatening risk. It is acknowledged that many clinicians might not be in a position to distinguish the mechanism of a particular reaction. Often the term &quot;allergy&quot; is used rather generically and may overlap with the use of &quot;intolerance&quot; - in practice the boundaries between these two concepts might not be well-defined or understood. This data element is included nevertheless, because many legacy systems have captured this attribute. Immunologic testing may provide supporting evidence for the basis of the reaction and the causative substance, but no tests are 100% sensitive or specific for sensitivity to a particular substance. If, as is commonly the case, it is unclear whether the reaction is due to an allergy or an intolerance, then the type element should be omitted from the resource.">
            <binding name="AllergyIntoleranceType" description="Identification of the underlying physiological mechanism for a Reaction Risk." strength="Required"/>
        </element>
        <element name="category" target="%value.value" description="(QI-Core) food | medication | environment | biologic" definition="Category of the identified substance." comment="This data element has been included because it is currently being captured in some clinical systems. This data can be derived from the substance where coding systems are used, and is effectively redundant in that situation.  When searching on category, consider the implications of AllergyIntolerance resources without a category.  For example, when searching on category = medication, medication allergies that don't have a category valued will not be returned.  Refer to [search](http://hl7.org/fhir/R4/search.html) for more information on how to search category with a :missing modifier to get allergies that don't have a category.  Additionally, category should be used with caution because category can be subjective based on the sender.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.AllergyIntoleranceCategory"/>
            <binding name="AllergyIntoleranceCategory" description="Category of an identified substance associated with allergies or intolerances." strength="Required"/>
        </element>
        <element name="criticality" elementType="QICore.AllergyIntoleranceCriticality" target="%value.value" description="(QI-Core) low | high | unable-to-assess" definition="Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance." comment="The default criticality value for any propensity to an adverse reaction should be 'Low Risk', indicating at the very least a relative contraindication to deliberate or voluntary exposure to the substance. 'High Risk' is flagged if the clinician has identified a propensity for a more serious or potentially life-threatening reaction, such as anaphylaxis, and implies an absolute contraindication to deliberate or voluntary exposure to the substance. If this element is missing, the criticality is unknown (though it may be known elsewhere).  Systems that capture a severity at the condition level are actually representing the concept of criticality whereas the severity documented at the reaction level is representing the true reaction severity.  Existing systems that are capturing both condition criticality and reaction severity may use the term &quot;severity&quot; to represent both.  Criticality is the worst it could be in the future (i.e. situation-agnostic) whereas severity is situation-dependent.">
            <binding name="AllergyIntoleranceCriticality" description="Estimate of the potential clinical harm, or seriousness, of a reaction to an identified substance." strength="Required"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Code that identifies the allergy or intolerance" definition="Code for an allergy or intolerance statement (either a positive or a negated/excluded statement).  This may be a code for a substance or pharmaceutical product that is considered to be responsible for the adverse reaction risk (e.g., &quot;Latex&quot;), an allergy or intolerance condition (e.g., &quot;Latex allergy&quot;), or a negated/excluded code for a specific substance or class (e.g., &quot;No latex allergy&quot;) or a general or categorical negated statement (e.g.,  &quot;No known allergy&quot;, &quot;No known drug allergies&quot;).  Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance." comment="It is strongly recommended that this element be populated using a terminology, where possible. For example, some terminologies used include RxNorm, SNOMED CT, DM+D, NDFRT, ICD-9, IDC-10, UNII, and ATC. Plain text should only be used if there is no appropriate terminology available. Additional details can be specified in the text.&#13;&#13;When a substance or product code is specified for the 'code' element, the &quot;default&quot; semantic context is that this is a positive statement of an allergy or intolerance (depending on the value of the 'type' element, if present) condition to the specified substance/product.  In the corresponding SNOMED CT allergy model, the specified substance/product is the target (destination) of the &quot;Causative agent&quot; relationship.&#13;&#13;The 'substanceExposureRisk' extension is available as a structured and more flexible alternative to the 'code' element for making positive or negative allergy or intolerance statements.  This extension provides the capability to make &quot;no known allergy&quot; (or &quot;no risk of adverse reaction&quot;) statements regarding any coded substance/product (including cases when a pre-coordinated &quot;no allergy to x&quot; concept for that substance/product does not exist).  If the 'substanceExposureRisk' extension is present, the AllergyIntolerance.code element SHALL be omitted." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who the sensitivity is for" definition="The patient who has the allergy or intolerance." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter when the allergy or intolerance was asserted" definition="The encounter when the allergy or intolerance was asserted."/>
        <element name="onset" target="FHIRHelpers.ToValue(%value)" description="When allergy or intolerance was identified" definition="Estimated or actual date,  date-time, or age when allergy or intolerance was identified." mustSupport="false">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="recordedDate" elementType="System.DateTime" target="%value.value" description="(QI-Core) Date first version of the resource instance was recorded" definition="The recordedDate represents when this particular AllergyIntolerance record was created in the system, which is often a system-generated date."/>
        <element name="recorder" elementType="QICore.Reference" description="Who recorded the sensitivity" definition="Individual who recorded the record and takes responsibility for its content."/>
        <element name="asserter" elementType="QICore.Reference" description="Source of the information about the allergy" definition="The source of the information about the allergy that is recorded." comment="The recorder takes responsibility for the content, but can reference the source from where they got it."/>
        <element name="lastOccurrence" elementType="System.DateTime" target="%value.value" description="Date(/time) of last known occurrence of a reaction" definition="Represents the date and/or time of the last known occurrence of a reaction event." comment="This date may be replicated by one of the Onset of Reaction dates. Where a textual representation of the date of last occurrence is required e.g. 'In Childhood, '10 years ago' the Comment element should be used."/>
        <element name="note" description="Additional text not captured in other fields" definition="Additional narrative about the propensity for the Adverse Reaction, not captured in other fields." comment="For example: including reason for flagging a seriousness of 'High Risk'; and instructions related to future exposure or administration of the substance, such as administration within an Intensive Care Unit or under corticosteroid cover. The notes should be related to an allergy or intolerance as a condition in general and not related to any particular episode of it. For episode notes and descriptions, use AllergyIntolerance.event.description and  AllergyIntolerance.event.notes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="reaction" description="(QI-Core)(USCDI) Adverse Reaction Events linked to exposure to substance" definition="Details about each adverse reaction event linked to exposure to the identified substance." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.AllergyIntolerance.Reaction"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="recorder"/>
        <contextRelationship context="Practitioner" relatedKeyElement="asserter"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Patient" relatedKeyElement="recorder"/>
        <contextRelationship context="Patient" relatedKeyElement="asserter"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="asserter"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AllergyIntolerance.Reaction" retrievable="false" baseType="QICore.BackboneElement">
        <element name="substance" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Specific substance or pharmaceutical product considered to be responsible for event" definition="Identification of the specific substance (or pharmaceutical product) considered to be responsible for the Adverse Reaction event. Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance." comment="Coding of the specific substance (or pharmaceutical product) with a terminology capable of triggering decision support should be used wherever possible.  The 'code' element allows for the use of a specific substance or pharmaceutical product, or a group or class of substances. In the case of an allergy or intolerance to a class of substances, (for example, &quot;penicillins&quot;), the 'reaction.substance' element could be used to code the specific substance that was identified as having caused the reaction (for example, &quot;amoxycillin&quot;). Duplication of the value in the 'code' and 'reaction.substance' elements is acceptable when a specific substance has been recorded in 'code'.">
            <binding name="SubstanceCode" description="Codes defining the type of the substance (including pharmaceutical products)." strength="Example"/>
        </element>
        <element name="manifestation" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Clinical symptoms/signs associated with the Event" definition="Clinical symptoms and/or signs that are observed or associated with the adverse reaction event." comment="Manifestation can be expressed as a single word, phrase or brief description. For example: nausea, rash or no reaction. It is preferable that manifestation should be coded with a terminology, where possible. The values entered here may be used to display on an application screen as part of a list of adverse reactions, as recommended in the UK NHS CUI guidelines.  Terminologies commonly used include, but are not limited to, SNOMED CT or ICD10." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Extensible"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Description of the event as a whole" definition="Text description about the reaction as a whole, including details of the manifestation if required." comment="Use the description to provide any details of a particular event of the occurred reaction such as circumstances, reaction specifics, what happened before/after. Information, related to the event, but not describing a particular care should be captured in the comment field. For example: at the age of four, the patient was given penicillin for strep throat and subsequently developed severe hives."/>
        <element name="onset" elementType="System.DateTime" target="%value.value" description="Date(/time) when manifestations showed" definition="Record of the date and/or time of the onset of the Reaction."/>
        <element name="severity" elementType="QICore.AllergyIntoleranceSeverity" target="%value.value" description="(QI-Core) mild | moderate | severe (of event as a whole)" definition="Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations." comment="It is acknowledged that this assessment is very subjective. There may be some specific practice domains where objective scales have been applied. Objective scales can be included in this model as extensions.">
            <binding name="AllergyIntoleranceSeverity" description="Clinical assessment of the severity of a reaction event as a whole, potentially considering multiple different manifestations." strength="Required"/>
        </element>
        <element name="exposureRoute" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How the subject was exposed to the substance" definition="Identification of the route by which the subject was exposed to the substance." comment="Coding of the route of exposure with a terminology should be used wherever possible.">
            <binding name="RouteOfAdministration" description="A coded concept describing the route or physiological path of administration of a therapeutic agent into or onto the body of a subject." strength="Example"/>
        </element>
        <element name="note" description="Text about event not captured in other fields" definition="Additional text about the adverse reaction event not captured in other fields." comment="Use this field to record information indirectly related to a particular event and not captured in the description. For example: Clinical records are no longer available, recorded based on information provided to the patient by her mother and her mother is deceased.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AllergyIntoleranceCategory" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AllergyIntoleranceCriticality" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AllergyIntoleranceSeverity" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="AllergyIntoleranceType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Annotation" identifier="http://hl7.org/fhir/StructureDefinition/Annotation" label="Annotation" retrievable="false" baseType="QICore.Element">
        <element name="author" target="FHIRHelpers.ToValue(%value)" description="Individual responsible for the annotation" definition="The individual responsible for making the annotation." comment="Organization is used when there's no need for specific attribution as to who made the comment.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="time" elementType="System.DateTime" target="%value.value" description="When the annotation was made" definition="Indicates when this particular annotation was made."/>
        <element name="text" elementType="System.String" target="%value.value" description="The annotation  - text content (as markdown)" definition="The text of the annotation in markdown format."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Attachment" identifier="http://hl7.org/fhir/StructureDefinition/Attachment" label="Attachment" retrievable="false" baseType="QICore.Element">
        <element name="contentType" elementType="QICore.MimeType" target="%value.value" description="Mime type of the content, with charset etc." definition="Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.">
            <binding name="MimeType" description="The mime type of an attachment. Any valid mime type is allowed." strength="Required"/>
        </element>
        <element name="language" elementType="System.String" target="%value.value" description="Human language of the content (BCP-47)" definition="The human language of the content. The value can be any valid value according to BCP 47.">
            <binding name="Language" description="A human language." strength="Preferred"/>
        </element>
        <element name="data" elementType="System.String" target="%value.value" description="Data inline, base64ed" definition="The actual data of the attachment - a sequence of bytes, base64 encoded." comment="The base64-encoded data SHALL be expressed in the same character set as the base resource XML or JSON."/>
        <element name="url" elementType="System.String" target="%value.value" description="Uri where the data can be found" definition="A location where the data can be accessed." comment="If both data and url are provided, the url SHALL point to the same content as the data contains. Urls may be relative references or may reference transient locations such as a wrapping envelope using cid: though this has ramifications for using signatures. Relative URLs are interpreted relative to the service url, like a resource reference, rather than relative to the resource itself. If a URL is provided, it SHALL resolve to actual data."/>
        <element name="size" elementType="System.Integer" target="%value.value" description="Number of bytes of content (if url provided)" definition="The number of bytes of data that make up this attachment (before base64 encoding, if that is done)." comment="The number of bytes is redundant if the data is provided as a base64binary, but is useful if the data is provided as a url reference."/>
        <element name="hash" elementType="System.String" target="%value.value" description="Hash of the data (sha-1, base64ed)" definition="The calculated hash of the data using SHA-1. Represented using base64." comment="The hash is calculated on the data prior to base64 encoding, if the data is based64 encoded. The hash is not intended to support digital signatures. Where protection against malicious threats a digital signature should be considered, see [Provenance.signature](provenance-definitions.html#Provenance.signature) for mechanism to protect a resource with a digital signature."/>
        <element name="title" elementType="System.String" target="%value.value" description="Label to display in place of the data" definition="A label or set of text to display in place of the data."/>
        <element name="creation" elementType="System.DateTime" target="%value.value" description="Date attachment was first created" definition="The date that the attachment was first created."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="BackboneElement" identifier="http://hl7.org/fhir/StructureDefinition/BackboneElement" label="BackboneElement" retrievable="false" baseType="QICore.Element">
        <element name="modifierExtension" description="Extensions that cannot be ignored even if unrecognized" definition="May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.&#10;&#10;Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)." comment="There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Extension"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="BodyStructure" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-bodystructure" label="QICore BodyStructure" retrievable="true" primaryCodePath="location" baseType="QICore.DomainResource">
        <element name="identifier" description="Bodystructure identifier" definition="Identifier for this instance of the anatomical structure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="active" elementType="System.Boolean" target="%value.value" description="(QI-Core) Whether this record is in active use" definition="Whether this body site is in active use." comment="This element is labeled as a modifier because it may be used to mark that the resource was created in error."/>
        <element name="morphology" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Kind of Structure" definition="The kind of structure being represented by the body structure at `BodyStructure.location`.  This can define both normal and abnormal morphologies." comment="The minimum cardinality of 0 supports the use case of specifying a location without defining a morphology.">
            <binding name="BodyStructureCode" description="Codes describing anatomic morphology." strength="Example"/>
        </element>
        <element name="location" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Body site" definition="The anatomical location or region of the specimen, lesion, or body structure.">
            <binding strength="Preferred"/>
        </element>
        <element name="locationQualifier" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Body site modifier" definition="Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Concepts modifying the anatomic location" strength="Preferred"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Text description" definition="A summary, characterization or explanation of the body structure." comment="This description could include any visual markings used to orientate the viewer e.g. external reference points, special sutures, ink markings."/>
        <element name="image" description="Attached images" definition="Image or images used to identify a location.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Attachment"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) Who this is about" definition="The person to which the body site belongs."/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CarePlan" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-careplan" label="QICore CarePlan" retrievable="true" primaryCodePath="category" baseType="QICore.DomainResource">
        <element name="identifier" description="External Ids for this plan" definition="Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="Fulfills CarePlan" definition="A care plan that is fulfilled in whole or in part by this care plan.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="replaces" description="CarePlan replaced by this CarePlan" definition="Completed or terminated care plan whose function is taken by this new care plan." comment="The replacement could be because the initial care plan was immediately rejected (due to an issue) or because the previous care plan was completed, but the need for the action described by the care plan remains ongoing.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced CarePlan" definition="A larger care plan of which this particular care plan is a component or step." comment="Each care plan is an independent request, such that having a care plan be part of another care plan can cause issues with cascading statuses.  As such, this element is still being discussed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(USCDI) draft | active | on-hold | revoked | completed | entered-in-error | unknown" definition="Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record." comment="The unknown code is not to be used to convey other statuses.  The unknown code should be used when one of the statuses applies, but the authoring system doesn't know the current state of the care plan.&#10;&#10;This element is labeled as a modifier because the status contains the code entered-in-error that marks the plan as not currently valid." mustSupport="true">
            <binding description="Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record." strength="Required"/>
        </element>
        <element name="intent" elementType="System.String" target="%value.value" description="(USCDI) proposal | plan | order | option" definition="Indicates the level of authority/intentionality associated with the care plan and where the care plan fits into the workflow chain." comment="This element is labeled as a modifier because the intent alters when and how the resource is actually applicable." mustSupport="true">
            <binding description="Codes indicating the degree of authority/intentionality associated with a care plan" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Type of plan" definition="Type of plan." comment="There may be multiple axes of categorization and one plan may serve multiple purposes.  In some cases, this may be redundant with references to CarePlan.concern." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CarePlanCategory" description="Identifies what &quot;kind&quot; of plan this is to support differentiation between multiple co-existing plans; e.g. &quot;Home health&quot;, &quot;psychiatric&quot;, &quot;asthma&quot;, &quot;disease management&quot;, etc." strength="Preferred"/>
        </element>
        <element name="AssessPlan" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Type of plan" definition="Type of plan." comment="There may be multiple axes of categorization and one plan may serve multiple purposes.  In some cases, this may be redundant with references to CarePlan.concern." mustSupport="true">
            <binding name="CarePlanCategory" description="Identifies what &quot;kind&quot; of plan this is to support differentiation between multiple co-existing plans; e.g. &quot;Home health&quot;, &quot;psychiatric&quot;, &quot;asthma&quot;, &quot;disease management&quot;, etc." strength="Preferred"/>
        </element>
        <element name="title" elementType="System.String" target="%value.value" description="Human-friendly name for the care plan" definition="Human-friendly name for the care plan."/>
        <element name="description" elementType="System.String" target="%value.value" description="Summary of nature of plan" definition="A description of the scope and nature of the plan."/>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who the care plan is for." definition="Who care plan is for." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this CarePlan was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter. CarePlan activities conducted as a result of the care plan may well occur as part of other encounters."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Time period plan covers" definition="Indicates when the plan did (or is intended to) come into effect and end." comment="Any activities scheduled as part of the plan should be constrained to the specified period regardless of whether the activities are planned within a single encounter/episode or across multiple encounters/episodes (e.g. the longitudinal management of a chronic condition).">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="created" elementType="System.DateTime" target="%value.value" description="Date record was first recorded" definition="Represents when this particular CarePlan record was created in the system, which is often a system-generated date."/>
        <element name="author" elementType="QICore.Reference" description="Who is the designated responsible party" definition="When populated, the author is responsible for the care plan.  The care plan is attributed to the author." comment="The author may also be a contributor.  For example, an organization can be an author, but not listed as a contributor."/>
        <element name="contributor" description="Who provided the content of the care plan" definition="Identifies the individual(s) or organization who provided the contents of the care plan." comment="Collaborative care plans may have multiple contributors.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="careTeam" description="Who's involved in plan?" definition="Identifies all people and organizations who are expected to be involved in the care envisioned by this plan.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="addresses" description="Health issues this plan addresses" definition="Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan." comment="When the diagnosis is related to an allergy or intolerance, the Condition and AllergyIntolerance resources can both be used. However, to be actionable for decision support, using Condition alone is not sufficient as the allergy or intolerance condition needs to be represented as an AllergyIntolerance.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="supportingInfo" description="Information considered as part of plan" definition="Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc." comment="Use &quot;concern&quot; to identify specific conditions addressed by the care plan.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="goal" description="Desired outcome of plan" definition="Describes the intended objective(s) of carrying out the care plan." comment="Goal can be achieving a particular change or merely maintaining a current state or even slowing a decline.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="activity" description="Action to occur as part of plan" definition="Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.CarePlan.Activity"/>
            <constraint name="cpl-3" severity="ERROR" message="Provide a reference or detail, not both">
                <expression language="text/fhirpath" expression="detail.empty() or reference.empty()"/>
            </constraint>
        </element>
        <element name="note" description="Comments about the plan" definition="General notes about the care plan not covered elsewhere.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="performer"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Patient" relatedKeyElement="performer"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="performer"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CarePlan.Activity" retrievable="false" baseType="QICore.BackboneElement">
        <element name="outcomeCodeableConcept" target="FHIRHelpers.ToConcept(%value)" description="Results of the activity" definition="Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not)." comment="Note that this should not duplicate the activity status (e.g. completed or in progress).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CarePlanActivityOutcome" description="Identifies the results of the activity." strength="Example"/>
        </element>
        <element name="outcomeReference" description="Appointment, Encounter, Procedure, etc." definition="Details of the outcome or action resulting from the activity.  The reference to an &quot;event&quot; resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource)." comment="The activity outcome is independent of the outcome of the related goal(s).  For example, if the goal is to achieve a target body weight of 150 lbs and an activity is defined to diet, then the activity outcome could be calories consumed whereas the goal outcome is an observation for the actual body weight measured.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="progress" description="Comments about the activity status/progress" definition="Notes about the adherence/status/progress of the activity." comment="This element should NOT be used to describe the activity to be performed - that occurs either within the resource pointed to by activity.detail.reference or in activity.detail.description.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="reference" elementType="QICore.Reference" description="Activity details defined in specific resource" definition="The details of the proposed activity represented in a specific resource." comment="Standard extension exists ([resource-pertainsToGoal](http://hl7.org/fhir/R4/extension-resource-pertainstogoal.html)) that allows goals to be referenced from any of the referenced resources in CarePlan.activity.reference.  &#13;The goal should be visible when the resource referenced by CarePlan.activity.reference is viewed independently from the CarePlan.  Requests that are pointed to by a CarePlan using this element should *not* point to this CarePlan using the &quot;basedOn&quot; element.  i.e. Requests that are part of a CarePlan are not &quot;based on&quot; the CarePlan."/>
        <element name="detail" elementType="QICore.CarePlan.Activity.Detail" description="In-line definition of activity" definition="A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CarePlan.Activity.Detail" retrievable="false" baseType="QICore.BackboneElement">
        <element name="kind" elementType="QICore.CarePlanActivityKind" target="%value.value" description="Appointment | CommunicationRequest | DeviceRequest | MedicationRequest | NutritionOrder | Task | ServiceRequest | VisionPrescription" definition="A description of the kind of resource the in-line definition of a care plan activity is representing.  The CarePlan.activity.detail is an in-line definition when a resource is not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest.">
            <binding name="CarePlanActivityKind" description="Resource types defined as part of FHIR that can be represented as in-line definitions of a care plan activity." strength="Required"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Detail type of activity" definition="Detailed description of the type of planned activity; e.g. what lab test, what procedure, what kind of encounter." comment="Tends to be less relevant for activities involving particular products.  Codes should not convey negation - use &quot;prohibited&quot; instead.">
            <binding name="CarePlanActivityType" description="Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter." strength="Example"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why activity should be done or why activity was prohibited" definition="Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited." comment="This could be a diagnosis code.  If a full condition record exists or additional detail is needed, use reasonCondition instead.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CarePlanActivityReason" description="Identifies why a care plan activity is needed.  Can include any health condition codes as well as such concepts as &quot;general wellness&quot;, prophylaxis, surgical preparation, etc." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why activity is needed" definition="Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan." comment="Conditions can be identified at the activity level that are not identified as reasons for the overall plan.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="goal" description="Goals this activity relates to" definition="Internal reference that identifies the goals that this activity is intended to contribute towards meeting.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.CarePlanActivityStatus" target="%value.value" description="not-started | scheduled | in-progress | on-hold | completed | cancelled | stopped | unknown | entered-in-error" definition="Identifies what progress is being made for the specific activity." comment="Some aspects of status can be inferred based on the resources linked in actionTaken.  Note that &quot;status&quot; is only as current as the plan was most recently updated.  &#10;The unknown code is not to be used to convey other statuses.  The unknown code should be used when one of the statuses applies, but the authoring system doesn't know the current state of the activity.">
            <binding name="CarePlanActivityStatus" description="Codes that reflect the current state of a care plan activity within its overall life cycle." strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="Provides reason why the activity isn't yet started, is on hold, was cancelled, etc." comment="Will generally not be present if status is &quot;complete&quot;.  Be sure to prompt to update this (or at least remove the existing value) if the status is changed."/>
        <element name="doNotPerform" elementType="System.Boolean" target="%value.value" description="If true, activity is prohibiting action" definition="If true, indicates that the described activity is one that must NOT be engaged in when following the plan.  If false, or missing, indicates that the described activity is one that should be engaged in when following the plan." comment="This element is labeled as a modifier because it marks an activity as an activity that is not to be performed."/>
        <element name="scheduled" target="FHIRHelpers.ToValue(%value)" description="When activity is to occur" definition="The period, timing or frequency upon which the described activity is to occur.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where it should happen" definition="Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc." comment="May reference a specific clinical location or may identify a type of location."/>
        <element name="performer" description="Who will be responsible?" definition="Identifies who's expected to be involved in the activity." comment="A performer MAY also be a participant in the care plan.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="product" target="FHIRHelpers.ToValue(%value)" description="What is to be administered/supplied" definition="Identifies the food, drug or other product to be consumed or supplied in the activity.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="CarePlanProduct" description="A product supplied or administered as part of a care plan activity." strength="Example"/>
        </element>
        <element name="dailyAmount" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="How to consume/day?" definition="Identifies the quantity expected to be consumed in a given day."/>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="How much to administer/supply/consume" definition="Identifies the quantity expected to be supplied, administered or consumed by the subject."/>
        <element name="description" elementType="System.String" target="%value.value" description="Extra info describing activity to perform" definition="This provides a textual description of constraints on the intended activity occurrence, including relation to other activities.  It may also include objectives, pre-conditions and end-conditions.  Finally, it may convey specifics about the activity such as body site, method, route, etc."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CarePlanActivityKind" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CarePlanActivityStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CareTeam" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-careteam" label="QICore CareTeam" retrievable="true" primaryCodePath="category" baseType="QICore.DomainResource">
        <element name="identifier" description="External Ids for this team" definition="Business identifiers assigned to this care team by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(USCDI) proposed | active | suspended | inactive | entered-in-error" definition="Indicates the current state of the care team." comment="This element is labeled as a modifier because the status contains the code entered-in-error that marks the care team as not currently valid." mustSupport="true">
            <binding description="Indicates whether the team is current , represents future intentions or is now a historical record." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="Type of team" definition="Identifies what kind of team.  This is to support differentiation between multiple co-existing teams, such as care plan team, episode of care team, longitudinal care team." comment="There may be multiple axis of categorization and one team may serve multiple purposes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CareTeamCategory" description="Indicates the type of care team." strength="Example"/>
        </element>
        <element name="name" elementType="System.String" target="%value.value" description="Name of the team, such as crisis assessment team" definition="A label for human use intended to distinguish like teams.  E.g. the &quot;red&quot; vs. &quot;green&quot; trauma teams." comment="The meaning/purpose of the team is conveyed in CareTeam.category.  This element may also convey semantics of the team (e.g. &quot;Red trauma team&quot;), but its primary purpose is to distinguish between identical teams in a human-friendly way.  (&quot;Team 18735&quot; isn't as friendly.)."/>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who the care team is for." definition="Identifies the patient or group whose intended care is handled by the team." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this CareTeam was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Time period team covers" definition="Indicates when the team did (or is intended to) come into effect and end.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="participant" description="(USCDI) Members of the team" definition="Identifies all people and organizations who are expected to be involved in the care team." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.CareTeam.Participant"/>
            <constraint name="ctm-1" severity="ERROR" message="CareTeam.participant.onBehalfOf can only be populated when CareTeam.participant.member is a Practitioner">
                <expression language="text/fhirpath" expression="onBehalfOf.exists() implies (member.resolve().iif(empty(), true, ofType(Practitioner).exists()))"/>
            </constraint>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why the care team exists" definition="Describes why the care team exists.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CareTeamReason" description="Indicates the reason for the care team." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why the care team exists" definition="Condition(s) that this care team addresses.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="managingOrganization" description="Organization responsible for the care team" definition="The organization responsible for the care team.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="telecom" description="A contact detail for the care team (that applies to all members)" definition="A central contact detail for the care team (that applies to all members)." comment="The ContactPoint.use code of home is not appropriate to use. These contacts are not the contact details of individual care team members.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="note" description="Comments made about the CareTeam" definition="Comments made about the CareTeam.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="member"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Patient" relatedKeyElement="member"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="member"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CareTeam.Participant" retrievable="false" baseType="QICore.BackboneElement">
        <element name="role" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Type of involvement" definition="Indicates specific responsibility of an individual within the care team, such as &quot;Primary care physician&quot;, &quot;Trained social worker counselor&quot;, &quot;Caregiver&quot;, etc." comment="Roles may sometimes be inferred by type of Practitioner.  These are relationships that hold only within the context of the care team.  General relationships should be handled as properties of the Patient resource directly." mustSupport="true">
            <binding description="Indicates specific responsibility of an individual within the care team, such as Primary physician, Team coordinator, Caregiver, etc." strength="Extensible"/>
        </element>
        <element name="member" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who is involved" definition="The specific person or organization who is participating/expected to participate in the care team." comment="Patient only needs to be listed if they have a role other than &quot;subject of care&quot;.&#10;&#10;Member is optional because some participants may be known only by their role, particularly in draft plans." mustSupport="true"/>
        <element name="onBehalfOf" elementType="QICore.Reference" description="Organization of the practitioner" definition="The organization of the practitioner."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Time period of participant" definition="Indicates when the specific member or organization did (or is intended to) come into effect and end.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-claim" label="QICore Claim" retrievable="true" primaryCodePath="type" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for claim" definition="A unique identifier assigned to this claim.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.ClaimStatus" target="%value.value" description="active | cancelled | draft | entered-in-error" definition="The status of the resource instance." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="ClaimStatus" description="A code specifying the state of the resource instance." strength="Required"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Category or discipline" definition="The category of claim, e.g. oral, pharmacy, vision, institutional, professional." comment="The majority of jurisdictions use: oral, pharmacy, vision, professional and institutional, or variants on those terms, as the general styles of claims. The valueset is extensible to accommodate other jurisdictional requirements.">
            <binding name="ClaimType" description="The type or discipline-style of the claim." strength="Extensible"/>
        </element>
        <element name="subType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="More granular claim type" definition="A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service." comment="This may contain the local bill type codes, for example the US UB-04 bill type code or the CMS bill type.">
            <binding name="ClaimSubType" description="A more granular claim typecode." strength="Example"/>
        </element>
        <element name="use" elementType="QICore.Use" target="%value.value" description="claim | preauthorization | predetermination" definition="A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.">
            <binding name="Use" description="The purpose of the Claim: predetermination, preauthorization, claim." strength="Required"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) The recipient of the products and services" definition="The party to whom the professional services and/or products have been supplied or are being considered and for whom actual or forecast reimbursement is sought."/>
        <element name="billablePeriod" target="FHIRHelpers.ToInterval(%value)" description="(QI-Core) Relevant time frame for the claim" definition="The period for which charges are being submitted." comment="Typically this would be today or in the past for a claim, and today or in the future for preauthorizations and predeterminations. Typically line item dates of service should fall within the billing period if one is specified.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="created" elementType="System.DateTime" target="%value.value" description="(QI-Core) Resource creation date" definition="The date this resource was created." comment="This field is independent of the date of creation of the resource as it may reflect the creation date of a source document prior to digitization. Typically for claims all services must be completed as of this date."/>
        <element name="enterer" elementType="QICore.Reference" description="Author of the claim" definition="Individual who created the claim, predetermination or preauthorization."/>
        <element name="insurer" elementType="QICore.Reference" description="Target" definition="The Insurer who is target of the request."/>
        <element name="provider" elementType="QICore.Reference" description="(QI-Core) Party responsible for the claim" definition="The provider which is responsible for the claim, predetermination or preauthorization." comment="Typically this field would be 1..1 where this party is responsible for the claim but not necessarily professionally responsible for the provision of the individual products and services listed below."/>
        <element name="priority" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Desired processing ugency" definition="The provider-required urgency of processing the request. Typical values include: stat, routine deferred." comment="If a claim processor is unable to complete the processing as per the priority then they should generate and error and not process the request.">
            <binding name="ProcessPriority" description="The timeliness with which processing is required: stat, normal, deferred." strength="Example"/>
        </element>
        <element name="fundsReserve" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="For whom to reserve funds" definition="A code to indicate whether and for whom funds are to be reserved for future claims." comment="This field is only used for preauthorizations.">
            <binding name="FundsReserve" description="For whom funds are to be reserved: (Patient, Provider, None)." strength="Example"/>
        </element>
        <element name="related" description="Prior or corollary claims" definition="Other claims which are related to this claim such as prior submissions or claims for related services or for the same event." comment="For example,  for the original treatment and follow-up exams.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.Related"/>
        </element>
        <element name="prescription" elementType="QICore.Reference" description="(QI-Core) Prescription authorizing services and products" definition="Prescription to support the dispensing of pharmacy, device or vision products."/>
        <element name="originalPrescription" elementType="QICore.Reference" description="Original prescription if superseded by fulfiller" definition="Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products." comment="For example, a physician may prescribe a medication which the pharmacy determines is contraindicated, or for which the patient has an intolerance, and therefore issues a new prescription for an alternate medication which has the same therapeutic intent. The prescription from the pharmacy becomes the 'prescription' and that from the physician becomes the 'original prescription'."/>
        <element name="payee" elementType="QICore.Claim.Payee" description="Recipient of benefits payable" definition="The party to be reimbursed for cost of the products and services according to the terms of the policy." comment="Often providers agree to receive the benefits payable to reduce the near-term costs to the patient. The insurer may decline to pay the provider and choose to pay the subscriber instead." mustSupport="false"/>
        <element name="referral" elementType="QICore.Reference" description="Treatment referral" definition="A reference to a referral resource." comment="The referral resource which lists the date, practitioner, reason and other supporting information." mustSupport="false"/>
        <element name="facility" elementType="QICore.Reference" description="Servicing facility" definition="Facility where the services were provided." mustSupport="false"/>
        <element name="careTeam" description="Members of the care team" definition="The members of the team who provided the products and services." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.CareTeam"/>
        </element>
        <element name="supportingInfo" description="Supporting information" definition="Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues." comment="Often there are multiple jurisdiction specific valuesets which are required.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.SupportingInfo"/>
        </element>
        <element name="diagnosis" description="Pertinent diagnosis information" definition="Information about diagnoses relevant to the claim items.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.Diagnosis"/>
        </element>
        <element name="procedure" description="Clinical procedures performed" definition="Procedures performed on the patient relevant to the billing items with the claim.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.Procedure"/>
        </element>
        <element name="insurance" description="Patient insurance information" definition="Financial instruments for reimbursement for the health care products and services specified on the claim." comment="All insurance coverages for the patient which may be applicable for reimbursement, of the products and services listed in the claim, are typically provided in the claim to allow insurers to confirm the ordering of the insurance coverages relative to local 'coordination of benefit' rules. One coverage (and only one) with 'focal=true' is to be used in the adjudication of this claim. Coverages appearing before the focal Coverage in the list, and where 'Coverage.subrogation=false', should provide a reference to the ClaimResponse containing the adjudication results of the prior claim.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.Insurance"/>
        </element>
        <element name="accident" elementType="QICore.Claim.Accident" description="Details of the event" definition="Details of an accident which resulted in injuries which required the products and services listed in the claim."/>
        <element name="item" description="Product or service provided" definition="A claim line. Either a simple  product or service or a 'group' of details which can each be a simple items or groups of sub-details.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.Item"/>
        </element>
        <element name="total" elementType="System.Decimal" target="%value.value" description="Total claim cost" definition="The total value of the all the items in the claim."/>
        <contextRelationship context="Practitioner" relatedKeyElement="enterer"/>
        <contextRelationship context="Practitioner" relatedKeyElement="provider"/>
        <contextRelationship context="Practitioner" relatedKeyElement="party"/>
        <contextRelationship context="Practitioner" relatedKeyElement="provider"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Patient" relatedKeyElement="party"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="Device" relatedKeyElement="udi"/>
        <contextRelationship context="Device" relatedKeyElement="udi"/>
        <contextRelationship context="Device" relatedKeyElement="udi"/>
        <contextRelationship context="Device" relatedKeyElement="udi"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="party"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Accident" retrievable="false" baseType="QICore.BackboneElement">
        <element name="date" elementType="System.Date" target="%value.value" description="When the incident occurred" definition="Date of an accident event  related to the products and services contained in the claim." comment="The date of the accident has to precede the dates of the products and services but within a reasonable timeframe."/>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The nature of the accident" definition="The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.">
            <binding name="AccidentType" description="Type of accident: work place, auto, etc." strength="Extensible"/>
        </element>
        <element name="location" target="FHIRHelpers.ToValue(%value)" description="Where the event occurred" definition="The physical location of the accident event.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Address"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.CareTeam" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="Order of care team" definition="A number to uniquely identify care team entries."/>
        <element name="provider" elementType="QICore.Reference" description="Practitioner or organization" definition="Member of the team who provided the product or service." mustSupport="false"/>
        <element name="responsible" elementType="System.Boolean" target="%value.value" description="Indicator of the lead practitioner" definition="The party who is billing and/or responsible for the claimed products or services." comment="Responsible might not be required when there is only a single provider listed."/>
        <element name="role" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Function within the team" definition="The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team." comment="Role might not be required when there is only a single provider listed.">
            <binding name="CareTeamRole" description="The role codes for the care team members." strength="Example"/>
        </element>
        <element name="qualification" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Practitioner credential or specialization" definition="The qualification of the practitioner which is applicable for this service.">
            <binding name="ProviderQualification" description="Provider professional qualifications." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Diagnosis" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="(QI-Core) Diagnosis instance identifier" definition="A number to uniquely identify diagnosis entries." comment="Diagnosis are presented in list order to their expected importance: primary, secondary, etc."/>
        <element name="diagnosis" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Nature of illness or problem" definition="The nature of illness or problem in a coded form or as a reference to an external defined Condition.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="ICD10" description="Example ICD10 Diagnostic codes." strength="Example"/>
        </element>
        <element name="type" target="FHIRHelpers.ToConcept(%value)" description="Timing or nature of the diagnosis" definition="When the condition was observed or the relative ranking." comment="For example: admitting, primary, secondary, discharge.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="DiagnosisType" description="The type of the diagnosis: admitting, principal, discharge." strength="Example"/>
        </element>
        <element name="onAdmission" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Present on admission" definition="Indication of whether the diagnosis was present on admission to a facility.">
            <binding description="Present on admission." strength="Required"/>
        </element>
        <element name="packageCode" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Package billing code" definition="A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system." comment="For example DRG (Diagnosis Related Group) or a bundled billing code. A patient may have a diagnosis of a Myocardial Infarction and a DRG for HeartAttack would be assigned. The Claim item (and possible subsequent claims) would refer to the DRG for those line items that were for services related to the heart attack event.">
            <binding name="DiagnosisRelatedGroup" description="The DRG codes associated with the diagnosis." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Insurance" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="Insurance instance identifier" definition="A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order."/>
        <element name="focal" elementType="System.Boolean" target="%value.value" description="Coverage to be used for adjudication" definition="A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true." comment="A patient may (will) have multiple insurance policies which provide reimbursement for healthcare services and products. For example a person may also be covered by their spouse's policy and both appear in the list (and may be from the same insurer). This flag will be set to true for only one of the listed policies and that policy will be used for adjudicating this claim. Other claims would be created to request adjudication against the other listed policies."/>
        <element name="identifier" elementType="QICore.Identifier" description="Pre-assigned Claim number" definition="The business identifier to be used when the claim is sent for adjudication against this insurance policy." comment="Only required in jurisdictions where insurers, rather than the provider, are required to send claims to  insurers that appear after them in the list. This element is not required when 'subrogation=true'."/>
        <element name="coverage" elementType="QICore.Reference" description="Insurance information" definition="Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system."/>
        <element name="businessArrangement" elementType="System.String" target="%value.value" description="Additional provider contract number" definition="A business agreement number established between the provider and the insurer for special business processing purposes."/>
        <element name="preAuthRef" target="%value.value" description="Prior authorization reference number" definition="Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization." comment="This value is an alphanumeric string that may be provided over the phone, via text, via paper, or within a ClaimResponse resource and is not a FHIR Identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="claimResponse" elementType="QICore.Reference" description="Adjudication results" definition="The result of the adjudication of the line items for the Coverage specified in this insurance." comment="Must not be specified when 'focal=true' for this insurance."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Item" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="Item instance identifier" definition="A number to uniquely identify item entries."/>
        <element name="careTeamSequence" target="%value.value" description="Applicable careTeam members" definition="CareTeam members related to this service or product.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="diagnosisSequence" target="%value.value" description="Applicable diagnoses" definition="Diagnosis applicable for this service or product.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="procedureSequence" target="%value.value" description="Applicable procedures" definition="Procedures applicable for this service or product.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="informationSequence" target="%value.value" description="Applicable exception and supporting information" definition="Exceptions, special conditions and supporting information applicable for this service or product.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="revenue" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Revenue or cost center code" definition="The type of revenue or cost center providing the product and/or service.">
            <binding name="RevenueCenter" description="Codes for the revenue or cost centers supplying the service and/or products." strength="Example"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Benefit classification" definition="Code to identify the general type of benefits under which products and services are provided." comment="Examples include Medical Care, Periodontics, Renal Dialysis, Vision Coverage.">
            <binding name="BenefitCategory" description="Benefit categories such as: oral-basic, major, glasses." strength="Example"/>
        </element>
        <element name="productOrService" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Billing, service, product, or drug code" definition="When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item." comment="If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.">
            <binding name="ServiceProduct" description="Allowable service and product codes." strength="Example"/>
        </element>
        <element name="modifier" target="FHIRHelpers.ToConcept(%value)" description="Product or service billing modifiers" definition="Item typification or modifiers codes to convey additional context for the product or service." comment="For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Modifiers" description="Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen." strength="Example"/>
        </element>
        <element name="programCode" target="FHIRHelpers.ToConcept(%value)" description="Program the product or service is provided under" definition="Identifies the program under which this may be recovered." comment="For example: Neonatal program, child dental program or drug users recovery program.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProgramCode" description="Program specific reason codes." strength="Example"/>
        </element>
        <element name="serviced" target="FHIRHelpers.ToValue(%value)" description="Date or dates of service or product delivery" definition="The date or dates when the service or product was supplied, performed or completed.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="location" target="FHIRHelpers.ToValue(%value)" description="Place of service or where product was supplied" definition="Where the product or service was provided.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Address"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="ServicePlace" description="Place of service: pharmacy, school, prison, etc." strength="Example"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Count of products or services" definition="The number of repetitions of a service or product."/>
        <element name="unitPrice" elementType="System.Decimal" target="%value.value" description="Fee, charge or cost per item" definition="If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."/>
        <element name="factor" elementType="System.Decimal" target="%value.value" description="Price scaling factor" definition="A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount." comment="To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10)."/>
        <element name="net" elementType="System.Decimal" target="%value.value" description="Total item cost" definition="The quantity times the unit price for an additional service or product or charge." comment="For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied."/>
        <element name="udi" description="Unique device identifier" definition="Unique Device Identifiers associated with this line item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Anatomical location" definition="Physical service site on the patient (limb, tooth, etc.)." comment="For example: Providing a tooth code, allows an insurer to identify a provider performing a filling on a tooth that was previously removed.">
            <binding name="OralSites" description="The code for the teeth, quadrant, sextant and arch." strength="Example"/>
        </element>
        <element name="subSite" target="FHIRHelpers.ToConcept(%value)" description="Anatomical sub-location" definition="A region or surface of the bodySite, e.g. limb region or tooth surface(s).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Surface" description="The code for the tooth surface and surface combinations." strength="Example"/>
        </element>
        <element name="encounter" description="(QI-Core) Encounters related to this billed item" definition="The Encounters during which this Claim was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="detail" description="Product or service provided" definition="A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.Item.Detail"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Item.Detail" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="Item instance identifier" definition="A number to uniquely identify item entries."/>
        <element name="revenue" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Revenue or cost center code" definition="The type of revenue or cost center providing the product and/or service.">
            <binding name="RevenueCenter" description="Codes for the revenue or cost centers supplying the service and/or products." strength="Example"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Benefit classification" definition="Code to identify the general type of benefits under which products and services are provided." comment="Examples include Medical Care, Periodontics, Renal Dialysis, Vision Coverage.">
            <binding name="BenefitCategory" description="Benefit categories such as: oral-basic, major, glasses." strength="Example"/>
        </element>
        <element name="productOrService" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Billing, service, product, or drug code" definition="When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item." comment="If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.">
            <binding name="ServiceProduct" description="Allowable service and product codes." strength="Example"/>
        </element>
        <element name="modifier" target="FHIRHelpers.ToConcept(%value)" description="Service/Product billing modifiers" definition="Item typification or modifiers codes to convey additional context for the product or service." comment="For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or out of office hours.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Modifiers" description="Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen." strength="Example"/>
        </element>
        <element name="programCode" target="FHIRHelpers.ToConcept(%value)" description="Program the product or service is provided under" definition="Identifies the program under which this may be recovered." comment="For example: Neonatal program, child dental program or drug users recovery program.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProgramCode" description="Program specific reason codes." strength="Example"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Count of products or services" definition="The number of repetitions of a service or product."/>
        <element name="unitPrice" elementType="System.Decimal" target="%value.value" description="Fee, charge or cost per item" definition="If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."/>
        <element name="factor" elementType="System.Decimal" target="%value.value" description="Price scaling factor" definition="A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount." comment="To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10)."/>
        <element name="net" elementType="System.Decimal" target="%value.value" description="Total item cost" definition="The quantity times the unit price for an additional service or product or charge." comment="For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied."/>
        <element name="udi" description="Unique device identifier" definition="Unique Device Identifiers associated with this line item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="subDetail" description="Product or service provided" definition="A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Claim.Item.Detail.SubDetail"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Item.Detail.SubDetail" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="Item instance identifier" definition="A number to uniquely identify item entries."/>
        <element name="revenue" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Revenue or cost center code" definition="The type of revenue or cost center providing the product and/or service.">
            <binding name="RevenueCenter" description="Codes for the revenue or cost centers supplying the service and/or products." strength="Example"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Benefit classification" definition="Code to identify the general type of benefits under which products and services are provided." comment="Examples include Medical Care, Periodontics, Renal Dialysis, Vision Coverage.">
            <binding name="BenefitCategory" description="Benefit categories such as: oral-basic, major, glasses." strength="Example"/>
        </element>
        <element name="productOrService" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Billing, service, product, or drug code" definition="When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item." comment="If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.">
            <binding name="ServiceProduct" description="Allowable service and product codes." strength="Example"/>
        </element>
        <element name="modifier" target="FHIRHelpers.ToConcept(%value)" description="Service/Product billing modifiers" definition="Item typification or modifiers codes to convey additional context for the product or service." comment="For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or out of office hours.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Modifiers" description="Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen." strength="Example"/>
        </element>
        <element name="programCode" target="FHIRHelpers.ToConcept(%value)" description="Program the product or service is provided under" definition="Identifies the program under which this may be recovered." comment="For example: Neonatal program, child dental program or drug users recovery program.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProgramCode" description="Program specific reason codes." strength="Example"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Count of products or services" definition="The number of repetitions of a service or product."/>
        <element name="unitPrice" elementType="System.Decimal" target="%value.value" description="Fee, charge or cost per item" definition="If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."/>
        <element name="factor" elementType="System.Decimal" target="%value.value" description="Price scaling factor" definition="A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount." comment="To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10)."/>
        <element name="net" elementType="System.Decimal" target="%value.value" description="Total item cost" definition="The quantity times the unit price for an additional service or product or charge." comment="For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied."/>
        <element name="udi" description="Unique device identifier" definition="Unique Device Identifiers associated with this line item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Payee" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Category of recipient" definition="Type of Party to be reimbursed: subscriber, provider, other.">
            <binding name="PayeeType" description="A code for the party to be reimbursed." strength="Example"/>
        </element>
        <element name="party" elementType="QICore.Reference" description="Recipient reference" definition="Reference to the individual or organization to whom any payment will be made." comment="Not required if the payee is 'subscriber' or 'provider'." mustSupport="false"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Procedure" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="(QI-Core) Procedure instance identifier" definition="A number to uniquely identify procedure entries."/>
        <element name="type" target="FHIRHelpers.ToConcept(%value)" description="Category of Procedure" definition="When the condition was observed or the relative ranking." comment="For example: primary, secondary.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureType" description="Example procedure type codes." strength="Example"/>
        </element>
        <element name="date" elementType="System.DateTime" target="%value.value" description="When the procedure was performed" definition="Date and optionally time the procedure was performed."/>
        <element name="procedure" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Specific clinical procedure" definition="The code or reference to a Procedure resource which identifies the clinical intervention performed.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="ICD10_Procedures" description="Example ICD10 Procedure codes." strength="Example"/>
        </element>
        <element name="udi" description="Unique device identifier" definition="Unique Device Identifiers associated with this line item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.Related" retrievable="false" baseType="QICore.BackboneElement">
        <element name="claim" elementType="QICore.Reference" description="Reference to the related claim" definition="Reference to a related claim."/>
        <element name="relationship" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How the reference claim is related" definition="A code to convey how the claims are related." comment="For example, prior claim or umbrella.">
            <binding name="RelatedClaimRelationship" description="Relationship of this claim to a related Claim." strength="Example"/>
        </element>
        <element name="reference" elementType="QICore.Identifier" description="File or case reference" definition="An alternate organizational reference to the case or file to which this particular claim pertains." comment="For example, Property/Casualty insurer claim # or Workers Compensation case # ."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Claim.SupportingInfo" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="Information instance identifier" definition="A number to uniquely identify supporting information entries."/>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Classification of the supplied information" definition="The general class of the information supplied: information; exception; accident, employment; onset, etc." comment="This may contain a category for the local bill type codes.">
            <binding name="InformationCategory" description="The valuset used for additional information category codes." strength="Example"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of information" definition="System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought.">
            <binding name="InformationCode" description="The valuset used for additional information codes." strength="Example"/>
        </element>
        <element name="timing" target="FHIRHelpers.ToValue(%value)" description="When it occurred" definition="The date when or period to which this information refers.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Data to be provided" definition="Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data." comment="Could be used to provide references to other resources, document. For example could contain a PDF in an Attachment of the Police Report for an Accident.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Attachment"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
        </element>
        <element name="reason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Explanation for the information" definition="Provides the reason in the situation where a reason code is required in addition to the content." comment="For example: the reason for the additional stay, or why a tooth is  missing.">
            <binding name="MissingReason" description="Reason codes for the missing teeth." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-claimresponse" label="QICore ClaimResponse" retrievable="true" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for a claim response" definition="A unique identifier assigned to this claim response.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.ClaimResponseStatus" target="%value.value" description="(QI-Core) active | cancelled | draft | entered-in-error" definition="The status of the resource instance." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="ClaimResponseStatus" description="A code specifying the state of the resource instance." strength="Required"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) More granular claim type" definition="A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service." comment="This may contain the local bill type codes, for example the US UB-04 bill type code or the CMS bill type.">
            <binding name="ClaimType" description="The type or discipline-style of the claim." strength="Extensible"/>
        </element>
        <element name="subType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="More granular claim type" definition="A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service." comment="This may contain the local bill type codes, for example the US UB-04 bill type code or the CMS bill type.">
            <binding name="ClaimSubType" description="A more granular claim typecode." strength="Example"/>
        </element>
        <element name="use" elementType="QICore.Use" target="%value.value" description="(QI-Core) claim | preauthorization | predetermination" definition="A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.">
            <binding name="Use" description="Claim, preauthorization, predetermination." strength="Required"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) The recipient of the products and services" definition="The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for facast reimbursement is sought."/>
        <element name="created" elementType="System.DateTime" target="%value.value" description="(QI-Core) Response creation date" definition="The date this resource was created."/>
        <element name="insurer" elementType="QICore.Reference" description="(QI-Core) Party responsible for reimbursement" definition="The party responsible for authorization, adjudication and reimbursement."/>
        <element name="requestor" elementType="QICore.Reference" description="(QI-Core) Party responsible for the claim" definition="The provider which is responsible for the claim, predetermination or preauthorization." comment="Typically this field would be 1..1 where this party is responsible for the claim but not necessarily professionally responsible for the provision of the individual products and services listed below."/>
        <element name="request" elementType="QICore.Reference" description="(QI-Core) Id of resource triggering adjudication" definition="Original request resource reference."/>
        <element name="outcome" elementType="QICore.RemittanceOutcome" target="%value.value" description="queued | complete | error | partial" definition="The outcome of the claim, predetermination, or preauthorization processing." comment="The resource may be used to indicate that: the request has been held (queued) for processing; that it has been processed and errors found (error); that no errors were found and that some of the adjudication has been undertaken (partial) or that all of the adjudication has been undertaken (complete).">
            <binding name="RemittanceOutcome" description="The result of the claim processing." strength="Required"/>
        </element>
        <element name="disposition" elementType="System.String" target="%value.value" description="Disposition Message" definition="A human readable description of the status of the adjudication."/>
        <element name="preAuthRef" elementType="System.String" target="%value.value" description="Preauthorization reference" definition="Reference from the Insurer which is used in later communications which refers to this adjudication." comment="This value is only present on preauthorization adjudications."/>
        <element name="preAuthPeriod" target="FHIRHelpers.ToInterval(%value)" description="Preauthorization reference effective period" definition="The time frame during which this authorization is effective.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="payeeType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Party to be paid any benefits payable" definition="Type of Party to be reimbursed: subscriber, provider, other.">
            <binding name="PayeeType" description="A code for the party to be reimbursed." strength="Example"/>
        </element>
        <element name="item" description="(QI-Core) Adjudication for claim line items" definition="A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item"/>
        </element>
        <element name="addItem" description="Insurer added line items" definition="The first-tier service adjudications for payor added product or service lines.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.AddItem"/>
        </element>
        <element name="adjudication" description="Header-level adjudication" definition="The adjudication results which are presented at the header level rather than at the line-item or add-item levels.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Adjudication"/>
        </element>
        <element name="total" description="Adjudication totals" definition="Categorized monetary totals for the adjudication." comment="Totals for amounts submitted, co-pays, benefits payable etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Total"/>
        </element>
        <element name="payment" elementType="QICore.ClaimResponse.Payment" description="Payment Details" definition="Payment details for the adjudication of the claim."/>
        <element name="fundsReserve" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Funds reserved status" definition="A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom." comment="Fund would be release by a future claim quoting the preAuthRef of this response. Examples of values include: provider, patient, none.">
            <binding name="FundsReserve" description="For whom funds are to be reserved: (Patient, Provider, None)." strength="Example"/>
        </element>
        <element name="formCode" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Printed form identifier" definition="A code for the form to be used for printing the content." comment="May be needed to identify specific jurisdictional forms.">
            <binding name="Forms" description="The forms codes." strength="Example"/>
        </element>
        <element name="form" elementType="QICore.Attachment" description="Printed reference or actual form" definition="The actual form, by reference or inclusion, for printing the content or an EOB." comment="Needed to permit insurers to include the actual form."/>
        <element name="processNote" description="Note concerning adjudication" definition="A note that describes or explains adjudication results in a human readable form.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.ProcessNote"/>
        </element>
        <element name="communicationRequest" description="Request for additional information" definition="Request for additional supporting or authorizing information." comment="For example: professional reports, documents, images, clinical resources, or accident reports.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="insurance" description="Patient insurance information" definition="Financial instruments for reimbursement for the health care products and services specified on the claim." comment="All insurance coverages for the patient which may be applicable for reimbursement, of the products and services listed in the claim, are typically provided in the claim to allow insurers to confirm the ordering of the insurance coverages relative to local 'coordination of benefit' rules. One coverage (and only one) with 'focal=true' is to be used in the adjudication of this claim. Coverages appearing before the focal Coverage in the list, and where 'subrogation=false', should provide a reference to the ClaimResponse containing the adjudication results of the prior claim.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Insurance"/>
        </element>
        <element name="error" description="Processing errors" definition="Errors encountered during the processing of the adjudication." comment="If the request contains errors then an error element should be provided and no adjudication related sections (item, addItem, or payment) should be present.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Error"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="requestor"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.AddItem" retrievable="false" baseType="QICore.BackboneElement">
        <element name="itemSequence" target="%value.value" description="Item sequence number" definition="Claim items which this service line is intended to replace.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="detailSequence" target="%value.value" description="Detail sequence number" definition="The sequence number of the details within the claim item which this line is intended to replace.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="subdetailSequence" target="%value.value" description="Subdetail sequence number" definition="The sequence number of the sub-details within the details within the claim item which this line is intended to replace.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="provider" description="Authorized providers" definition="The providers who are authorized for the services rendered to the patient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="productOrService" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Billing, service, product, or drug code" definition="When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item." comment="If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.">
            <binding name="ServiceProduct" description="Allowable service and product codes." strength="Example"/>
        </element>
        <element name="modifier" target="FHIRHelpers.ToConcept(%value)" description="Service/Product billing modifiers" definition="Item typification or modifiers codes to convey additional context for the product or service." comment="For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Modifiers" description="Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen." strength="Example"/>
        </element>
        <element name="programCode" target="FHIRHelpers.ToConcept(%value)" description="Program the product or service is provided under" definition="Identifies the program under which this may be recovered." comment="For example: Neonatal program, child dental program or drug users recovery program.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProgramCode" description="Program specific reason codes." strength="Example"/>
        </element>
        <element name="serviced" target="FHIRHelpers.ToValue(%value)" description="Date or dates of service or product delivery" definition="The date or dates when the service or product was supplied, performed or completed.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="location" target="FHIRHelpers.ToValue(%value)" description="Place of service or where product was supplied" definition="Where the product or service was provided.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Address"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="ServicePlace" description="Place of service: pharmacy, school, prison, etc." strength="Example"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Count of products or services" definition="The number of repetitions of a service or product."/>
        <element name="unitPrice" elementType="System.Decimal" target="%value.value" description="Fee, charge or cost per item" definition="If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."/>
        <element name="factor" elementType="System.Decimal" target="%value.value" description="Price scaling factor" definition="A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount." comment="To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10)."/>
        <element name="net" elementType="System.Decimal" target="%value.value" description="Total item cost" definition="The quantity times the unit price for an additional service or product or charge." comment="For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied."/>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Anatomical location" definition="Physical service site on the patient (limb, tooth, etc.)." comment="For example: Providing a tooth code allows an insurer to identify a provider performing a filling on a tooth that was previously removed.">
            <binding name="OralSites" description="The code for the teeth, quadrant, sextant and arch." strength="Example"/>
        </element>
        <element name="subSite" target="FHIRHelpers.ToConcept(%value)" description="Anatomical sub-location" definition="A region or surface of the bodySite, e.g. limb region or tooth surface(s).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Surface" description="The code for the tooth surface and surface combinations." strength="Example"/>
        </element>
        <element name="noteNumber" target="%value.value" description="Applicable note numbers" definition="The numbers associated with notes below which apply to the adjudication of this item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="adjudication" description="Added items adjudication" definition="The adjudication results.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Adjudication"/>
        </element>
        <element name="detail" description="Insurer added line details" definition="The second-tier service adjudications for payor added services.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.AddItem.Detail"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.AddItem.Detail" retrievable="false" baseType="QICore.BackboneElement">
        <element name="productOrService" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Billing, service, product, or drug code" definition="When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item." comment="If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.">
            <binding name="ServiceProduct" description="Allowable service and product codes." strength="Example"/>
        </element>
        <element name="modifier" target="FHIRHelpers.ToConcept(%value)" description="Service/Product billing modifiers" definition="Item typification or modifiers codes to convey additional context for the product or service." comment="For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Modifiers" description="Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen." strength="Example"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Count of products or services" definition="The number of repetitions of a service or product."/>
        <element name="unitPrice" elementType="System.Decimal" target="%value.value" description="Fee, charge or cost per item" definition="If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."/>
        <element name="factor" elementType="System.Decimal" target="%value.value" description="Price scaling factor" definition="A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount." comment="To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10)."/>
        <element name="net" elementType="System.Decimal" target="%value.value" description="Total item cost" definition="The quantity times the unit price for an additional service or product or charge." comment="For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied."/>
        <element name="noteNumber" target="%value.value" description="Applicable note numbers" definition="The numbers associated with notes below which apply to the adjudication of this item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="adjudication" description="Added items detail adjudication" definition="The adjudication results.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Adjudication"/>
        </element>
        <element name="subDetail" description="Insurer added line items" definition="The third-tier service adjudications for payor added services.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.AddItem.Detail.SubDetail"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.AddItem.Detail.SubDetail" retrievable="false" baseType="QICore.BackboneElement">
        <element name="productOrService" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Billing, service, product, or drug code" definition="When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item." comment="If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.">
            <binding name="ServiceProduct" description="Allowable service and product codes." strength="Example"/>
        </element>
        <element name="modifier" target="FHIRHelpers.ToConcept(%value)" description="Service/Product billing modifiers" definition="Item typification or modifiers codes to convey additional context for the product or service." comment="For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Modifiers" description="Item type or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or an appliance was lost or stolen." strength="Example"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Count of products or services" definition="The number of repetitions of a service or product."/>
        <element name="unitPrice" elementType="System.Decimal" target="%value.value" description="Fee, charge or cost per item" definition="If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group."/>
        <element name="factor" elementType="System.Decimal" target="%value.value" description="Price scaling factor" definition="A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount." comment="To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10)."/>
        <element name="net" elementType="System.Decimal" target="%value.value" description="Total item cost" definition="The quantity times the unit price for an additional service or product or charge." comment="For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied."/>
        <element name="noteNumber" target="%value.value" description="Applicable note numbers" definition="The numbers associated with notes below which apply to the adjudication of this item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="adjudication" description="Added items detail adjudication" definition="The adjudication results.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Adjudication"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Error" retrievable="false" baseType="QICore.BackboneElement">
        <element name="itemSequence" elementType="System.Integer" target="%value.value" description="Item sequence number" definition="The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure."/>
        <element name="detailSequence" elementType="System.Integer" target="%value.value" description="Detail sequence number" definition="The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure."/>
        <element name="subDetailSequence" elementType="System.Integer" target="%value.value" description="Subdetail sequence number" definition="The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure."/>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Error code detailing processing issues" definition="An error code, from a specified code system, which details why the claim could not be adjudicated.">
            <binding name="AdjudicationError" description="The adjudication error codes." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Insurance" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="Insurance instance identifier" definition="A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order."/>
        <element name="focal" elementType="System.Boolean" target="%value.value" description="Coverage to be used for adjudication" definition="A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true." comment="A patient may (will) have multiple insurance policies which provide reimbursement for healthcare services and products. For example a person may also be covered by their spouse's policy and both appear in the list (and may be from the same insurer). This flag will be set to true for only one of the listed policies and that policy will be used for adjudicating this claim. Other claims would be created to request adjudication against the other listed policies."/>
        <element name="coverage" elementType="QICore.Reference" description="Insurance information" definition="Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system."/>
        <element name="businessArrangement" elementType="System.String" target="%value.value" description="Additional provider contract number" definition="A business agreement number established between the provider and the insurer for special business processing purposes."/>
        <element name="claimResponse" elementType="QICore.Reference" description="Adjudication results" definition="The result of the adjudication of the line items for the Coverage specified in this insurance." comment="Must not be specified when 'focal=true' for this insurance."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Item" retrievable="false" baseType="QICore.BackboneElement">
        <element name="itemSequence" elementType="System.Integer" target="%value.value" description="Claim item instance identifier" definition="A number to uniquely reference the claim item entries."/>
        <element name="noteNumber" target="%value.value" description="Applicable note numbers" definition="The numbers associated with notes below which apply to the adjudication of this item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="adjudication" description="(QI-Core) Adjudication details" definition="If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Adjudication"/>
        </element>
        <element name="detail" description="Adjudication for claim details" definition="A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Detail"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Item.Adjudication" retrievable="false" baseType="QICore.BackboneElement">
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) This code is fixed to 'submitted' to indicate that the adjudication result is on what was submitted." definition="A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item." comment="For example codes indicating: Co-Pay, deductible, eligible, benefit, tax, etc.">
            <binding name="Adjudication" description="The adjudication codes." strength="Example"/>
        </element>
        <element name="reason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Explanation of adjudication outcome" definition="A code supporting the understanding of the adjudication result and explaining variance from expected amount." comment="For example may indicate that the funds for this benefit type have been exhausted.">
            <binding name="AdjudicationReason" description="The adjudication reason codes." strength="Example"/>
        </element>
        <element name="amount" elementType="System.Decimal" target="%value.value" description="(QI-Core) Monetary amount" definition="Monetary amount associated with the category." comment="For example: amount submitted, eligible amount, co-payment, and benefit payable."/>
        <element name="value" elementType="System.Decimal" target="%value.value" description="Non-monetary value" definition="A non-monetary value associated with the category. Mutually exclusive to the amount element above." comment="For example: eligible percentage or co-payment percentage."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Item.Detail" retrievable="false" baseType="QICore.BackboneElement">
        <element name="detailSequence" elementType="System.Integer" target="%value.value" description="(QI-Core) Claim detail instance identifier" definition="A number to uniquely reference the claim detail entry."/>
        <element name="noteNumber" target="%value.value" description="Applicable note numbers" definition="The numbers associated with notes below which apply to the adjudication of this item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="adjudication" description="Detail level adjudication details" definition="The adjudication results.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Adjudication"/>
        </element>
        <element name="subDetail" description="Adjudication for claim sub-details" definition="A sub-detail adjudication of a simple product or service.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Detail.SubDetail"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Item.Detail.SubDetail" retrievable="false" baseType="QICore.BackboneElement">
        <element name="subDetailSequence" elementType="System.Integer" target="%value.value" description="Claim sub-detail instance identifier" definition="A number to uniquely reference the claim sub-detail entry."/>
        <element name="noteNumber" target="%value.value" description="Applicable note numbers" definition="The numbers associated with notes below which apply to the adjudication of this item.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Integer"/>
        </element>
        <element name="adjudication" description="Subdetail level adjudication details" definition="The adjudication results.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ClaimResponse.Item.Adjudication"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Payment" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Partial or complete payment" definition="Whether this represents partial or complete payment of the benefits payable.">
            <binding name="PaymentType" description="The type (partial, complete) of the payment." strength="Example"/>
        </element>
        <element name="adjustment" elementType="System.Decimal" target="%value.value" description="Payment adjustment for non-claim issues" definition="Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication." comment="Insurers will deduct amounts owing from the provider (adjustment), such as a prior overpayment, from the amount owing to the provider (benefits payable) when payment is made to the provider."/>
        <element name="adjustmentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Explanation for the adjustment" definition="Reason for the payment adjustment.">
            <binding name="PaymentAdjustmentReason" description="Payment Adjustment reason codes." strength="Example"/>
        </element>
        <element name="date" elementType="System.Date" target="%value.value" description="Expected date of payment" definition="Estimated date the payment will be issued or the actual issue date of payment."/>
        <element name="amount" elementType="System.Decimal" target="%value.value" description="Payable amount after adjustment" definition="Benefits payable less any payment adjustment."/>
        <element name="identifier" elementType="QICore.Identifier" description="Business identifier for the payment" definition="Issuer's unique identifier for the payment instrument." comment="For example: EFT number or check number."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.ProcessNote" retrievable="false" baseType="QICore.BackboneElement">
        <element name="number" elementType="System.Integer" target="%value.value" description="Note instance identifier" definition="A number to uniquely identify a note entry."/>
        <element name="type" elementType="QICore.NoteType" target="%value.value" description="display | print | printoper" definition="The business purpose of the note text.">
            <binding name="NoteType" description="The presentation types of notes." strength="Required"/>
        </element>
        <element name="text" elementType="System.String" target="%value.value" description="Note explanatory text" definition="The explanation or description associated with the processing."/>
        <element name="language" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Language of the text" definition="A code to define the language used in the text of the note." comment="Only required if the language is different from the resource language.">
            <binding name="Language" description="A human language." strength="Preferred"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponse.Total" retrievable="false" baseType="QICore.BackboneElement">
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of adjudication information" definition="A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item." comment="For example codes indicating: Co-Pay, deductible, eligible, benefit, tax, etc.">
            <binding name="Adjudication" description="The adjudication codes." strength="Example"/>
        </element>
        <element name="amount" elementType="System.Decimal" target="%value.value" description="Financial total for the category" definition="Monetary total amount associated with the category."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimResponseStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ClaimStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Communication" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-communication" label="QICore Communication" retrievable="true" primaryCodePath="topic" baseType="QICore.DomainResource">
        <element name="identifier" description="Unique identifier" definition="Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="Request fulfilled by this communication" definition="An order, proposal or plan fulfilled in whole or in part by this Communication." comment="This must point to some sort of a 'Request' resource, such as CarePlan, CommunicationRequest, ServiceRequest, MedicationRequest, etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of this action" definition="Part of this action.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="inResponseTo" description="Reply to" definition="Prior communication that this communication is in response to.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core) preparation | in-progress | on-hold | stopped | completed | entered-in-error | unknown" definition="The status of the transmission." comment="This element is labeled as a modifier because the status contains the codes aborted and entered-in-error that mark the communication as not currently valid.">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="Captures the reason for the current state of the Communication." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;not-done&quot;, &quot;suspended&quot; or &quot;aborted&quot;. The reason for performing the event at all is captured in reasonCode, not here.">
            <binding name="CommunicationNotDoneReason" description="Codes for the reason why a communication did not happen." strength="Example"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="Message category" definition="The type of message conveyed such as alert, notification, reminder, instruction, etc." comment="There may be multiple axes of categorization and one communication may serve multiple purposes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationCategory" description="Codes for general categories of communications such as alerts, instructions, etc." strength="Example"/>
        </element>
        <element name="priority" elementType="QICore.CommunicationPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Characterizes how quickly the planned or in progress communication must be addressed. Includes concepts such as stat, urgent, routine." comment="Used to prioritize workflow (such as which communication to read first) when the communication is planned or in progress.">
            <binding name="CommunicationPriority" description="Codes indicating the relative importance of a communication." strength="Required"/>
        </element>
        <element name="medium" target="FHIRHelpers.ToConcept(%value)" description="A channel of communication" definition="A channel that was used for this communication (e.g. email, fax).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationMedium" description="Codes for communication mediums such as phone, fax, email, in person, etc." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Focus of message" definition="The patient or group that was the focus of this communication."/>
        <element name="topic" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Description of the purpose/content" definition="Description of the purpose/content, similar to a subject line in an email." comment="Communication.topic.text can be used without any codings.">
            <binding strength="Preferred"/>
        </element>
        <element name="about" description="Resources that pertain to this communication" definition="Other resources that pertain to this communication and to which this communication should be associated." comment="Don't use Communication.about element when a more specific element exists, such as basedOn or reasonReference.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this Communication was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter."/>
        <element name="sent" elementType="System.DateTime" target="%value.value" description="(QI-Core) When sent" definition="The time when this communication was sent."/>
        <element name="received" elementType="System.DateTime" target="%value.value" description="(QI-Core) When received" definition="The time when this communication arrived at the destination."/>
        <element name="recipient" description="(QI-Core) Message recipient" definition="The entity (e.g. person, organization, clinical information system, care team or device) which was the target of the communication. If receipts need to be tracked by an individual, a separate resource instance will need to be created for each recipient.  Multiple recipient communications are intended where either receipts are not tracked (e.g. a mass mail-out) or a receipt is captured in aggregate (all emails confirmed received by a particular time).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="sender" elementType="QICore.Reference" description="(QI-Core) Message sender" definition="The entity (e.g. person, organization, clinical information system, or device) which was the source of the communication."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Indication for message" definition="The reason or justification for the communication." comment="Textual reasons can be captured using reasonCode.text.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationReason" description="Codes for describing reasons for the occurrence of a communication." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why was communication done?" definition="Indicates another resource whose existence justifies this communication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="payload" description="Message payload" definition="Text, attachment(s), or resource(s) that was communicated to the recipient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Communication.Payload"/>
        </element>
        <element name="note" description="Comments made about the communication" definition="Additional notes or commentary about the communication by the sender, receiver or other interested parties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="sender"/>
        <contextRelationship context="Practitioner" relatedKeyElement="recipient"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Patient" relatedKeyElement="sender"/>
        <contextRelationship context="Patient" relatedKeyElement="recipient"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="Device" relatedKeyElement="sender"/>
        <contextRelationship context="Device" relatedKeyElement="recipient"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="sender"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="recipient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Communication.Payload" retrievable="false" baseType="QICore.BackboneElement">
        <element name="content" target="FHIRHelpers.ToValue(%value)" description="Message part content" definition="A communicated content (or for multi-part communications, one portion of the communication).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Attachment"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CommunicationNotDone" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-communicationnotdone" label="QICore Communication Not Done" target="Communication" retrievable="true" primaryCodePath="topic" baseType="QICore.DomainResource">
        <element name="recorded" elementType="QICore.NotDoneRecorded" target="%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-recorded'].value.value" description="(QI-Core) Extension" definition="Captures the recorded date of the event."/>
        <element name="identifier" description="Unique identifier" definition="Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="Request fulfilled by this communication" definition="An order, proposal or plan fulfilled in whole or in part by this Communication." comment="This must point to some sort of a 'Request' resource, such as CarePlan, CommunicationRequest, ServiceRequest, MedicationRequest, etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of this action" definition="Part of this action.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="inResponseTo" description="Reply to" definition="Prior communication that this communication is in response to.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.CommunicationStatus" target="%value.value" description="(QI-Core) preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown" definition="The status of the transmission." comment="This element is labeled as a modifier because the status contains the codes aborted and entered-in-error that mark the communication as not currently valid.">
            <binding name="CommunicationStatus" description="The status of the communication." strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Reason for current status" definition="Captures the reason for the current state of the Communication." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;not-done&quot;, &quot;suspended&quot; or &quot;aborted&quot;. The reason for performing the event at all is captured in reasonCode, not here.">
            <binding strength="Extensible"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="Message category" definition="The type of message conveyed such as alert, notification, reminder, instruction, etc." comment="There may be multiple axes of categorization and one communication may serve multiple purposes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationCategory" description="Codes for general categories of communications such as alerts, instructions, etc." strength="Example"/>
        </element>
        <element name="priority" elementType="QICore.CommunicationPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Characterizes how quickly the planned or in progress communication must be addressed. Includes concepts such as stat, urgent, routine." comment="Used to prioritize workflow (such as which communication to read first) when the communication is planned or in progress.">
            <binding name="CommunicationPriority" description="Codes indicating the relative importance of a communication." strength="Required"/>
        </element>
        <element name="medium" target="FHIRHelpers.ToConcept(%value)" description="A channel of communication" definition="A channel that was used for this communication (e.g. email, fax).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationMedium" description="Codes for communication mediums such as phone, fax, email, in person, etc." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Focus of message" definition="The patient or group that was the focus of this communication."/>
        <element name="topic" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.topic.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(QI-Core) Description of the purpose/content" definition="Description of the purpose/content, similar to a subject line in an email." comment="Communication.topic.text can be used without any codings.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding name="CommunicationTopic" description="Codes describing the purpose or content of the communication." strength="Preferred"/>
        </element>
        <element name="about" description="Resources that pertain to this communication" definition="Other resources that pertain to this communication and to which this communication should be associated." comment="Don't use Communication.about element when a more specific element exists, such as basedOn or reasonReference.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this Communication was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter."/>
        <element name="sent" elementType="System.DateTime" target="%value.value" description="When sent" definition="The time when this communication was sent."/>
        <element name="received" elementType="System.DateTime" target="%value.value" description="When received" definition="The time when this communication arrived at the destination."/>
        <element name="recipient" description="Message recipient" definition="The entity (e.g. person, organization, clinical information system, care team or device) which was the target of the communication. If receipts need to be tracked by an individual, a separate resource instance will need to be created for each recipient.  Multiple recipient communications are intended where either receipts are not tracked (e.g. a mass mail-out) or a receipt is captured in aggregate (all emails confirmed received by a particular time).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="sender" elementType="QICore.Reference" description="Message sender" definition="The entity (e.g. person, organization, clinical information system, or device) which was the source of the communication."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Indication for message" definition="The reason or justification for the communication." comment="Textual reasons can be captured using reasonCode.text.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationReason" description="Codes for describing reasons for the occurrence of a communication." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why was communication done?" definition="Indicates another resource whose existence justifies this communication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="payload" description="Message payload" definition="Text, attachment(s), or resource(s) that was communicated to the recipient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Communication.Payload"/>
        </element>
        <element name="note" description="Comments made about the communication" definition="Additional notes or commentary about the communication by the sender, receiver or other interested parties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CommunicationPriority" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CommunicationRequest" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-communicationrequest" label="QICore CommunicationRequest" retrievable="true" primaryCodePath="category" baseType="QICore.DomainResource">
        <element name="identifier" description="Unique identifier" definition="Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan or proposal" definition="A plan or proposal that is fulfilled in whole or in part by this request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="replaces" description="Request(s) replaced by this request" definition="Completed or terminated request(s) whose function is taken by this new request." comment="The replacement could be because the initial request was immediately rejected (due to an issue) or because the previous request was completed, but the need for the action described by the request remains ongoing.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="groupIdentifier" elementType="QICore.Identifier" description="Composite request this is part of" definition="A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form." comment="Requests are linked either by a &quot;basedOn&quot; relationship (i.e. one request is fulfilling another) or by having a common requisition.  Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation."/>
        <element name="status" elementType="QICore.CommunicationRequestStatus" target="%value.value" description="(QI-Core) draft | active | on-hold | revoked | completed | entered-in-error | unknown" definition="The status of the proposal or order.">
            <binding name="CommunicationRequestStatus" description="The status of the communication request." strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="Captures the reason for the current state of the CommunicationRequest." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;suspended&quot; or &quot;cancelled&quot;.  The reason why the CommunicationRequest was created at all is captured in reasonCode, not here.  [distinct reason codes for different statuses can be enforced using invariants if they are universal bindings].">
            <binding name="CommunicationRequestStatusReason" description="Codes identifying the reason for the current state of a request." strength="Example"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Message category" definition="The type of message to be sent such as alert, notification, reminder, instruction, etc." comment="There may be multiple axes of categorization and one communication request may serve multiple purposes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Preferred"/>
        </element>
        <element name="priority" elementType="QICore.CommunicationPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.">
            <binding name="CommunicationPriority" description="Codes indicating the relative importance of a communication request." strength="Required"/>
        </element>
        <element name="doNotPerform" elementType="System.Boolean" target="%value.value" description="(QI-Core) True if request is prohibiting action" definition="If true indicates that the CommunicationRequest is asking for the specified action to *not* occur." comment="The attributes provided with the request qualify what is not to be done."/>
        <element name="medium" target="FHIRHelpers.ToConcept(%value)" description="A channel of communication" definition="A channel that was used for this communication (e.g. email, fax).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationMedium" description="Codes for communication mediums such as phone, fax, email, in person, etc." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Focus of message" definition="The patient or group that is the focus of this communication request."/>
        <element name="about" description="Resources that pertain to this communication request" definition="Other resources that pertain to this communication request and to which this communication request should be associated." comment="Don't use CommunicationRequest.about element when a more specific element exists, such as basedOn, reasonReference, or replaces.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="(QI-Core) Encounter created as part of" definition="The Encounter during which this CommunicationRequest was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter."/>
        <element name="payload" description="Message payload" definition="Text, attachment(s), or resource(s) to be communicated to the recipient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.CommunicationRequest.Payload"/>
        </element>
        <element name="occurrence" target="FHIRHelpers.ToValue(%value)" description="When scheduled" definition="The time when this communication is to occur.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="When request transitioned to being actionable" definition="For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation."/>
        <element name="requester" elementType="QICore.Reference" description="Who/what is requesting service" definition="The device, individual, or organization who initiated the request and has responsibility for its activation."/>
        <element name="recipient" description="(QI-Core) Message recipient" definition="The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="sender" elementType="QICore.Reference" description="(QI-Core) Message sender" definition="The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why is communication needed?" definition="Describes why the request is being made in coded or textual form." comment="Textual reasons can be captured using reasonCode.text.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="CommunicationReason" description="Codes for describing reasons for the occurrence of a communication." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why is communication needed?" definition="Indicates another resource whose existence justifies this request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Comments made about communication request" definition="Comments made about the request by the requester, sender, recipient, subject or other participants.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="sender"/>
        <contextRelationship context="Practitioner" relatedKeyElement="recipient"/>
        <contextRelationship context="Practitioner" relatedKeyElement="requester"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Patient" relatedKeyElement="sender"/>
        <contextRelationship context="Patient" relatedKeyElement="recipient"/>
        <contextRelationship context="Patient" relatedKeyElement="requester"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="Device" relatedKeyElement="sender"/>
        <contextRelationship context="Device" relatedKeyElement="recipient"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="sender"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="recipient"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="requester"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CommunicationRequest.Payload" retrievable="false" baseType="QICore.BackboneElement">
        <element name="content" target="FHIRHelpers.ToValue(%value)" description="Message part content" definition="The communicated content (or for multi-part communications, one portion of the communication).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Attachment"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CommunicationRequestStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CommunicationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Condition.Evidence" retrievable="false" baseType="QICore.BackboneElement">
        <element name="code" target="FHIRHelpers.ToConcept(%value)" description="Manifestation/symptom" definition="A manifestation or symptom that led to the recording of this condition.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ManifestationOrSymptom" description="Codes that describe the manifestation or symptoms of a condition." strength="Example"/>
        </element>
        <element name="detail" description="Supporting information found elsewhere" definition="Links to other relevant information, including pathology reports.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Condition.Stage" retrievable="false" baseType="QICore.BackboneElement">
        <element name="summary" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Simple summary (disease specific)" definition="A simple summary of the stage such as &quot;Stage 3&quot;. The determination of the stage is disease-specific.">
            <binding name="ConditionStage" description="Codes describing condition stages (e.g. Cancer stages)." strength="Example"/>
        </element>
        <element name="assessment" description="Formal record of assessment" definition="Reference to a formal record of the evidence on which the staging assessment is based.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Kind of staging" definition="The kind of staging, such as pathological or clinical staging.">
            <binding name="ConditionStageType" description="Codes describing the kind of condition staging (e.g. clinical or pathological)." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ConditionEncounterDiagnosis" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition-encounter-diagnosis" label="QICore Condition Encounter Diagnosis" target="Condition" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="assertedDate" elementType="QICore.assertedDate" target="%parent.extension[url='http://hl7.org/fhir/StructureDefinition/condition-assertedDate'].value.value" description="(USCDI) Date the condition was first asserted" definition="The date on which the existence of the Condition was first asserted or acknowledged." comment="The assertedDate is in the context of the recording practitioner and might not be the same as the recordedDate." mustSupport="true"/>
        <element name="identifier" description="External Ids for this condition" definition="Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="clinicalStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) active | recurrence | relapse | inactive | remission | resolved" definition="The clinical status of the condition." comment="The data type is CodeableConcept because clinicalStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="verificationStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) unconfirmed | provisional | differential | confirmed | refuted | entered-in-error" definition="The verification status to support the clinical status of the condition." comment="verificationStatus is not required.  For example, when a patient has abdominal pain in the ED, there is not likely going to be a verification status.&#10;The data type is CodeableConcept because verificationStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) category codes" definition="A category assigned to the condition." comment="The categorization is often highly contextual and may appear poorly differentiated or not very useful in other contexts." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ConditionCategory" description="A category assigned to the condition." strength="Extensible"/>
        </element>
        <element name="us-core" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) encounter-diagnosis" definition="A category assigned to the condition." comment="The categorization is often highly contextual and may appear poorly differentiated or not very useful in other contexts." mustSupport="true">
            <binding name="ConditionCategory" description="A category assigned to the condition." strength="Extensible"/>
        </element>
        <element name="severity" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Subjective severity of condition" definition="A subjective assessment of the severity of the condition as evaluated by the clinician." comment="Coding of the severity with a terminology is preferred, where possible.">
            <binding name="ConditionSeverity" description="A subjective assessment of the severity of the condition as evaluated by the clinician." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Identification of the condition, problem or diagnosis" definition="Identification of the condition, problem or diagnosis." mustSupport="true">
            <binding description="Valueset to describe the actual problem experienced by the patient" strength="Extensible"/>
        </element>
        <element name="bodySite" target="FHIRHelpers.ToConcept(%value)" description="Anatomical location, if relevant" definition="The anatomical location where this condition manifests itself." comment="Only used if not implicit in code found in Condition.code. If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).  May be a summary code, or a reference to a very precise definition of the location, or both.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who has the condition?" definition="Indicates the patient or group who the condition record is associated with." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="(QI-Core)(USCDI) Encounter created as part of" definition="The Encounter during which this Condition was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter. This record indicates the encounter this particular record is associated with.  In the case of a &quot;new&quot; diagnosis reflecting ongoing/revised information about the condition, this might be distinct from the first encounter in which the underlying condition was first &quot;known&quot;." mustSupport="true"/>
        <element name="onset" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Estimated or actual date, date-time, or age" definition="Estimated or actual date or date-time  the condition began, in the opinion of the clinician." comment="Age is generally used when the patient reports an age at which the Condition began to occur." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="abatement" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) When in resolution/remission" definition="The date or estimated date that the condition resolved or went into remission. This is called &quot;abatement&quot; because of the many overloaded connotations associated with &quot;remission&quot; or &quot;resolution&quot; - Conditions are never really resolved, but they can abate." comment="There is no explicit distinction between resolution and remission because in many cases the distinction is not clear. Age is generally used when the patient reports an age at which the Condition abated.  If there is no abatement element, it is unknown whether the condition has resolved or entered remission; applications and users should generally assume that the condition is still valid.  When abatementString exists, it implies the condition is abated." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="recordedDate" elementType="System.DateTime" target="%value.value" description="(USCDI) Date record was first recorded" definition="The recordedDate represents when this particular Condition record was created in the system, which is often a system-generated date." mustSupport="true"/>
        <element name="recorder" elementType="QICore.Reference" description="Who recorded the condition" definition="Individual who recorded the record and takes responsibility for its content."/>
        <element name="asserter" elementType="QICore.Reference" description="Person who asserts this condition" definition="Individual who is making the condition statement."/>
        <element name="stage" description="Stage/grade, usually assessed formally" definition="Clinical stage or grade of a condition. May include formal severity assessments.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Condition.Stage"/>
            <constraint name="con-1" severity="ERROR" message="Stage SHALL have summary or assessment">
                <expression language="text/fhirpath" expression="summary.exists() or assessment.exists()"/>
            </constraint>
        </element>
        <element name="evidence" description="Supporting evidence" definition="Supporting evidence / manifestations that are the basis of the Condition's verification status, such as evidence that confirmed or refuted the condition." comment="The evidence may be a simple list of coded symptoms/manifestations, or references to observations or formal assessments, or both.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Condition.Evidence"/>
            <constraint name="con-2" severity="ERROR" message="evidence SHALL have code or details">
                <expression language="text/fhirpath" expression="code.exists() or detail.exists()"/>
            </constraint>
        </element>
        <element name="note" description="Additional information about the Condition" definition="Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ConditionProblemsHealthConcerns" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-condition-problems-health-concerns" label="QICore Condition Problems Health Concerns" target="Condition" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="assertedDate" elementType="QICore.assertedDate" target="%parent.extension[url='http://hl7.org/fhir/StructureDefinition/condition-assertedDate'].value.value" description="(USCDI) Date the condition was first asserted" definition="The date on which the existence of the Condition was first asserted or acknowledged." comment="The assertedDate is in the context of the recording practitioner and might not be the same as the recordedDate." mustSupport="true"/>
        <element name="identifier" description="External Ids for this condition" definition="Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="clinicalStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) active | recurrence | relapse | inactive | remission | resolved" definition="The clinical status of the condition." comment="The data type is CodeableConcept because clinicalStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="verificationStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) unconfirmed | provisional | differential | confirmed | refuted | entered-in-error" definition="The verification status to support the clinical status of the condition." comment="verificationStatus is not required.  For example, when a patient has abdominal pain in the ED, there is not likely going to be a verification status.&#10;The data type is CodeableConcept because verificationStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) category codes" definition="A category assigned to the condition." comment="The categorization is often highly contextual and may appear poorly differentiated or not very useful in other contexts." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ConditionCategory" description="A category assigned to the condition." strength="Extensible"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) problem-list-item | health-concern" definition="A category assigned to the condition." comment="The categorization is often highly contextual and may appear poorly differentiated or not very useful in other contexts." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="screening-assessment" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) USCDI Health Status/Assessments Data Class" definition="Categories that a provider may use in their workflow to classify that this Condition is related to a USCDI Health Status/Assessments Data Class." comment="The categorization is often highly contextual and may appear poorly differentiated or not very useful in other contexts." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="severity" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Subjective severity of condition" definition="A subjective assessment of the severity of the condition as evaluated by the clinician." comment="Coding of the severity with a terminology is preferred, where possible.">
            <binding name="ConditionSeverity" description="A subjective assessment of the severity of the condition as evaluated by the clinician." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Identification of the condition, problem or diagnosis" definition="Identification of the condition, problem or diagnosis." mustSupport="true">
            <binding description="Valueset to describe the actual problem experienced by the patient" strength="Extensible"/>
        </element>
        <element name="bodySite" target="FHIRHelpers.ToConcept(%value)" description="Anatomical location, if relevant" definition="The anatomical location where this condition manifests itself." comment="Only used if not implicit in code found in Condition.code. If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).  May be a summary code, or a reference to a very precise definition of the location, or both.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who has the condition?" definition="Indicates the patient or group who the condition record is associated with." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this Condition was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter. This record indicates the encounter this particular record is associated with.  In the case of a &quot;new&quot; diagnosis reflecting ongoing/revised information about the condition, this might be distinct from the first encounter in which the underlying condition was first &quot;known&quot;."/>
        <element name="onset" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Estimated or actual date, date-time, or age" definition="Estimated or actual date or date-time  the condition began, in the opinion of the clinician." comment="Age is generally used when the patient reports an age at which the Condition began to occur." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="abatement" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) When in resolution/remission" definition="The date or estimated date that the condition resolved or went into remission. This is called &quot;abatement&quot; because of the many overloaded connotations associated with &quot;remission&quot; or &quot;resolution&quot; - Conditions are never really resolved, but they can abate." comment="There is no explicit distinction between resolution and remission because in many cases the distinction is not clear. Age is generally used when the patient reports an age at which the Condition abated.  If there is no abatement element, it is unknown whether the condition has resolved or entered remission; applications and users should generally assume that the condition is still valid.  When abatementString exists, it implies the condition is abated." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="recordedDate" elementType="System.DateTime" target="%value.value" description="(USCDI) Date record was first recorded" definition="The recordedDate represents when this particular Condition record was created in the system, which is often a system-generated date." mustSupport="true"/>
        <element name="recorder" elementType="QICore.Reference" description="Who recorded the condition" definition="Individual who recorded the record and takes responsibility for its content."/>
        <element name="asserter" elementType="QICore.Reference" description="Person who asserts this condition" definition="Individual who is making the condition statement."/>
        <element name="stage" description="Stage/grade, usually assessed formally" definition="Clinical stage or grade of a condition. May include formal severity assessments.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Condition.Stage"/>
            <constraint name="con-1" severity="ERROR" message="Stage SHALL have summary or assessment">
                <expression language="text/fhirpath" expression="summary.exists() or assessment.exists()"/>
            </constraint>
        </element>
        <element name="evidence" description="Supporting evidence" definition="Supporting evidence / manifestations that are the basis of the Condition's verification status, such as evidence that confirmed or refuted the condition." comment="The evidence may be a simple list of coded symptoms/manifestations, or references to observations or formal assessments, or both.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Condition.Evidence"/>
            <constraint name="con-2" severity="ERROR" message="evidence SHALL have code or details">
                <expression language="text/fhirpath" expression="code.exists() or detail.exists()"/>
            </constraint>
        </element>
        <element name="note" description="Additional information about the Condition" definition="Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ContactDetail" identifier="http://hl7.org/fhir/StructureDefinition/ContactDetail" label="ContactDetail" retrievable="false" baseType="QICore.Element">
        <element name="name" elementType="System.String" target="%value.value" description="Name of an individual to contact" definition="The name of an individual to contact." comment="If there is no named individual, the telecom information is for the organization as a whole."/>
        <element name="telecom" description="Contact details for individual or organization" definition="The contact details for the individual (if a name was provided) or the organization.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ContactPoint" identifier="http://hl7.org/fhir/StructureDefinition/ContactPoint" label="ContactPoint" retrievable="false" baseType="QICore.Element">
        <element name="system" elementType="QICore.ContactPointSystem" target="%value.value" description="phone | fax | email | pager | url | sms | other" definition="Telecommunications form for contact point - what communications system is required to make use of the contact.">
            <binding name="ContactPointSystem" description="Telecommunications form for contact point." strength="Required"/>
        </element>
        <element name="value" elementType="System.String" target="%value.value" description="The actual contact point details" definition="The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address)." comment="Additional text data such as phone extension numbers, or notes about use of the contact are sometimes included in the value."/>
        <element name="use" elementType="QICore.ContactPointUse" target="%value.value" description="home | work | temp | old | mobile - purpose of this contact point" definition="Identifies the purpose for the contact point." comment="Applications can assume that a contact is current unless it explicitly says that it is temporary or old.">
            <binding name="ContactPointUse" description="Use of contact point." strength="Required"/>
        </element>
        <element name="rank" elementType="System.Integer" target="%value.value" description="Specify preferred order of use (1 = highest)" definition="Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values." comment="Note that rank does not necessarily follow the order in which the contacts are represented in the instance."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Time period when the contact point was/is in use" definition="Time period when the contact point was/is in use.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ContactPointSystem" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ContactPointUse" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Contributor" identifier="http://hl7.org/fhir/StructureDefinition/Contributor" label="Contributor" retrievable="false" baseType="QICore.Element">
        <element name="type" elementType="QICore.ContributorType" target="%value.value" description="author | editor | reviewer | endorser" definition="The type of contributor.">
            <binding name="ContributorType" description="The type of contributor." strength="Required"/>
        </element>
        <element name="name" elementType="System.String" target="%value.value" description="Who contributed the content" definition="The name of the individual or organization responsible for the contribution."/>
        <element name="contact" description="Contact details of the contributor" definition="Contact details to assist a user in finding and communicating with the contributor.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactDetail"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ContributorType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Coverage" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-coverage" label="QICore Coverage" retrievable="true" primaryCodePath="type" baseType="QICore.DomainResource">
        <element name="identifier" description="(USCDI) Member ID and other identifiers" definition="A unique identifier assigned to this coverage." comment="The main (and possibly only) identifier for the coverage - often referred to as a Member Id, Certificate number, Personal Health Number or Case ID. May be constructed as the concatenation of the Coverage.SubscriberID and the Coverage.dependant." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="memberid" elementType="QICore.Identifier" description="(USCDI) Member ID" definition="A unique identifier assigned to this coverage." comment="The main (and possibly only) identifier for the coverage - often referred to as a Member Id, Certificate number, Personal Health Number or Case ID. May be constructed as the concatenation of the Coverage.SubscriberID and the Coverage.dependant." mustSupport="true"/>
        <element name="status" elementType="QICore.CoverageStatus" target="%value.value" description="(USCDI) active | cancelled | draft | entered-in-error" definition="The status of the resource instance." comment="The `Coverage.status` alone does not indicate whether an individual's coverage is terminated or that the individual is not covered. The `Coverage.period` needs to be considered as well." mustSupport="true">
            <binding name="CoverageStatus" description="A code specifying the state of the resource instance." strength="Required"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Coverage category such as medical or accident" definition="The type of coverage: social program, medical plan, accident coverage (workers compensation, auto), group health or payment by an individual or organization." comment="Identifies if the coverage is PPO, HMO, POS, etc." mustSupport="true">
            <binding description="Categories of types of health care payor entities as defined by the US Public Health Data Consortium SOP code system" strength="Extensible"/>
        </element>
        <element name="policyHolder" elementType="QICore.Reference" description="(QI-Core) Owner of the policy" definition="The party who 'owns' the insurance policy." comment="For example: may be an individual, corporation or the subscriber's employer."/>
        <element name="subscriber" elementType="QICore.Reference" description="Subscriber to the policy" definition="The party who has signed-up for or 'owns' the contractual relationship to the policy or to whom the benefit of the policy for services rendered to them or their family is due." comment="May be self or a parent in the case of dependants."/>
        <element name="subscriberId" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) ID assigned to the subscriber" definition="The insurer assigned ID for the Subscriber." comment="The identifier assigned by the Payer on the subscriber's ID card" mustSupport="true"/>
        <element name="beneficiary" elementType="QICore.Reference" description="(QI-Core)(USCDI) Plan beneficiary" definition="The party who benefits from the insurance coverage; the patient when products and/or services are provided." comment="Identifier for a member assigned by the Payer." mustSupport="true"/>
        <element name="dependent" elementType="System.String" target="%value.value" description="Dependent number" definition="A unique identifier for a dependent under the coverage." comment="Periodically the member number is constructed from the subscriberId and the dependant number."/>
        <element name="relationship" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Beneficiary relationship to the subscriber" definition="The relationship of beneficiary (patient) to the subscriber." comment="Relationship of the member to the person insured (subscriber)" mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="(QI-Core)(USCDI) Coverage start and end dates" definition="Time period during which the coverage is in force. A missing start date indicates the start date isn't known, a missing end date means the coverage is continuing to be in force." comment="Date that the contract became effective and Date that the contract was terminated or coverage changed." mustSupport="true">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="payor" elementType="QICore.Reference" description="(QI-Core)(USCDI) Issuer of the policy" definition="The program or plan underwriter or payor including both insurance and non-insurance agreements, such as patient-pay agreements." comment="Issuer of the Policy" mustSupport="true"/>
        <element name="class" description="(USCDI) Additional coverage classifications" definition="A suite of underwriter specific classifiers." comment="For example may be used to identify a class of coverage or employer group, Policy, Plan." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Coverage.Class"/>
        </element>
        <element name="group" elementType="QICore.Coverage.Class.group" description="(USCDI) Group" definition="A suite of underwriter specific classifiers." comment="For example may be used to identify a class of coverage or employer group, Policy, Plan." mustSupport="true"/>
        <element name="plan" elementType="QICore.Coverage.Class.plan" description="(USCDI) Plan" definition="A suite of underwriter specific classifiers." comment="For example may be used to identify a class of coverage or employer group, Policy, Plan." mustSupport="true"/>
        <element name="order" elementType="System.Integer" target="%value.value" description="Relative order of the coverage" definition="The order of applicability of this coverage relative to other coverages which are currently in force. Note, there may be gaps in the numbering and this does not imply primary, secondary etc. as the specific positioning of coverages depends upon the episode of care."/>
        <element name="network" elementType="System.String" target="%value.value" description="Insurer network" definition="The insurer-specific identifier for the insurer-defined network of providers to which the beneficiary may seek treatment which will be covered at the 'in-network' rate, otherwise 'out of network' terms and conditions apply."/>
        <element name="costToBeneficiary" description="Patient payments for services/products" definition="A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been  included on the health card." comment="For example by knowing the patient visit co-pay, the provider can collect the amount prior to undertaking treatment.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Coverage.CostToBeneficiary"/>
        </element>
        <element name="subrogation" elementType="System.Boolean" target="%value.value" description="Reimbursement to insurer" definition="When 'subrogation=true' this insurance instance has been included not for adjudication but to provide insurers with the details to recover costs." comment="Typically, automotive and worker's compensation policies would be flagged with 'subrogation=true' to enable healthcare payors to collect against accident claims."/>
        <element name="contract" description="Contract details" definition="The policy(s) which constitute this insurance coverage.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="policyHolder"/>
        <contextRelationship context="Patient" relatedKeyElement="subscriber"/>
        <contextRelationship context="Patient" relatedKeyElement="beneficiary"/>
        <contextRelationship context="Patient" relatedKeyElement="payor"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="policyHolder"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="subscriber"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="payor"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Coverage.Class" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of class such as 'group' or 'plan'" definition="The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.">
            <binding name="CoverageClass" description="The policy classifications, eg. Group, Plan, Class, etc." strength="Extensible"/>
        </element>
        <element name="value" elementType="System.String" target="%value.value" description="Value associated with the type" definition="The alphanumeric string value associated with the insurer issued label." comment="For example, the Group or Plan number."/>
        <element name="name" elementType="System.String" target="%value.value" description="Human readable description of the type and value" definition="A short description for the class."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Coverage.Class.group" retrievable="false" baseType="QICore.Coverage.Class"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Coverage.Class.plan" retrievable="false" baseType="QICore.Coverage.Class"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Coverage.CostToBeneficiary" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Cost category" definition="The category of patient centric costs associated with treatment." comment="For example visit, specialist visits, emergency, inpatient care, etc.">
            <binding name="CopayTypes" description="The types of services to which patient copayments are specified." strength="Extensible"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="The amount or percentage due from the beneficiary" definition="The amount due from the patient for the cost category." comment="Amount may be expressed as a percentage of the service/product cost or a fixed amount of currency.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
            </elementTypeSpecifier>
        </element>
        <element name="exception" description="Exceptions for patient payments" definition="A suite of codes indicating exceptions or reductions to patient costs and their effective periods.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Coverage.CostToBeneficiary.Exception"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Coverage.CostToBeneficiary.Exception" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Exception category" definition="The code for the specific exception.">
            <binding name="CoverageFinancialException" description="The types of exceptions from the part or full value of financial obligations such as copays." strength="Example"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="The effective period of the exception" definition="The timeframe during when the exception is in force.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="CoverageStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DataRequirement" identifier="http://hl7.org/fhir/StructureDefinition/DataRequirement" label="DataRequirement" retrievable="false" baseType="QICore.Element">
        <element name="type" elementType="QICore.FHIRAllTypes" target="%value.value" description="The type of the required data" definition="The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.">
            <binding name="FHIRAllTypes" description="A list of all the concrete types defined in this version of the FHIR specification - Abstract Types, Data Types and Resource Types." strength="Required"/>
        </element>
        <element name="profile" target="%value.value" description="The profile of the required data" definition="The profile of the required data, specified as the uri of the profile definition.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="subject" target="FHIRHelpers.ToValue(%value)" description="E.g. Patient, Practitioner, RelatedPerson, Organization, Location, Device" definition="The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed." comment="The subject of a data requirement is critical, as the data being specified is determined with respect to a particular subject. This corresponds roughly to the notion of a Compartment in that it limits what data is available based on its relationship to the subject. In CQL, this corresponds to the context declaration.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="SubjectType" description="The possible types of subjects for a data requirement (E.g., Patient, Practitioner, Organization, Location, etc.)." strength="Extensible"/>
        </element>
        <element name="mustSupport" target="%value.value" description="Indicates specific structure elements that are referenced by the knowledge module" definition="Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. &#10;&#10;The value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="codeFilter" description="What codes are expected" definition="Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DataRequirement.CodeFilter"/>
            <constraint name="drq-1" severity="ERROR" message="Either a path or a searchParam must be provided, but not both">
                <expression language="text/fhirpath" expression="path.exists() xor searchParam.exists()"/>
            </constraint>
        </element>
        <element name="dateFilter" description="What dates/date ranges are expected" definition="Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DataRequirement.DateFilter"/>
            <constraint name="drq-2" severity="ERROR" message="Either a path or a searchParam must be provided, but not both">
                <expression language="text/fhirpath" expression="path.exists() xor searchParam.exists()"/>
            </constraint>
        </element>
        <element name="limit" elementType="System.Integer" target="%value.value" description="Number of results" definition="Specifies a maximum number of results that are required (uses the _count search parameter)." comment="This element can be used in combination with the sort element to specify quota requirements such as &quot;the most recent 5&quot; or &quot;the highest 5&quot;."/>
        <element name="sort" description="Order of the results" definition="Specifies the order of the results to be returned." comment="This element can be used in combination with the sort element to specify quota requirements such as &quot;the most recent 5&quot; or &quot;the highest 5&quot;. When multiple sorts are specified, they are applied in the order they appear in the resource.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DataRequirement.Sort"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DataRequirement.CodeFilter" retrievable="false" baseType="QICore.Element">
        <element name="path" elementType="System.String" target="%value.value" description="A code-valued attribute to filter on" definition="The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept." comment="The path attribute contains a [Simple FHIRPath Subset](fhirpath.html#simple) that allows path traversal, but not calculation."/>
        <element name="searchParam" elementType="System.String" target="%value.value" description="A coded (token) parameter to search on" definition="A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept."/>
        <element name="valueSet" elementType="System.String" target="%value.value" description="Valueset for the filter" definition="The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset."/>
        <element name="code" target="FHIRHelpers.ToCode(%value)" description="What code is expected" definition="The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DataRequirement.DateFilter" retrievable="false" baseType="QICore.Element">
        <element name="path" elementType="System.String" target="%value.value" description="A date-valued attribute to filter on" definition="The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing." comment="The path attribute contains a [Simple FHIR Subset](fhirpath.html#simple) that allows path traversal, but not calculation."/>
        <element name="searchParam" elementType="System.String" target="%value.value" description="A date valued parameter to search on" definition="A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing."/>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="The value of the filter, as a Period, DateTime, or Duration value" definition="The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DataRequirement.Sort" retrievable="false" baseType="QICore.Element">
        <element name="path" elementType="System.String" target="%value.value" description="The name of the attribute to perform the sort" definition="The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant."/>
        <element name="direction" elementType="QICore.SortDirection" target="%value.value" description="ascending | descending" definition="The direction of the sort, ascending or descending.">
            <binding name="SortDirection" description="The possible sort directions, ascending or descending." strength="Required"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DayOfWeek" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DaysOfWeek" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Device" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-device" label="QICore Device" retrievable="true" primaryCodePath="type" baseType="QICore.DomainResource">
        <element name="identifier" description="Instance identifier" definition="Unique instance identifiers assigned to a device by manufacturers other organizations or owners." comment="The barcode string from a barcode present on a device label or package may identify the instance, include names given to the device in local usage, or may identify the type of device. If the identifier identifies the type of device, Device.type element should be used.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="definition" elementType="QICore.Reference" description="The reference to the definition for the device" definition="The reference to the definition for the device."/>
        <element name="udiCarrier" description="Unique Device Identifier (UDI) Barcode string" definition="Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold." comment="UDI may identify an unique instance of a device, or it may only identify the type of the device.  See [UDI mappings](device-mappings.html#udi) for a complete mapping of UDI parts to Device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.UdiCarrier"/>
        </element>
        <element name="status" elementType="QICore.FHIRDeviceStatus" target="%value.value" description="active | inactive | entered-in-error | unknown" definition="Status of the Device availability." comment="This element is labeled as a modifier because the status contains the codes inactive and entered-in-error that mark the device (record)as not currently valid.">
            <binding name="FHIRDeviceStatus" description="The availability status of the device." strength="Required"/>
        </element>
        <element name="statusReason" target="FHIRHelpers.ToConcept(%value)" description="online | paused | standby | offline | not-ready | transduc-discon | hw-discon | off" definition="Reason for the dtatus of the Device availability.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="FHIRDeviceStatusReason" description="The availability status reason of the device." strength="Extensible"/>
        </element>
        <element name="distinctIdentifier" elementType="System.String" target="%value.value" description="The distinct identification string" definition="The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product." comment="For example, this applies to devices in the United States regulated under *Code of Federal Regulation 21CFR§1271.290(c)*."/>
        <element name="manufacturer" elementType="System.String" target="%value.value" description="Name of device manufacturer" definition="A name of the manufacturer."/>
        <element name="manufactureDate" elementType="System.DateTime" target="%value.value" description="Date when the device was made" definition="The date and time when the device was manufactured."/>
        <element name="expirationDate" elementType="System.DateTime" target="%value.value" description="Date and time of expiry of this device (if applicable)" definition="The date and time beyond which this device is no longer valid or should not be used (if applicable)."/>
        <element name="lotNumber" elementType="System.String" target="%value.value" description="Lot number of manufacture" definition="Lot number assigned by the manufacturer."/>
        <element name="serialNumber" elementType="System.String" target="%value.value" description="Serial number assigned by the manufacturer" definition="The serial number assigned by the organization when the device was manufactured." comment="Alphanumeric Maximum 20."/>
        <element name="deviceName" description="The name of the device as given by the manufacturer" definition="This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.DeviceName"/>
        </element>
        <element name="modelNumber" elementType="System.String" target="%value.value" description="The model number for the device" definition="The model number for the device."/>
        <element name="partNumber" elementType="System.String" target="%value.value" description="The part number of the device" definition="The part number of the device." comment="Alphanumeric Maximum 20."/>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The kind or type of device" definition="The kind or type of device.">
            <binding name="DeviceType" description="Codes to identify medical devices." strength="Example"/>
        </element>
        <element name="specialization" description="The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication" definition="The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.Specialization"/>
        </element>
        <element name="version" description="The actual design of the device or software version running on the device" definition="The actual design of the device or software version running on the device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.Version"/>
        </element>
        <element name="property" description="The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties" definition="The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.Property"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) Patient to whom Device is affixed" definition="Patient information, If the device is affixed to a person."/>
        <element name="owner" elementType="QICore.Reference" description="Organization responsible for device" definition="An organization that is responsible for the provision and ongoing maintenance of the device."/>
        <element name="contact" description="Details for human/organization for support" definition="Contact details for an organization or a particular human that is responsible for the device." comment="used for troubleshooting etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where the device is found" definition="The place where the device can be found."/>
        <element name="url" elementType="System.String" target="%value.value" description="Network address to contact device" definition="A network address on which the device may be contacted directly." comment="If the device is running a FHIR server, the network address should  be the Base URL from which a conformance statement may be retrieved."/>
        <element name="note" description="Device notes and comments" definition="Descriptive information, usage information or implantation information that is not captured in an existing element.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="safety" target="FHIRHelpers.ToConcept(%value)" description="Safety Characteristics of Device" definition="Provides additional safety characteristics about a medical device.  For example devices containing latex.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
        </element>
        <element name="parent" elementType="QICore.Reference" description="The parent device" definition="The parent device."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Device.DeviceName" retrievable="false" baseType="QICore.BackboneElement">
        <element name="name" elementType="System.String" target="%value.value" description="The name of the device" definition="The name of the device."/>
        <element name="type" elementType="QICore.DeviceNameType" target="%value.value" description="udi-label-name | user-friendly-name | patient-reported-name | manufacturer-name | model-name | other" definition="The type of deviceName.&#10;UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.">
            <binding name="DeviceNameType" description="The type of name the device is referred by." strength="Required"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Device.Property" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Code that specifies the property DeviceDefinitionPropetyCode (Extensible)" definition="Code that specifies the property DeviceDefinitionPropetyCode (Extensible)."/>
        <element name="valueQuantity" target="FHIRHelpers.ToQuantity(%value)" description="Property value as a quantity" definition="Property value as a quantity.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Quantity"/>
        </element>
        <element name="valueCode" target="FHIRHelpers.ToConcept(%value)" description="Property value as a code, e.g., NTP4 (synced to NTP)" definition="Property value as a code, e.g., NTP4 (synced to NTP).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Device.Specialization" retrievable="false" baseType="QICore.BackboneElement">
        <element name="systemType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The standard that is used to operate and communicate" definition="The standard that is used to operate and communicate."/>
        <element name="version" elementType="System.String" target="%value.value" description="The version of the standard that is used to operate and communicate" definition="The version of the standard that is used to operate and communicate."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Device.UdiCarrier" retrievable="false" baseType="QICore.BackboneElement">
        <element name="deviceIdentifier" elementType="System.String" target="%value.value" description="(USCDI) Mandatory fixed portion of UDI" definition="The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device." mustSupport="true"/>
        <element name="issuer" elementType="System.String" target="%value.value" description="UDI Issuing Organization" definition="Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :&#10;1) GS1: &#10;http://hl7.org/fhir/NamingSystem/gs1-di, &#10;2) HIBCC:&#10;http://hl7.org/fhir/NamingSystem/hibcc-dI, &#10;3) ICCBBA for blood containers:&#10;http://hl7.org/fhir/NamingSystem/iccbba-blood-di, &#10;4) ICCBA for other devices:&#10;http://hl7.org/fhir/NamingSystem/iccbba-other-di."/>
        <element name="jurisdiction" elementType="System.String" target="%value.value" description="Regional UDI authority" definition="The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi."/>
        <element name="carrierAIDC" elementType="System.String" target="%value.value" description="UDI Machine Readable Barcode String" definition="The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded." comment="The AIDC form of UDIs should be scanned or otherwise used for the identification of the device whenever possible to minimize errors in records resulting from manual transcriptions. If separate barcodes for DI and PI are present, concatenate the string with DI first and in order of human readable expression on label."/>
        <element name="carrierHRF" elementType="System.String" target="%value.value" description="(USCDI) UDI Human Readable Barcode String" definition="The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device." comment="If separate barcodes for DI and PI are present, concatenate the string with DI first and in order of human readable expression on label." mustSupport="true"/>
        <element name="entryType" elementType="QICore.UDIEntryType" target="%value.value" description="barcode | rfid | manual +" definition="A coded entry to indicate how the data was entered.">
            <binding name="UDIEntryType" description="Codes to identify how UDI data was entered." strength="Required"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Device.Version" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The type of the device version" definition="The type of the device version."/>
        <element name="component" elementType="QICore.Identifier" description="A single component of the device version" definition="A single component of the device version."/>
        <element name="value" elementType="System.String" target="%value.value" description="The version text" definition="The version text."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DeviceNameType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DeviceNotRequested" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-devicenotrequested" label="QICore Device Not Requested" target="DeviceRequest" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="doNotPerformReason" elementType="QICore.DoNotPerformReason" target="FHIRHelpers.ToConcept(%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-doNotPerformReason'].value)" description="(QI-Core) Extension" definition="Indicates the reason the event was not performed."/>
        <element name="doNotPerform" elementType="System.Boolean" target="%parent.modifierExtension[url='http://hl7.org/fhir/5.0/StructureDefinition/extension-DeviceRequest.doNotPerform'].value" description="(QI-Core) Extension" definition="An Extension"/>
        <element name="identifier" description="External Request identifier" definition="Identifiers assigned to this order by the orderer or by the receiver.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest." comment="Note: This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="What request fulfills" definition="Plan/proposal/order fulfilled by this request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="priorRequest" description="What request replaces" definition="The request takes the place of the referenced completed or terminated request(s).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="groupIdentifier" elementType="QICore.Identifier" description="Identifier of composite request" definition="Composite request this is part of."/>
        <element name="status" elementType="QICore.DeviceRequestStatus" target="%value.value" description="(QI-Core) draft | active | on-hold | revoked | completed | entered-in-error | unknown" definition="The status of the request." comment="This element is labeled as a modifier because the status contains the codes cancelled and entered-in-error that mark the request as not currently valid.">
            <binding name="DeviceRequestStatus" description="Codes representing the status of the request." strength="Required"/>
        </element>
        <element name="intent" elementType="QICore.RequestIntent" target="%value.value" description="(QI-Core) proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option" definition="Whether the request is a proposal, plan, an original order or a reflex order.">
            <binding name="RequestIntent" description="The kind of diagnostic request." strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.RequestPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Indicates how quickly the {{title}} should be addressed with respect to other requests.">
            <binding name="RequestPriority" description="Identifies the level of importance to be assigned to actioning the request." strength="Required"/>
        </element>
        <element name="code" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.code[x].extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(QI-Core) Device requested" definition="The details of the device to be used.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding strength="Preferred"/>
        </element>
        <element name="parameter" description="Device details" definition="Specific parameters for the ordered item.  For example, the prism value for lenses.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DeviceRequest.Parameter"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Focus of request" definition="The patient who will use the device."/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter motivating request" definition="An encounter that provides additional context in which this request is made."/>
        <element name="occurrence" target="FHIRHelpers.ToValue(%value)" description="Desired time or schedule for use" definition="The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. &quot;Every 8 hours&quot;; &quot;Three times a day&quot;; &quot;1/2 an hour before breakfast for 10 days from 23-Dec 2011:&quot;; &quot;15 Oct 2013, 17 Oct 2013 and 1 Nov 2013&quot;.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
            </elementTypeSpecifier>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="(QI-Core) When recorded" definition="When the request transitioned to being actionable."/>
        <element name="requester" elementType="QICore.Reference" description="Who/what is requesting diagnostics" definition="The individual who initiated the request and has responsibility for its activation."/>
        <element name="performerType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Filler role" definition="Desired type of performer for doing the diagnostic testing.">
            <binding name="DeviceRequestParticipantRole" description="Indicates specific responsibility of an individual within the care team, such as &quot;Primary physician&quot;, &quot;Team coordinator&quot;, &quot;Caregiver&quot;, etc." strength="Example"/>
        </element>
        <element name="performer" elementType="QICore.Reference" description="Requested Filler" definition="The desired performer for doing the diagnostic testing."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Coded Reason for request" definition="Reason or justification for the use of this device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="DeviceRequestReason" description="Diagnosis or problem codes justifying the reason for requesting the device." strength="Example"/>
        </element>
        <element name="reasonReference" description="Linked Reason for request" definition="Reason or justification for the use of this device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="supportingInfo" description="Additional clinical information" definition="Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Notes or comments" definition="Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="relevantHistory" description="Request provenance" definition="Key events in the history of the request." comment="This might not include provenances for all versions of the request - only those deemed &quot;relevant&quot; or important.&#13;This SHALL NOT include the Provenance associated with this current version of the resource.  (If that provenance is deemed to be a &quot;relevant&quot; change, it will need to be added as part of a later update.  Until then, it can be queried directly as the Provenance that points to this version using _revinclude&#13;All Provenances should have some historical version of this Request as their subject.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DeviceRequest" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-devicerequest" label="QICore DeviceRequest" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="doNotPerform" elementType="System.Boolean" target="%parent.modifierExtension[url='http://hl7.org/fhir/5.0/StructureDefinition/extension-DeviceRequest.doNotPerform'].value" description="(QI-Core) Extension" definition="An Extension"/>
        <element name="identifier" description="(QI-Core) External Request identifier" definition="Identifiers assigned to this order by the orderer or by the receiver.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest." comment="Note: This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="What request fulfills" definition="Plan/proposal/order fulfilled by this request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="priorRequest" description="What request replaces" definition="The request takes the place of the referenced completed or terminated request(s).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="groupIdentifier" elementType="QICore.Identifier" description="Identifier of composite request" definition="Composite request this is part of."/>
        <element name="status" elementType="QICore.DeviceRequestStatus" target="%value.value" description="(QI-Core) draft | active | on-hold | revoked | completed | entered-in-error | unknown" definition="The status of the request." comment="This element is labeled as a modifier because the status contains the codes cancelled and entered-in-error that mark the request as not currently valid.">
            <binding name="DeviceRequestStatus" description="Codes representing the status of the request." strength="Required"/>
        </element>
        <element name="intent" elementType="QICore.RequestIntent" target="%value.value" description="(QI-Core) proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option" definition="Whether the request is a proposal, plan, an original order or a reflex order.">
            <binding name="RequestIntent" description="The kind of diagnostic request." strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.RequestPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Indicates how quickly the {{title}} should be addressed with respect to other requests.">
            <binding name="RequestPriority" description="Identifies the level of importance to be assigned to actioning the request." strength="Required"/>
        </element>
        <element name="code" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Device requested" definition="The details of the device to be used.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
            </elementTypeSpecifier>
            <binding strength="Preferred"/>
        </element>
        <element name="parameter" description="Device details" definition="Specific parameters for the ordered item.  For example, the prism value for lenses.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DeviceRequest.Parameter"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Focus of request" definition="The patient who will use the device."/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter motivating request" definition="An encounter that provides additional context in which this request is made."/>
        <element name="occurrence" target="FHIRHelpers.ToValue(%value)" description="Desired time or schedule for use" definition="The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. &quot;Every 8 hours&quot;; &quot;Three times a day&quot;; &quot;1/2 an hour before breakfast for 10 days from 23-Dec 2011:&quot;; &quot;15 Oct 2013, 17 Oct 2013 and 1 Nov 2013&quot;.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
            </elementTypeSpecifier>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="(QI-Core) When recorded" definition="When the request transitioned to being actionable."/>
        <element name="requester" elementType="QICore.Reference" description="Who/what is requesting diagnostics" definition="The individual who initiated the request and has responsibility for its activation."/>
        <element name="performerType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Filler role" definition="Desired type of performer for doing the diagnostic testing.">
            <binding name="DeviceRequestParticipantRole" description="Indicates specific responsibility of an individual within the care team, such as &quot;Primary physician&quot;, &quot;Team coordinator&quot;, &quot;Caregiver&quot;, etc." strength="Example"/>
        </element>
        <element name="performer" elementType="QICore.Reference" description="Requested Filler" definition="The desired performer for doing the diagnostic testing."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Coded Reason for request" definition="Reason or justification for the use of this device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="DeviceRequestReason" description="Diagnosis or problem codes justifying the reason for requesting the device." strength="Example"/>
        </element>
        <element name="reasonReference" description="Linked Reason for request" definition="Reason or justification for the use of this device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="supportingInfo" description="Additional clinical information" definition="Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Notes or comments" definition="Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="relevantHistory" description="Request provenance" definition="Key events in the history of the request." comment="This might not include provenances for all versions of the request - only those deemed &quot;relevant&quot; or important.&#13;This SHALL NOT include the Provenance associated with this current version of the resource.  (If that provenance is deemed to be a &quot;relevant&quot; change, it will need to be added as part of a later update.  Until then, it can be queried directly as the Provenance that points to this version using _revinclude&#13;All Provenances should have some historical version of this Request as their subject.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="requester"/>
        <contextRelationship context="Practitioner" relatedKeyElement="performer"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Patient" relatedKeyElement="performer"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="Device" relatedKeyElement="code as Reference)"/>
        <contextRelationship context="Device" relatedKeyElement="subject"/>
        <contextRelationship context="Device" relatedKeyElement="requester"/>
        <contextRelationship context="Device" relatedKeyElement="performer"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DeviceRequest.Parameter" retrievable="false" baseType="QICore.BackboneElement">
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Device detail" definition="A code or string that identifies the device detail being asserted.">
            <binding name="ParameterCode" description="A code that identifies the device detail." strength="Example"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Value of detail" definition="The value of the device detail." comment="Range means device should have a value that falls somewhere within the specified range.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DeviceRequestStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DeviceUseStatement" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-deviceusestatement" label="QICore DeviceUseStatement" retrievable="true" primaryCodePath="device.type" baseType="QICore.DomainResource">
        <element name="identifier" description="External identifier for this record" definition="An external identifier for this statement such as an IRI.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this DeviceUseStatement.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.DeviceUseStatementStatus" target="%value.value" description="(QI-Core) active | completed | entered-in-error +" definition="A code representing the patient or other source's judgment about the state of the device used that this statement is about.  Generally this will be active or completed." comment="DeviceUseStatment is a statement at a point in time.  The status is only representative at the point when it was asserted.  The value set for contains codes that assert the status of the use  by the patient (for example, stopped or on hold) as well as codes that assert the status of the resource itself (for example, entered in error).&#13;&#13;This element is labeled as a modifier because the status contains the codes that mark the statement as not currently valid.">
            <binding name="DeviceUseStatementStatus" description="A coded concept indicating the current status of the Device Usage." strength="Required"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Patient using device" definition="The patient who used the device."/>
        <element name="derivedFrom" description="Supporting information" definition="Allows linking the DeviceUseStatement to the underlying Request, or to other information that supports or is used to derive the DeviceUseStatement." comment="The most common use cases for deriving a DeviceUseStatement comes from creating it from a request or from an observation or a claim. it should be noted that the amount of information that is available varies from the type resource that you derive the DeviceUseStatement from.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="timing" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) How often the device was used" definition="How often the device was used.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="recordedOn" elementType="System.DateTime" target="%value.value" description="(QI-Core) When statement was recorded" definition="The time at which the statement was made/recorded."/>
        <element name="source" elementType="QICore.Reference" description="Who made the statement" definition="Who reported the device was being used by the patient."/>
        <element name="device" elementType="QICore.Reference" description="(QI-Core) Reference to device used" definition="The details of the device used."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why device was used" definition="Reason or justification for the use of the device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
        </element>
        <element name="reasonReference" description="Why was DeviceUseStatement performed?" definition="Indicates another resource whose existence justifies this DeviceUseStatement.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Target body site" definition="Indicates the anotomic location on the subject's body where the device was used ( i.e. the target).">
            <binding description="Codes describing anatomical locations. May include laterality." strength="Preferred"/>
        </element>
        <element name="note" description="Addition details (comments, instructions)" definition="Details about the device statement that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Device" relatedKeyElement="device"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DeviceUseStatementStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DiagnosticReport.Media" retrievable="false" baseType="QICore.BackboneElement">
        <element name="comment" elementType="System.String" target="%value.value" description="Comment about the image (e.g. explanation)" definition="A comment about the image. Typically, this is used to provide an explanation for why the image is included, or to draw the viewer's attention to important features." comment="The comment should be displayed with the image. It would be common for the report to include additional discussion of the image contents in other sections such as the conclusion."/>
        <element name="link" elementType="QICore.Reference" description="(USCDI) Reference to the image source" definition="Reference to the image source." mustSupport="true"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DiagnosticReportLab" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-diagnosticreport-lab" label="QICore DiagnosticReport Profile for Laboratory Results Reporting" target="DiagnosticReport" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business identifier for report" definition="Identifiers assigned to this report by the performer or other systems." comment="Usually assigned by the Information System of the diagnostic service provider (filler id).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="What was requested" definition="Details concerning a service requested." comment="Note: Usually there is one test request for each result, however in some circumstances multiple test requests may be represented using a single test result resource. Note that there are also cases where one request leads to multiple reports." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(USCDI) registered | partial | preliminary | final +" definition="The status of the diagnostic report." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Service category" definition="A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes." comment="Multiple categories are allowed using various categorization schemes.   The level of granularity is defined by the category concepts in the value set. More fine-grained filtering can be performed using the metadata and/or terminology hierarchy in DiagnosticReport.code." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="DiagnosticServiceSection" description="Codes for diagnostic service sections." strength="Preferred"/>
        </element>
        <element name="LaboratorySlice" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Service category" definition="A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes." comment="Multiple categories are allowed using various categorization schemes.   The level of granularity is defined by the category concepts in the value set. More fine-grained filtering can be performed using the metadata and/or terminology hierarchy in DiagnosticReport.code." mustSupport="true">
            <binding name="DiagnosticServiceSection" description="Codes for diagnostic service sections." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) US Core Laboratory Report Order Code" definition="The test, panel or battery that was ordered." comment="UsageNote= The typical patterns for codes are:  1)  a LOINC code either as a  translation from a &quot;local&quot; code or as a primary code, or 2)  a local code only if no suitable LOINC exists,  or 3)  both the local and the LOINC translation.   Systems SHALL be capable of sending the local code if one exists." mustSupport="true">
            <binding description="LOINC codes" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) The subject of the report - usually, but not always, the patient" definition="The subject of the report. Usually, but not always, this is a patient. However, diagnostic services also perform analyses on specimens collected from a variety of other sources." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Health care event when test ordered" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) which this DiagnosticReport is about." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter  but still be tied to the context of the encounter  (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Diagnostically relevant time (typically the time of specimen collection)" definition="The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself." comment="If the diagnostic procedure was performed on the patient, this is the time it was performed. If there are specimens, the diagnostically relevant time can be derived from the specimen collection times, but the specimen information is not always available, and the exact relationship between the specimens and the diagnostically relevant time is not always automatic." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="(USCDI) When the report was released" definition="The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified." comment="May be different from the update time of the resource itself, because that is the status of the record (potentially a secondary copy), not the actual release time of the report." mustSupport="true"/>
        <element name="performer" description="(QI-Core)(USCDI) Responsible Diagnostic Service" definition="The diagnostic service that is responsible for issuing the report." comment="This is not necessarily the source of the atomic data items or the entity that interpreted the results. It is the entity that takes responsibility for the clinical report." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="resultsInterpreter" description="Primary result interpreter" definition="The practitioner or organization that is responsible for the report's conclusions and interpretations." comment="Might not be the same entity that takes responsibility for the clinical report.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="specimen" description="Specimens this report is based on" definition="Details about the specimens on which this diagnostic report is based." comment="If the specimen is sufficiently specified with a code in the test result name, then this additional data may be redundant. If there are multiple specimens, these may be represented per observation or group.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="result" description="(QI-Core)(USCDI) Observations" definition="[Observations](http://hl7.org/fhir/R4/observation.html)  that are part of this diagnostic report." comment="Observations can contain observations." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="imagingStudy" description="Reference to full details of imaging associated with the diagnostic report" definition="One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images." comment="ImagingStudy and the image element are somewhat overlapping - typically, the list of image references in the image element will also be found in one of the imaging study resources. However, each caters to different types of displays for different types of purposes. Neither, either, or both may be provided.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="media" description="Key images associated with this report" definition="A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DiagnosticReport.Media"/>
        </element>
        <element name="conclusion" elementType="System.String" target="%value.value" description="Clinical conclusion (interpretation) of test results" definition="Concise and clinically contextualized summary conclusion (interpretation/impression) of the diagnostic report."/>
        <element name="conclusionCode" target="FHIRHelpers.ToConcept(%value)" description="Codes for the clinical conclusion of test results" definition="One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="AdjunctDiagnosis" description="Diagnosis codes provided as adjuncts to the report." strength="Example"/>
        </element>
        <element name="presentedForm" description="Entire report as issued" definition="Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent." comment="&quot;application/pdf&quot; is recommended as the most reliable and interoperable in this context.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Attachment"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DiagnosticReportNote" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-diagnosticreport-note" label="QICore DiagnosticReport Profile for Report and Note Exchange" target="DiagnosticReport" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business identifier for report" definition="Identifiers assigned to this report by the performer or other systems." comment="Usually assigned by the Information System of the diagnostic service provider (filler id).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="What was requested" definition="Details concerning a service requested." comment="Note: Usually there is one test request for each result, however in some circumstances multiple test requests may be represented using a single test result resource. Note that there are also cases where one request leads to multiple reports.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(USCDI) registered | partial | preliminary | final +" definition="The status of the diagnostic report." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Service Category" definition="A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes." comment="Multiple categories are allowed using various categorization schemes.   The level of granularity is defined by the category concepts in the value set. More fine-grained filtering can be performed using the metadata and/or terminology hierarchy in DiagnosticReport.code." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="DiagnosticServiceSection" description="Codes for diagnostic service sections." strength="Example"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Service category" definition="A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes." comment="Multiple categories are allowed using various categorization schemes.   The level of granularity is defined by the category concepts in the value set. More fine-grained filtering can be performed using the metadata and/or terminology hierarchy in DiagnosticReport.code." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) QI-Core Report Code" definition="The test, panel, report, or note that was ordered." comment="The typical patterns for codes are:  1)  a LOINC code either as a translation from a &quot;local&quot; code or as a primary code, or 2)  a local code only if no suitable LOINC exists,  or 3)  both the local and the LOINC translation.   Systems SHALL be capable of sending the local code if one exists." mustSupport="true">
            <binding description="LOINC codes" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) The subject of the report - usually, but not always, the patient" definition="The subject of the report. Usually, but not always, this is a patient. However, diagnostic services also perform analyses on specimens collected from a variety of other sources." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="(QI-Core)(USCDI) Health care event when test ordered" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) which this DiagnosticReport is about." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter  but still be tied to the context of the encounter  (e.g. pre-admission laboratory tests)." mustSupport="true"/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Diagnostically relevant time (typically the time of the procedure)" definition="The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself." comment="If the diagnostic procedure was performed on the patient, this is the time it was performed. If there are specimens, the diagnostically relevant time can be derived from the specimen collection times, but the specimen information is not always available, and the exact relationship between the specimens and the diagnostically relevant time is not always automatic." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="(QI-Core)(USCDI) DateTime this version was made" definition="The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified." comment="May be different from the update time of the resource itself, because that is the status of the record (potentially a secondary copy), not the actual release time of the report." mustSupport="true"/>
        <element name="performer" description="(QI-Core)(USCDI) Responsible Diagnostic Service" definition="The diagnostic service that is responsible for issuing the report." comment="This is not necessarily the source of the atomic data items or the entity that interpreted the results. It is the entity that takes responsibility for the clinical report." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="resultsInterpreter" description="Primary result interpreter" definition="The practitioner or organization that is responsible for the report's conclusions and interpretations." comment="Might not be the same entity that takes responsibility for the clinical report.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="specimen" description="Specimens this report is based on" definition="Details about the specimens on which this diagnostic report is based." comment="If the specimen is sufficiently specified with a code in the test result name, then this additional data may be redundant. If there are multiple specimens, these may be represented per observation or group.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="result" description="(QI-Core)(USCDI) Observations" definition="[Observations](http://hl7.org/fhir/R4/observation.html)  that are part of this diagnostic report." comment="Observations can contain observations." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="imagingStudy" description="(QI-Core) Reference to full details of imaging associated with the diagnostic report" definition="One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images." comment="ImagingStudy and the image element are somewhat overlapping - typically, the list of image references in the image element will also be found in one of the imaging study resources. However, each caters to different types of displays for different types of purposes. Neither, either, or both may be provided.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="media" description="(QI-Core)(USCDI) Key images associated with this report" definition="A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DiagnosticReport.Media"/>
        </element>
        <element name="conclusion" elementType="System.String" target="%value.value" description="Clinical conclusion (interpretation) of test results" definition="Concise and clinically contextualized summary conclusion (interpretation/impression) of the diagnostic report."/>
        <element name="conclusionCode" target="FHIRHelpers.ToConcept(%value)" description="Codes for the clinical conclusion of test results" definition="One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="AdjunctDiagnosis" description="Diagnosis codes provided as adjuncts to the report." strength="Example"/>
        </element>
        <element name="presentedForm" description="(USCDI) Entire report as issued" definition="Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent." comment="&quot;application/pdf&quot; is recommended as the most reliable and interoperable in this context." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Attachment"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Display Name" identifier="http://hl7.org/fhir/StructureDefinition/display" label="Display Name" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DoNotPerformReason" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-doNotPerformReason" label="QICore Do Not Perform Reason" retrievable="false" baseType="System.Concept"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="DomainResource" identifier="http://hl7.org/fhir/StructureDefinition/DomainResource" label="DomainResource" retrievable="true" baseType="QICore.Resource">
        <element name="text" elementType="QICore.Narrative" description="Text summary of the resource, for human interpretation" definition="A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it &quot;clinically safe&quot; for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety." comment="Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a &quot;text blob&quot; or where text is additionally entered raw or narrated and encoded information is added later."/>
        <element name="contained" description="Contained, inline Resources" definition="These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope." comment="This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Resource"/>
        </element>
        <element name="extension" description="Additional content defined by implementations" definition="May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension." comment="There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Extension"/>
        </element>
        <element name="modifierExtension" description="Extensions that cannot be ignored" definition="May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.&#10;&#10;Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself)." comment="There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Extension"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Dosage" identifier="http://hl7.org/fhir/StructureDefinition/Dosage" label="Dosage" retrievable="false" baseType="QICore.BackboneElement">
        <element name="sequence" elementType="System.Integer" target="%value.value" description="The order of the dosage instructions" definition="Indicates the order in which the dosage instructions should be applied or interpreted."/>
        <element name="text" elementType="System.String" target="%value.value" description="Free text dosage instructions e.g. SIG" definition="Free text dosage instructions e.g. SIG."/>
        <element name="additionalInstruction" target="FHIRHelpers.ToConcept(%value)" description="Supplemental instruction or warnings to the patient - e.g. &quot;with meals&quot;, &quot;may cause drowsiness&quot;" definition="Supplemental instructions to the patient on how to take the medication  (e.g. &quot;with meals&quot; or&quot;take half to one hour before food&quot;) or warnings for the patient about the medication (e.g. &quot;may cause drowsiness&quot; or &quot;avoid exposure of skin to direct sunlight or sunlamps&quot;)." comment="Information about administration or preparation of the medication (e.g. &quot;infuse as rapidly as possibly via intraperitoneal port&quot; or &quot;immediately following drug x&quot;) should be populated in dosage.text.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="AdditionalInstruction" description="A coded concept identifying additional instructions such as &quot;take with water&quot; or &quot;avoid operating heavy machinery&quot;." strength="Example"/>
        </element>
        <element name="patientInstruction" elementType="System.String" target="%value.value" description="Patient or consumer oriented instructions" definition="Instructions in terms that are understood by the patient or consumer."/>
        <element name="timing" elementType="QICore.Timing" description="When medication should be administered" definition="When medication should be administered." comment="This attribute might not always be populated while the Dosage.text is expected to be populated.  If both are populated, then the Dosage.text should reflect the content of the Dosage.timing."/>
        <element name="asNeeded" target="FHIRHelpers.ToValue(%value)" description="Take &quot;as needed&quot; (for x)" definition="Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept)." comment="Can express &quot;as needed&quot; without a reason by setting the Boolean = True.  In this case the CodeableConcept is not populated.  Or you can express &quot;as needed&quot; with a reason by including the CodeableConcept.  In this case the Boolean is assumed to be True.  If you set the Boolean to False, then the dose is given according to the schedule and is not &quot;prn&quot; or &quot;as needed&quot;.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
            </elementTypeSpecifier>
            <binding name="MedicationAsNeededReason" description="A coded concept identifying the precondition that should be met or evaluated prior to consuming or administering a medication dose.  For example &quot;pain&quot;, &quot;30 minutes prior to sexual intercourse&quot;, &quot;on flare-up&quot; etc." strength="Example"/>
        </element>
        <element name="site" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Body site to administer to" definition="Body site to administer to." comment="If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [bodySite](extension-bodysite.html).  May be a summary code, or a reference to a very precise definition of the location, or both.">
            <binding name="MedicationAdministrationSite" description="A coded concept describing the site location the medicine enters into or onto the body." strength="Example"/>
        </element>
        <element name="route" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How drug should enter body" definition="How drug should enter body.">
            <binding name="RouteOfAdministration" description="A coded concept describing the route or physiological path of administration of a therapeutic agent into or onto the body of a subject." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Technique for administering medication" definition="Technique for administering medication." comment="Terminologies used often pre-coordinate this term with the route and or form of administration.">
            <binding name="MedicationAdministrationMethod" description="A coded concept describing the technique by which the medicine is administered." strength="Example"/>
        </element>
        <element name="doseAndRate" description="Amount of medication administered" definition="The amount of medication administered.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Dosage.DoseAndRate"/>
        </element>
        <element name="maxDosePerPeriod" elementType="System.Ratio" target="FHIRHelpers.ToRatio(%value)" description="Upper limit on medication per unit of time" definition="Upper limit on medication per unit of time." comment="This is intended for use as an adjunct to the dosage when there is an upper cap.  For example &quot;2 tablets every 4 hours to a maximum of 8/day&quot;."/>
        <element name="maxDosePerAdministration" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Upper limit on medication per administration" definition="Upper limit on medication per administration." comment="This is intended for use as an adjunct to the dosage when there is an upper cap.  For example, a body surface area related dose with a maximum amount, such as 1.5 mg/m2 (maximum 2 mg) IV over 5 – 10 minutes would have doseQuantity of 1.5 mg/m2 and maxDosePerAdministration of 2 mg."/>
        <element name="maxDosePerLifetime" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Upper limit on medication per lifetime of the patient" definition="Upper limit on medication per lifetime of the patient."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Dosage.DoseAndRate" retrievable="false" baseType="QICore.Element">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The kind of dose or rate specified" definition="The kind of dose or rate specified, for example, ordered or calculated.">
            <binding name="DoseAndRateType" description="The kind of dose or rate specified." strength="Example"/>
        </element>
        <element name="dose" target="FHIRHelpers.ToValue(%value)" description="Amount of medication per dose" definition="Amount of medication per dose." comment="Note that this specifies the quantity of the specified medication, not the quantity for each active ingredient(s). Each ingredient amount can be communicated in the Medication resource. For example, if one wants to communicate that a tablet was 375 mg, where the dose was one tablet, you can use the Medication resource to document that the tablet was comprised of 375 mg of drug XYZ. Alternatively if the dose was 375 mg, then you may only need to use the Medication resource to indicate this was a tablet. If the example were an IV such as dopamine and you wanted to communicate that 400mg of dopamine was mixed in 500 ml of some IV solution, then this would all be communicated in the Medication resource. If the administration is not intended to be instantaneous (rate is present or timing has a duration), this can be specified to convey the total amount to be administered over the period of time as indicated by the schedule e.g. 500 ml in dose, with timing used to convey that this should be done over 4 hours.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
        </element>
        <element name="rate" target="FHIRHelpers.ToValue(%value)" description="Amount of medication per unit of time" definition="Amount of medication per unit of time." comment="It is possible to supply both a rate and a doseQuantity to provide full details about how the medication is to be administered and supplied. If the rate is intended to change over time, depending on local rules/regulations, each change should be captured as a new version of the MedicationRequest with an updated rate, or captured with a new MedicationRequest with the new rate.&#13;&#13;It is possible to specify a rate over time (for example, 100 ml/hour) using either the rateRatio and rateQuantity.  The rateQuantity approach requires systems to have the capability to parse UCUM grammer where ml/hour is included rather than a specific ratio where the time is specified as the denominator.  Where a rate such as 500ml over 2 hours is specified, the use of rateRatio may be more semantically correct than specifying using a rateQuantity of 250 mg/hour.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Element" identifier="http://hl7.org/fhir/StructureDefinition/Element" label="Element" retrievable="false" baseType="System.Any">
        <element name="id" elementType="System.String" target="%value.value" description="Unique id for inter-element referencing" definition="Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces."/>
        <element name="extension" description="Additional content defined by implementations" definition="May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension." comment="There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Extension"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="EnableWhenBehavior" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Encounter" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-encounter" label="QICore Encounter" retrievable="true" primaryCodePath="type" baseType="QICore.DomainResource">
        <element name="identifier" description="(USCDI) Identifier(s) by which this encounter is known" definition="Identifier(s) by which this encounter is known." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.EncounterStatus" target="%value.value" description="(USCDI) planned | arrived | triaged | in-progress | onleave | finished | cancelled +" definition="planned | arrived | triaged | in-progress | onleave | finished | cancelled +." comment="Note that internal business rules will determine the appropriate transitions that may occur between statuses (and also classes)." mustSupport="true">
            <binding name="EncounterStatus" description="Current state of the encounter." strength="Required"/>
        </element>
        <element name="statusHistory" description="List of past encounter statuses" definition="The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them." comment="The current status is always found in the current version of the resource, not the status history.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Encounter.StatusHistory"/>
        </element>
        <element name="class" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="(USCDI) Classification of patient encounter" definition="Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations." mustSupport="true">
            <binding name="EncounterClass" description="Classification of the encounter." strength="Extensible"/>
        </element>
        <element name="classHistory" description="List of past encounter classes" definition="The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Encounter.ClassHistory"/>
        </element>
        <element name="type" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Specific type of encounter" definition="Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation)." comment="Since there are many ways to further classify encounters, this element is 0..*." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Valueset to describe the Encounter Type" strength="Extensible"/>
        </element>
        <element name="serviceType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Specific type of service" definition="Broad categorization of the service that is to be provided (e.g. cardiology).">
            <binding name="EncounterServiceType" description="Broad categorization of the service that is to be provided." strength="Example"/>
        </element>
        <element name="priority" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Indicates the urgency of the encounter" definition="Indicates the urgency of the encounter.">
            <binding name="Priority" description="Indicates the urgency of the encounter." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) The patient or group present at the encounter" definition="The patient or group present at the encounter." comment="While the encounter is always about the patient, the patient might not actually be known in all contexts of use, and there may be a group of patients that could be anonymous (such as in a group therapy for Alcoholics Anonymous - where the recording of the encounter could be used for billing on the number of people/staff and not important to the context of the specific patients) or alternately in veterinary care a herd of sheep receiving treatment (where the animals are not individually tracked)." mustSupport="true"/>
        <element name="episodeOfCare" description="Episode(s) of care that this encounter should be recorded against" definition="Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="basedOn" description="The ServiceRequest that initiated this encounter" definition="The request this encounter satisfies (e.g. incoming referral or procedure request).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="participant" description="(QI-Core)(USCDI) List of participants involved in the encounter" definition="The list of people responsible for providing the service." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Encounter.Participant"/>
        </element>
        <element name="appointment" description="The appointment that scheduled this encounter" definition="The appointment that scheduled this encounter.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="(USCDI) The start and end time of the encounter" definition="The start and end time of the encounter." comment="If not (yet) known, the end of the Period may be omitted." mustSupport="true">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="length" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Quantity of time the encounter lasted (less time absent)" definition="Quantity of time the encounter lasted. This excludes the time during leaves of absence." comment="May differ from the time the Encounter.period lasted because of leave of absence."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Coded reason the encounter takes place" definition="Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis." comment="For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="EncounterReason" description="Reason why the encounter takes place." strength="Preferred"/>
        </element>
        <element name="reasonReference" description="(QI-Core)(USCDI) Reason the encounter takes place (reference)" definition="Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis." comment="For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="diagnosis" description="The list of diagnosis relevant to this encounter" definition="The list of diagnosis relevant to this encounter.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Encounter.Diagnosis"/>
        </element>
        <element name="account" description="The set of accounts that may be used for billing for this Encounter" definition="The set of accounts that may be used for billing for this Encounter." comment="The billing system may choose to allocate billable items associated with the Encounter to different referenced Accounts based on internal business rules.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="hospitalization" elementType="QICore.Encounter.Hospitalization" description="(QI-Core)(USCDI) Details about the admission to a healthcare service" definition="Details about the admission to a healthcare service." comment="An Encounter may cover more than just the inpatient stay. Contexts such as outpatients, community clinics, and aged care facilities are also included.&#13;&#13;The duration recorded in the period of this encounter covers the entire scope of this hospitalization record." mustSupport="true"/>
        <element name="location" description="(QI-Core)(USCDI) List of locations where the patient has been" definition="List of locations where  the patient has been during this encounter." comment="Virtual encounters can be recorded in the Encounter by specifying a location reference to a location of type &quot;kind&quot; such as &quot;client's home&quot; and an encounter.class = &quot;virtual&quot;." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Encounter.Location"/>
        </element>
        <element name="serviceProvider" elementType="QICore.Reference" description="(QI-Core)(USCDI) The organization (facility) responsible for this encounter" definition="The organization that is primarily responsible for this Encounter's services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy." mustSupport="true"/>
        <element name="partOf" elementType="QICore.Reference" description="Another Encounter this encounter is part of" definition="Another Encounter of which this encounter is a part of (administratively or in time)." comment="This is also used for associating a child's encounter back to the mother's encounter.&#13;&#13;Refer to the Notes section in the Patient resource for further details." mustSupport="false"/>
        <contextRelationship context="Practitioner" relatedKeyElement="where(resolve() is Practitioner)"/>
        <contextRelationship context="Practitioner" relatedKeyElement="individual"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="individual"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Encounter.ClassHistory" retrievable="false" baseType="QICore.BackboneElement">
        <element name="class" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="inpatient | outpatient | ambulatory | emergency +" definition="inpatient | outpatient | ambulatory | emergency +.">
            <binding name="EncounterClass" description="Classification of the encounter." strength="Extensible"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="The time that the episode was in the specified class" definition="The time that the episode was in the specified class.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Encounter.Diagnosis" retrievable="false" baseType="QICore.BackboneElement">
        <element name="condition" elementType="QICore.Reference" description="The diagnosis or procedure relevant to the encounter" definition="Reason the encounter takes place, as specified using information from another resource. For admissions, this is the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure." comment="For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis)."/>
        <element name="use" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …)" definition="Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …).">
            <binding name="DiagnosisRole" description="The type of diagnosis this condition represents." strength="Preferred"/>
        </element>
        <element name="rank" elementType="System.Integer" target="%value.value" description="Ranking of the diagnosis (for each role type)" definition="Ranking of the diagnosis (for each role type)."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Encounter.Hospitalization" retrievable="false" baseType="QICore.BackboneElement">
        <element name="preAdmissionIdentifier" elementType="QICore.Identifier" description="Pre-admission identifier" definition="Pre-admission identifier."/>
        <element name="origin" elementType="QICore.Reference" description="The location/organization from which the patient came before admission" definition="The location/organization from which the patient came before admission." mustSupport="false"/>
        <element name="admitSource" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="From where patient was admitted (physician referral, transfer)" definition="From where patient was admitted (physician referral, transfer).">
            <binding name="AdmitSource" description="From where the patient was admitted." strength="Preferred"/>
        </element>
        <element name="reAdmission" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The type of hospital re-admission that has occurred (if any). If the value is absent, then this is not identified as a readmission" definition="Whether this hospitalization is a readmission and why if known.">
            <binding name="ReAdmissionType" description="The reason for re-admission of this hospitalization encounter." strength="Example"/>
        </element>
        <element name="dietPreference" target="FHIRHelpers.ToConcept(%value)" description="Diet preferences reported by the patient" definition="Diet preferences reported by the patient." comment="For example, a patient may request both a dairy-free and nut-free diet preference (not mutually exclusive).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="PatientDiet" description="Medical, cultural or ethical food preferences to help with catering requirements." strength="Example"/>
        </element>
        <element name="specialCourtesy" target="FHIRHelpers.ToConcept(%value)" description="Special courtesies (VIP, board member)" definition="Special courtesies (VIP, board member).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Courtesies" description="Special courtesies." strength="Preferred"/>
        </element>
        <element name="specialArrangement" target="FHIRHelpers.ToConcept(%value)" description="Wheelchair, translator, stretcher, etc." definition="Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Arrangements" description="Special arrangements." strength="Preferred"/>
        </element>
        <element name="destination" elementType="QICore.Reference" description="Location/organization to which the patient is discharged" definition="Location/organization to which the patient is discharged." mustSupport="false"/>
        <element name="dischargeDisposition" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Category or kind of location after discharge" definition="Category or kind of location after discharge." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Encounter.Location" retrievable="false" baseType="QICore.BackboneElement">
        <element name="location" elementType="QICore.Reference" description="(QI-Core)(USCDI) Location the encounter takes place" definition="The location where the encounter takes place." mustSupport="true"/>
        <element name="status" elementType="QICore.EncounterLocationStatus" target="%value.value" description="planned | active | reserved | completed" definition="The status of the participants' presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time." comment="When the patient is no longer active at a location, then the period end date is entered, and the status may be changed to completed.">
            <binding name="EncounterLocationStatus" description="The status of the location." strength="Required"/>
        </element>
        <element name="physicalType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The physical type of the location (usually the level in the location hierachy - bed room ward etc.)" definition="This will be used to specify the required levels (bed/ward/room/etc.) desired to be recorded to simplify either messaging or query." comment="This information is de-normalized from the Location resource to support the easier understanding of the encounter resource and processing in messaging or query.&#10;&#10;There may be many levels in the hierachy, and this may only pic specific levels that are required for a specific usage scenario.">
            <binding name="PhysicalType" description="Physical form of the location." strength="Example"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="(QI-Core) Time period during which the patient was present at the location" definition="Time period during which the patient was present at the location.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Encounter.Participant" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Role of participant in encounter" definition="Role of participant in encounter." comment="The participant type indicates how an individual participates in an encounter. It includes non-practitioner participants, and for practitioners this is to describe the action type in the context of this encounter (e.g. Admitting Dr, Attending Dr, Translator, Consulting Dr). This is different to the practitioner roles which are functional roles, derived from terms of employment, education, licensing, etc." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ParticipantType" description="Role of participant in encounter." strength="Extensible"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="(USCDI) Period of time during the encounter that the participant participated" definition="The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter's period." mustSupport="true">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="individual" elementType="QICore.Reference" description="(QI-Core)(USCDI) Persons involved in the encounter other than the patient" definition="Persons involved in the encounter other than the patient." comment="Should include QICore-RelatedPerson as a possible participant, but USCore-Encounter only allows USCore-Practitioner." mustSupport="true"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Encounter.StatusHistory" retrievable="false" baseType="QICore.BackboneElement">
        <element name="status" elementType="QICore.EncounterStatus" target="%value.value" description="planned | arrived | triaged | in-progress | onleave | finished | cancelled +" definition="planned | arrived | triaged | in-progress | onleave | finished | cancelled +.">
            <binding name="EncounterStatus" description="Current state of the encounter." strength="Required"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="The time that the episode was in the specified status" definition="The time that the episode was in the specified status.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="EncounterLocationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="EncounterStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="EventTiming" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Expression" identifier="http://hl7.org/fhir/StructureDefinition/Expression" label="Expression" retrievable="false" baseType="QICore.Element">
        <element name="description" elementType="System.String" target="%value.value" description="Natural language description of the condition" definition="A brief, natural language description of the condition that effectively communicates the intended semantics."/>
        <element name="name" elementType="System.String" target="%value.value" description="Short name assigned to expression for reuse" definition="A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined."/>
        <element name="language" elementType="System.String" target="%value.value" description="text/cql | text/fhirpath | application/x-fhir-query | etc." definition="The media type of the language for the expression.">
            <binding name="ExpressionLanguage" description="The media type of the expression language." strength="Extensible"/>
        </element>
        <element name="expression" elementType="System.String" target="%value.value" description="Expression in specified language" definition="An expression in the specified language that returns a value."/>
        <element name="reference" elementType="System.String" target="%value.value" description="Where the expression is found" definition="A URI that defines where the expression is found." comment="If both a reference and an expression is found, the reference SHALL point to the same expression."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Extension" identifier="http://hl7.org/fhir/StructureDefinition/Extension" label="Extension" retrievable="false" baseType="QICore.Element">
        <element name="url" elementType="System.String" target="%value.value" description="identifies the meaning of the extension" definition="Source of the definition for the extension code - a logical name or a URL." comment="The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension."/>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Value of extension" definition="Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Address"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Annotation"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Attachment"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Code"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ContactPoint"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="HumanName"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Identifier"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="SampledData"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Signature"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ContactDetail"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Contributor"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="DataRequirement"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Expression"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ParameterDefinition"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="RelatedArtifact"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="TriggerDefinition"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="UsageContext"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Dosage"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Meta"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="FHIRAllTypes" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="FHIRDeviceStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="FHIRSubstanceStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="FamilyHistoryStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="FamilyMemberHistory" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-familymemberhistory" label="QICore FamilyMemberHistory" retrievable="true" primaryCodePath="relationship" baseType="QICore.DomainResource">
        <element name="identifier" description="External Id(s) for this record" definition="Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="status" elementType="QICore.FamilyHistoryStatus" target="%value.value" description="partial | completed | entered-in-error | health-unknown" definition="A code specifying the status of the record of the family history of a specific family member." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="FamilyHistoryStatus" description="A code that identifies the status of the family history record." strength="Required"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="subject-unknown | withheld | unable-to-obtain | deferred" definition="Describes why the family member's history is not available.">
            <binding name="FamilyHistoryAbsentReason" description="Codes describing the reason why a family member's history is not available." strength="Example"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) Patient history is about" definition="The person who this history concerns."/>
        <element name="date" elementType="System.DateTime" target="%value.value" description="(QI-Core) When history was recorded or last updated" definition="The date (and possibly time) when the family member history was recorded or last updated." comment="This should be captured even if the same as the date on the List aggregating the full family history."/>
        <element name="name" elementType="System.String" target="%value.value" description="The family member described" definition="This will either be a name or a description; e.g. &quot;Aunt Susan&quot;, &quot;my cousin with the red hair&quot;."/>
        <element name="relationship" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Relationship to the subject" definition="The type of relationship this person has to the patient (father, mother, brother etc.).">
            <binding strength="Preferred"/>
        </element>
        <element name="sex" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="male | female | other | unknown" definition="The birth sex of the family member." comment="This element should ideally reflect whether the individual is genetically male or female.  However, as reported information based on the knowledge of the patient or reporting friend/relative, there may be situations where the reported sex might not be totally accurate.  E.g. 'Aunt Sue' might be XY rather than XX.  Questions soliciting this information should be phrased to encourage capture of genetic sex where known.  However, systems performing analysis should also allow for the possibility of imprecision with this element.">
            <binding name="Sex" description="Codes describing the sex assigned at birth as documented on the birth registration." strength="Extensible"/>
        </element>
        <element name="born" target="FHIRHelpers.ToValue(%value)" description="(approximate) date of birth" definition="The actual or approximate date of birth of the relative.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="age" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) (approximate) age" definition="The age of the relative at the time the family member history is recorded." comment="use estimatedAge to indicate whether the age is actual or not.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="estimatedAge" elementType="System.Boolean" target="%value.value" description="Age is estimated?" definition="If true, indicates that the age value specified is an estimated value." comment="This element is labeled as a modifier because the fact that age is estimated can/should change the results of any algorithm that calculates based on the specified age."/>
        <element name="deceased" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Dead? How old/when?" definition="Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why was family member history performed?" definition="Describes why the family member history occurred in coded or textual form." comment="Textual reasons can be captured using reasonCode.text.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="FamilyHistoryReason" description="Codes indicating why the family member history was done." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why was family member history performed?" definition="Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="General note about related person" definition="This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="condition" description="Condition that the related person had" definition="The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.FamilyMemberHistory.Condition"/>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="FamilyMemberHistory.Condition" retrievable="false" baseType="QICore.BackboneElement">
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Condition suffered by relation" definition="The actual condition specified. Could be a coded condition (like MI or Diabetes) or a less specific string like 'cancer' depending on how much is known about the condition and the capabilities of the creating system.">
            <binding description="Identification of the Condition or diagnosis." strength="Extensible"/>
        </element>
        <element name="outcome" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="deceased | permanent disability | etc." definition="Indicates what happened following the condition.  If the condition resulted in death, deceased date is captured on the relation.">
            <binding name="ConditionOutcome" description="The result of the condition for the patient; e.g. death, permanent disability, temporary disability, etc." strength="Example"/>
        </element>
        <element name="contributedToDeath" elementType="System.Boolean" target="%value.value" description="Whether the condition contributed to the cause of death" definition="This condition contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown."/>
        <element name="onset" target="FHIRHelpers.ToValue(%value)" description="When condition first manifested" definition="Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence." mustSupport="false">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="note" description="Extra information about condition" definition="An area where general notes can be placed about this specific condition.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="condition-abatement" elementType="QICore.abatement" target="FHIRHelpers.ToValue(%parent.condition.extension[url='http://hl7.org/fhir/StructureDefinition/familymemberhistory-abatement'].value)" description="When (or if) the family member's condition resolved" definition="The approximate date, age, or flag indicating that the condition of the family member resolved. The abatement should only be specified if the condition is stated in the positive sense, i.e., the didNotHave flag is false." mustSupport="false"/>
        <element name="condition-severity" elementType="QICore.severity" target="FHIRHelpers.ToConcept(%parent.condition.extension[url='http://hl7.org/fhir/StructureDefinition/familymemberhistory-severity'].value)" description="The seriousness of the family member condition" definition="A qualification of the seriousness or impact on health of the family member condition." mustSupport="false"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Flag" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-flag" label="QICore Flag" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business identifier" definition="Business identifiers assigned to this flag by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.FlagStatus" target="%value.value" description="(QI-Core) active | inactive | entered-in-error" definition="Supports basic workflow." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="FlagStatus" description="Indicates whether this flag is active and needs to be displayed to a user, or whether it is no longer needed or was entered in error." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Clinical, administrative, etc." definition="Allows a flag to be divided into different categories like clinical, administrative etc. Intended to be used as a means of filtering which flags are displayed to particular user or in a given context." comment="The value set will often need to be adjusted based on local business rules and usage context.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Coded or textual message to display to user" definition="The coded value or textual component of the flag to display to the user." comment="If non-coded, use CodeableConcept.text.  This element should always be included in the narrative.">
            <binding strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Who/What is flag about?" definition="The patient, location, group, organization, or practitioner etc. this is about record this flag is associated with."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="(QI-Core) Time period when flag is active" definition="The period of time from the activation of the flag to inactivation of the flag. If the flag is active, the end of the period should be unspecified.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Alert relevant during encounter" definition="This alert is only relevant during the encounter." comment="If both Flag.encounter and Flag.period are valued, then Flag.period.start shall not be before Encounter.period.start and Flag.period.end shall not be after Encounter.period.end."/>
        <element name="author" elementType="QICore.Reference" description="Flag creator" definition="The person, organization or device that created the flag."/>
        <contextRelationship context="Practitioner" relatedKeyElement="author"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Device" relatedKeyElement="author"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="FlagStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Goal" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-goal" label="QICore Goal" retrievable="true" primaryCodePath="category" baseType="QICore.DomainResource">
        <element name="identifier" description="External Ids for this goal" definition="Business identifiers assigned to this goal by the performer or other systems which remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="lifecycleStatus" elementType="System.String" target="%value.value" description="(USCDI) proposed | planned | accepted | active | on-hold | completed | cancelled | entered-in-error | rejected" definition="The state of the goal throughout its lifecycle." comment="This element is labeled as a modifier because the lifecycleStatus contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="achievementStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="in-progress | improving | worsening | no-change | achieved | sustaining | not-achieved | no-progress | not-attainable" definition="Describes the progression, or lack thereof, towards the goal against the target.">
            <binding name="GoalAchievementStatus" description="Indicates the progression, or lack thereof, towards the goal against the target." strength="Preferred"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="E.g. Treatment, dietary, behavioral, etc." definition="Indicates a category the goal falls within.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="GoalCategory" description="Codes for grouping and sorting goals." strength="Example"/>
        </element>
        <element name="priority" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="high-priority | medium-priority | low-priority" definition="Identifies the mutually agreed level of importance associated with reaching/sustaining the goal." comment="Extensions are available to track priorities as established by each participant (i.e. Priority from the patient's perspective, different practitioners' perspectives, family member's perspectives)&#13;&#13;The ordinal extension on Coding can be used to convey a numerically comparable ranking to priority.  (Keep in mind that different coding systems may use a &quot;low value=important&quot;.">
            <binding name="GoalPriority" description="The level of importance associated with a goal." strength="Preferred"/>
        </element>
        <element name="description" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Code or text describing goal" definition="Human-readable and/or coded description of a specific desired objective of care, such as &quot;control blood pressure&quot; or &quot;negotiate an obstacle course&quot; or &quot;dance with child at wedding&quot;." comment="If no code is available, use CodeableConcept.text." mustSupport="true">
            <binding description="Value set to describe the Goal" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who this goal is intended for" definition="Identifies the patient, group or organization for whom the goal is being established." comment="Should include QICore-Organization, but the base profile only allows USCore-Patient derivatives." mustSupport="true"/>
        <element name="start" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) When goal pursuit begins" definition="The date or event after which the goal should begin being pursued." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
            </elementTypeSpecifier>
            <binding name="GoalStartEvent" description="Codes describing events that can trigger the initiation of a goal." strength="Preferred"/>
        </element>
        <element name="target" description="(QI-Core)(USCDI) Target outcome for the goal" definition="Indicates what should be done by when." comment="When multiple targets are present for a single goal instance, all targets must be met for the overall goal to be met." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Goal.Target"/>
            <constraint name="gol-1" severity="ERROR" message="Goal.target.measure is required if Goal.target.detail is populated">
                <expression language="text/fhirpath" expression="(detail.exists() and measure.exists()) or detail.exists().not()"/>
            </constraint>
        </element>
        <element name="statusDate" elementType="System.Date" target="%value.value" description="When goal status took effect" definition="Identifies when the current status.  I.e. When initially created, when achieved, when cancelled, etc." comment="To see the date for past statuses, query history."/>
        <element name="statusReason" elementType="System.String" target="%value.value" description="Reason for current status" definition="Captures the reason for the current status." comment="This will typically be captured for statuses such as rejected, on-hold or cancelled, but could be present for others."/>
        <element name="expressedBy" elementType="QICore.Reference" description="Who's responsible for creating Goal?" definition="Indicates whose goal this is - patient goal, practitioner goal, etc." comment="This is the individual responsible for establishing the goal, not necessarily who recorded it.  (For that, use the Provenance resource.)."/>
        <element name="addresses" description="Issues addressed by this goal" definition="The identified conditions and other health record elements that are intended to be addressed by the goal.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Comments about the goal" definition="Any comments related to the goal." comment="May be used for progress notes, concerns or other related information that doesn't actually describe the goal itself.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="outcomeCode" target="FHIRHelpers.ToConcept(%value)" description="What result was achieved regarding the goal?" definition="Identifies the change (or lack of change) at the point when the status of the goal is assessed." comment="Note that this should not duplicate the goal status.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="GoalOutcome" description="The result of the goal; e.g. &quot;25% increase in shoulder mobility&quot;, &quot;Anxiety reduced to moderate levels&quot;.  &quot;15 kg weight loss sustained over 6 months&quot;." strength="Example"/>
        </element>
        <element name="outcomeReference" description="Observation that resulted from goal" definition="Details of what's changed (or not changed)." comment="The goal outcome is independent of the outcome of the related activities.  For example, if the Goal is to achieve a target body weight of 150 lb and a care plan activity is defined to diet, then the care plan’s activity outcome could be calories consumed whereas goal outcome is an observation for the actual body weight measured.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Goal.Target" retrievable="false" baseType="QICore.BackboneElement">
        <element name="measure" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The parameter whose value is being tracked" definition="The parameter whose value is being tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.">
            <binding name="GoalTargetMeasure" description="Codes to identify the value being tracked, e.g. body weight, blood pressure, or hemoglobin A1c level." strength="Example"/>
        </element>
        <element name="detail" target="FHIRHelpers.ToValue(%value)" description="The target value to be achieved" definition="The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value." comment="A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Goal.target.measure defines a coded value.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
            </elementTypeSpecifier>
            <binding name="GoalTargetDetail" description="Codes to identify the target value of the focus to be achieved to signify the fulfillment of the goal." strength="Example"/>
        </element>
        <element name="due" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Reach goal on or before" definition="Indicates either the date or the duration after start by which the goal should be met." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="HumanName" identifier="http://hl7.org/fhir/StructureDefinition/HumanName" label="HumanName" retrievable="false" baseType="QICore.Element">
        <element name="use" elementType="QICore.NameUse" target="%value.value" description="usual | official | temp | nickname | anonymous | old | maiden" definition="Identifies the purpose for this name." comment="Applications can assume that a name is current unless it explicitly says that it is temporary or old.">
            <binding name="NameUse" description="The use of a human name." strength="Required"/>
        </element>
        <element name="text" elementType="System.String" target="%value.value" description="Text representation of the full name" definition="Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts." comment="Can provide both a text representation and parts. Applications updating a name SHALL ensure that when both text and parts are present,  no content is included in the text that isn't found in a part."/>
        <element name="family" elementType="System.String" target="%value.value" description="Family name (often called 'Surname')" definition="The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father." comment="Family Name may be decomposed into specific parts using extensions (de, nl, es related cultures)."/>
        <element name="given" target="%value.value" description="Given names (not always 'first'). Includes middle names" definition="Given name." comment="If only initials are recorded, they may be used in place of the full name parts. Initials may be separated into multiple given names but often aren't due to paractical limitations.  This element is not called &quot;first name&quot; since given names do not always come first.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="prefix" target="%value.value" description="Parts that come before the name" definition="Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="suffix" target="%value.value" description="Parts that come after the name" definition="Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Time period when name was/is in use" definition="Indicates the period of time when this name was valid for the named person.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Identifier" identifier="http://hl7.org/fhir/StructureDefinition/Identifier" label="Identifier" retrievable="false" baseType="QICore.Element">
        <element name="use" elementType="QICore.IdentifierUse" target="%value.value" description="usual | official | temp | secondary | old (If known)" definition="The purpose of this identifier." comment="Applications can assume that an identifier is permanent unless it explicitly says that it is temporary.">
            <binding name="IdentifierUse" description="Identifies the purpose for this identifier, if known ." strength="Required"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Description of identifier" definition="A coded type for the identifier that can be used to determine which identifier to use for a specific purpose." comment="This element deals only with general categories of identifiers.  It SHOULD not be used for codes that correspond 1..1 with the Identifier.system. Some identifiers may fall into multiple categories due to common usage.   Where the system is known, a type is unnecessary because the type is always part of the system definition. However systems often need to handle identifiers where the system is not known. There is not a 1:1 relationship between type and system, since many different systems have the same type.">
            <binding name="IdentifierType" description="A coded type for an identifier that can be used to determine which identifier to use for a specific purpose." strength="Extensible"/>
        </element>
        <element name="system" elementType="System.String" target="%value.value" description="The namespace for the identifier value" definition="Establishes the namespace for the value - that is, a URL that describes a set values that are unique." comment="Identifier.system is always case sensitive."/>
        <element name="value" elementType="System.String" target="%value.value" description="The value that is unique" definition="The portion of the identifier typically relevant to the user and which is unique within the context of the system." comment="If the value is a full URI, then the system SHALL be urn:ietf:rfc:3986.  The value's primary purpose is computational mapping.  As a result, it may be normalized for comparison purposes (e.g. removing non-significant whitespace, dashes, etc.)  A value formatted for human display can be conveyed using the [Rendered Value extension](extension-rendered-value.html). Identifier.value is to be treated as case sensitive unless knowledge of the Identifier.system allows the processer to be confident that non-case-sensitive processing is safe."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Time period when id is/was valid for use" definition="Time period during which identifier is/was valid for use.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="assigner" elementType="QICore.Reference" description="Organization that issued id (may be just text)" definition="Organization that issued/manages the identifier." comment="The Identifier.assigner may omit the .reference element and only contain a .display element reflecting the name or other textual information about the assigning organization."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="IdentifierUse" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImagingStudy" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-imagingstudy" label="QICore ImagingStudy" retrievable="true" primaryCodePath="procedureCode" baseType="QICore.DomainResource">
        <element name="identifier" description="Identifiers for the whole study" definition="Identifiers for the ImagingStudy such as DICOM Study Instance UID, and Accession Number." comment="See discussion under [Imaging Study Implementation Notes](imagingstudy.html#notes) for encoding of DICOM Study Instance UID. Accession Number should use ACSN Identifier type.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.ImagingStudyStatus" target="%value.value" description="registered | available | cancelled | entered-in-error | unknown" definition="The current state of the ImagingStudy." comment="Unknown does not represent &quot;other&quot; - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.">
            <binding name="ImagingStudyStatus" description="The status of the ImagingStudy." strength="Required"/>
        </element>
        <element name="modality" target="FHIRHelpers.ToCode(%value)" description="All series modality if actual acquisition modalities" definition="A list of all the series.modality values that are actual acquisition modalities, i.e. those in the DICOM Context Group 29 (value set OID 1.2.840.10008.6.1.19).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
            <binding name="ImagingModality" description="Type of acquired data in the instance." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Who or what is the subject of the study" definition="The subject, typically a patient, of the imaging study." comment="QA phantoms can be recorded with a Device; multiple subjects (such as mice) can be recorded with a Group."/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter with which this imaging study is associated" definition="The healthcare event (e.g. a patient and healthcare provider interaction) during which this ImagingStudy is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission test)."/>
        <element name="started" elementType="System.DateTime" target="%value.value" description="(QI-Core) When the study was started" definition="Date and time the study started."/>
        <element name="basedOn" description="(QI-Core) Request fulfilled" definition="A list of the diagnostic requests that resulted in this imaging study being performed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="referrer" elementType="QICore.Reference" description="Referring physician" definition="The requesting/referring physician." mustSupport="false"/>
        <element name="interpreter" description="Who interpreted images" definition="Who read the study and interpreted the images or other content." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="endpoint" description="Study access endpoint" definition="The network service providing access (e.g., query, view, or retrieval) for the study. See implementation notes for information about using DICOM endpoints. A study-level endpoint applies to each series in the study, unless overridden by a series-level endpoint with the same Endpoint.connectionType." comment="Typical endpoint types include DICOM WADO-RS, which is used to retrieve DICOM instances in native or rendered (e.g., JPG, PNG), formats using a RESTful API; DICOM WADO-URI, which can similarly retrieve native or rendered instances, except using an HTTP query-based approach; DICOM QIDO-RS, which allows RESTful query for DICOM information without retrieving the actual instances; or IHE Invoke Image Display (IID), which provides standard invocation of an imaging web viewer.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="numberOfSeries" elementType="System.Integer" target="%value.value" description="Number of Study Related Series" definition="Number of Series in the Study. This value given may be larger than the number of series elements this Resource contains due to resource availability, security, or other factors. This element should be present if any series elements are present."/>
        <element name="numberOfInstances" elementType="System.Integer" target="%value.value" description="Number of Study Related Instances" definition="Number of SOP Instances in Study. This value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present."/>
        <element name="procedureReference" elementType="QICore.Reference" description="(QI-Core) The performed Procedure reference" definition="The procedure which this ImagingStudy was part of."/>
        <element name="procedureCode" target="FHIRHelpers.ToConcept(%value)" description="The performed procedure code" definition="The code for the performed procedure type.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ImagingProcedureCode" description="The performed procedure type." strength="Extensible"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where ImagingStudy occurred" definition="The principal physical location where the ImagingStudy was performed."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why the study was requested" definition="Description of clinical condition indicating why the ImagingStudy was requested.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ImagingReason" description="The reason for the study." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why was study performed" definition="Indicates another resource whose existence justifies this Study.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="User-defined comments" definition="Per the recommended DICOM mapping, this element is derived from the Study Description attribute (0008,1030). Observations or findings about the imaging study should be recorded in another resource, e.g. Observation, and not in this element.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Institution-generated description" definition="The Imaging Manager description of the study. Institution-generated description or classification of the Study (component) performed."/>
        <element name="series" description="Each study has one or more series of instances" definition="Each study has one or more series of images or other content.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ImagingStudy.Series"/>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImagingStudy.Series" retrievable="false" baseType="QICore.BackboneElement">
        <element name="uid" elementType="System.String" target="%value.value" description="DICOM Series Instance UID for the series" definition="The DICOM Series Instance UID for the series." comment="See [DICOM PS3.3 C.7.3](http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.3.html)."/>
        <element name="number" elementType="System.Integer" target="%value.value" description="Numeric identifier of this series" definition="The numeric identifier of this series in the study."/>
        <element name="modality" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="The modality of the instances in the series" definition="The modality of this series sequence.">
            <binding name="ImagingModality" description="Type of acquired data in the instance." strength="Extensible"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="A short human readable summary of the series" definition="A description of the series."/>
        <element name="numberOfInstances" elementType="System.Integer" target="%value.value" description="Number of Series Related Instances" definition="Number of SOP Instances in the Study. The value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present."/>
        <element name="endpoint" description="Series access endpoint" definition="The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType." comment="Typical endpoint types include DICOM WADO-RS, which is used to retrieve DICOM instances in native or rendered (e.g., JPG, PNG) formats using a RESTful API; DICOM WADO-URI, which can similarly retrieve native or rendered instances, except using an HTTP query-based approach; and DICOM QIDO-RS, which allows RESTful query for DICOM information without retrieving the actual instances.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="bodySite" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="Body part examined" definition="The anatomic structures examined. See DICOM Part 16 Annex L (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for DICOM to SNOMED-CT mappings. The bodySite may indicate the laterality of body part imaged; if so, it shall be consistent with any content of ImagingStudy.series.laterality.">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="laterality" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="Body part laterality" definition="The laterality of the (possibly paired) anatomic structures examined. E.g., the left knee, both lungs, or unpaired abdomen. If present, shall be consistent with any laterality information indicated in ImagingStudy.series.bodySite.">
            <binding name="Laterality" description="Codes describing body site laterality (left, right, etc.)." strength="Example"/>
        </element>
        <element name="specimen" description="Specimen imaged" definition="The specimen imaged, e.g., for whole slide imaging of a biopsy.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="started" elementType="System.DateTime" target="%value.value" description="When the series started" definition="The date and time the series was started."/>
        <element name="performer" description="Who performed the series" definition="Indicates who or what performed the series and how they were involved." comment="If the person who performed the series is not known, their Organization may be recorded. A patient, or related person, may be the performer, e.g. for patient-captured images.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ImagingStudy.Series.Performer"/>
        </element>
        <element name="instance" description="A single SOP instance from the series" definition="A single SOP instance within the series, e.g. an image, or presentation state.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ImagingStudy.Series.Instance"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImagingStudy.Series.Instance" retrievable="false" baseType="QICore.BackboneElement">
        <element name="uid" elementType="System.String" target="%value.value" description="DICOM SOP Instance UID" definition="The DICOM SOP Instance UID for this image or other DICOM content." comment="See  [DICOM PS3.3 C.12.1](http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.12.html#sect_C.12.1)."/>
        <element name="sopClass" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="DICOM class type" definition="DICOM instance  type.">
            <binding name="sopClass" description="The sopClass for the instance." strength="Extensible"/>
        </element>
        <element name="number" elementType="System.Integer" target="%value.value" description="The number of this instance in the series" definition="The number of instance in the series."/>
        <element name="title" elementType="System.String" target="%value.value" description="Description of instance" definition="The description of the instance." comment="Particularly for post-acquisition analytic objects, such as SR, presentation states, value mapping, etc."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImagingStudy.Series.Performer" retrievable="false" baseType="QICore.BackboneElement">
        <element name="function" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of performance" definition="Distinguishes the type of involvement of the performer in the series.">
            <binding name="EventPerformerFunction" description="The type of involvement of the performer." strength="Extensible"/>
        </element>
        <element name="actor" elementType="QICore.Reference" description="Who performed the series" definition="Indicates who or what performed the series."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImagingStudyStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Immunization" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunization" label="QICore Immunization" retrievable="true" primaryCodePath="vaccineCode" baseType="QICore.DomainResource">
        <element name="identifier" description="Business identifier" definition="A unique identifier assigned to this immunization record.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) completed | entered-in-error" definition="Indicates the current status of the immunization event." comment="Will generally be set to show that the immunization has been completed or not done.  This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Reason not done" definition="Indicates the reason the immunization event was not performed." comment="This is generally only used for the status of &quot;not-done&quot;. The reason for performing the immunization event is captured in reasonCode, not here." mustSupport="true">
            <binding strength="Preferred"/>
        </element>
        <element name="vaccineCode" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Vaccine Product Type (bind to CVX)" definition="Vaccine that was administered or was to be administered." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who was immunized" definition="The patient who either received or did not receive the immunization." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter immunization was part of" definition="The visit or admission or other contact between patient and health care provider the immunization was performed as part of."/>
        <element name="occurrence" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Vaccine administration date" definition="Date vaccine administered or was to be administered." comment="When immunizations are given a specific date and time should always be known.   When immunizations are patient reported, a specific date might not be known.  Although partial dates are allowed, an adult patient might not be able to recall the year a childhood immunization was given. An exact date is always preferable, but the use of the String data type is acceptable when an exact date is not known. A small number of vaccines (e.g. live oral typhoid vaccine) are given as a series of patient self-administered dose over a span of time. In cases like this, often, only the first dose (typically a provider supervised dose) is recorded with the occurrence indicating the date/time of the first dose." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="recorded" elementType="System.DateTime" target="%value.value" description="(QI-Core) When the immunization was first captured in the subject's record" definition="The date the occurrence of the immunization was first captured in the record - potentially significantly after the occurrence of the event."/>
        <element name="primarySource" elementType="System.Boolean" target="%value.value" description="(USCDI) Indicates context the data was recorded in" definition="Indicates whether the data contained in the resource was captured by the individual/organization which was responsible for the administration of the vaccine rather than as 'secondary reported' data  documented by a third party. A value of 'true' means this data originated with the individual/organization which was responsible for the administration of the vaccine." comment="This updated definition is adopted from the FHIR R5 Immunization resource." mustSupport="true"/>
        <element name="reportOrigin" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Indicates the source of a secondarily reported record" definition="The source of the data when the report of the immunization event is not based on information from the person who administered the vaccine." comment="Should not be populated if primarySource = True, not required even if primarySource = False.">
            <binding name="ImmunizationReportOrigin" description="The source of the data for a record which is not from a primary source." strength="Example"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where immunization occurred" definition="The service delivery location where the vaccine administration occurred."/>
        <element name="manufacturer" elementType="QICore.Reference" description="Vaccine manufacturer" definition="Name of vaccine manufacturer."/>
        <element name="lotNumber" elementType="System.String" target="%value.value" description="Vaccine lot number" definition="Lot number of the  vaccine product."/>
        <element name="expirationDate" elementType="System.Date" target="%value.value" description="Vaccine expiration date" definition="Date vaccine batch expires."/>
        <element name="site" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Body site vaccine  was administered" definition="Body site where vaccine was administered.">
            <binding name="ImmunizationSite" description="The site at which the vaccine was administered." strength="Example"/>
        </element>
        <element name="route" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How vaccine entered body" definition="The path by which the vaccine product is taken into the body.">
            <binding name="ImmunizationRoute" description="The route by which the vaccine was administered." strength="Example"/>
        </element>
        <element name="doseQuantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Amount of vaccine administered" definition="The quantity of vaccine product that was administered."/>
        <element name="performer" description="Who performed event" definition="Indicates who performed the immunization event.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.Performer"/>
        </element>
        <element name="note" description="Additional immunization notes" definition="Extra information about the immunization that is not conveyed by the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why immunization occurred" definition="Reasons why the vaccine was administered.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ImmunizationReason" description="The reason why a vaccine was administered." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why immunization occurred" definition="Condition, Observation or DiagnosticReport that supports why the immunization was administered.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="isSubpotent" elementType="System.Boolean" target="%value.value" description="Dose potency" definition="Indication if a dose is considered to be subpotent. By default, a dose should be considered to be potent." comment="Typically, the recognition of the dose being sub-potent is retrospective, after the administration (ex. notification of a manufacturer recall after administration). However, in the case of a partial administration (the patient moves unexpectedly and only some of the dose is actually administered), subpotency may be recognized immediately, but it is still important to record the event."/>
        <element name="subpotentReason" target="FHIRHelpers.ToConcept(%value)" description="Reason for being subpotent" definition="Reason why a dose is considered to be subpotent.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="SubpotentReason" description="The reason why a dose is considered to be subpotent." strength="Example"/>
        </element>
        <element name="education" description="Educational material presented to patient" definition="Educational material presented to the patient (or guardian) at the time of vaccine administration.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.Education"/>
            <constraint name="imm-1" severity="ERROR" message="One of documentType or reference SHALL be present">
                <expression language="text/fhirpath" expression="documentType.exists() or reference.exists()"/>
            </constraint>
        </element>
        <element name="programEligibility" target="FHIRHelpers.ToConcept(%value)" description="Patient eligibility for a vaccination program" definition="Indicates a patient's eligibility for a funding program.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProgramEligibility" description="The patient's eligibility for a vaccation program." strength="Example"/>
        </element>
        <element name="fundingSource" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Funding source for the vaccine" definition="Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered).">
            <binding name="FundingSource" description="The source of funding used to purchase the vaccine administered." strength="Example"/>
        </element>
        <element name="reaction" description="Details of a reaction that follows immunization" definition="Categorical data indicating that an adverse event is associated in time to an immunization." comment="A reaction may be an indication of an allergy or intolerance and, if this is determined to be the case, it should be recorded as a new AllergyIntolerance resource instance as most systems will not query against past Immunization.reaction elements.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.Reaction"/>
        </element>
        <element name="protocolApplied" description="Protocol followed by the provider" definition="The protocol (set of recommendations) being followed by the provider who administered the dose.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.ProtocolApplied"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="actor"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Immunization.Education" retrievable="false" baseType="QICore.BackboneElement">
        <element name="documentType" elementType="System.String" target="%value.value" description="Educational material document identifier" definition="Identifier of the material presented to the patient."/>
        <element name="reference" elementType="System.String" target="%value.value" description="Educational material reference pointer" definition="Reference pointer to the educational material given to the patient if the information was on line."/>
        <element name="publicationDate" elementType="System.DateTime" target="%value.value" description="Educational material publication date" definition="Date the educational material was published."/>
        <element name="presentationDate" elementType="System.DateTime" target="%value.value" description="Educational material presentation date" definition="Date the educational material was given to the patient."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Immunization.Performer" retrievable="false" baseType="QICore.BackboneElement">
        <element name="function" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="What type of performance was done" definition="Describes the type of performance (e.g. ordering provider, administering provider, etc.).">
            <binding name="ImmunizationFunction" description="The role a practitioner or organization plays in the immunization event." strength="Extensible"/>
        </element>
        <element name="actor" elementType="QICore.Reference" description="Individual or organization who was performing" definition="The practitioner or organization who performed the action." comment="When the individual practitioner who performed the action is known, it is best to send."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Immunization.ProtocolApplied" retrievable="false" baseType="QICore.BackboneElement">
        <element name="series" elementType="System.String" target="%value.value" description="Name of vaccine series" definition="One possible path to achieve presumed immunity against a disease - within the context of an authority."/>
        <element name="authority" elementType="QICore.Reference" description="Who is responsible for publishing the recommendations" definition="Indicates the authority who published the protocol (e.g. ACIP) that is being followed."/>
        <element name="targetDisease" target="FHIRHelpers.ToConcept(%value)" description="Vaccine preventatable disease being targetted" definition="The vaccine preventable disease the dose is being administered against.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="TargetDisease" description="The vaccine preventable disease the dose is being administered for." strength="Example"/>
        </element>
        <element name="doseNumber" target="FHIRHelpers.ToValue(%value)" description="Dose number within series" definition="Nominal position in a series." comment="The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="seriesDoses" target="FHIRHelpers.ToValue(%value)" description="Recommended number of doses for immunity" definition="The recommended number of doses to achieve immunity." comment="The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Immunization.Reaction" retrievable="false" baseType="QICore.BackboneElement">
        <element name="date" elementType="System.DateTime" target="%value.value" description="When reaction started" definition="Date of reaction to the immunization."/>
        <element name="detail" elementType="QICore.Reference" description="Additional information on reaction" definition="Details of the reaction."/>
        <element name="reported" elementType="System.Boolean" target="%value.value" description="Indicates self-reported reaction" definition="Self-reported indicator."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImmunizationEvaluation" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunizationevaluation" label="QICore ImmunizationEvaluation" retrievable="true" primaryCodePath="targetDisease" baseType="QICore.DomainResource">
        <element name="identifier" description="(QI-Core) Business identifier" definition="A unique identifier assigned to this immunization evaluation record.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.ImmunizationEvaluationStatus" target="%value.value" description="(QI-Core) completed | entered-in-error" definition="Indicates the current status of the evaluation of the vaccination administration event.">
            <binding name="ImmunizationEvaluationStatus" description="The status of the evaluation being done." strength="Required"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) Who this evaluation is for" definition="The individual for whom the evaluation is being done."/>
        <element name="date" elementType="System.DateTime" target="%value.value" description="(QI-Core) Date evaluation was performed" definition="The date the evaluation of the vaccine administration event was performed."/>
        <element name="authority" elementType="QICore.Reference" description="Who is responsible for publishing the recommendations" definition="Indicates the authority who published the protocol (e.g. ACIP)." mustSupport="false"/>
        <element name="targetDisease" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Evaluation target disease" definition="The vaccine preventable disease the dose is being evaluated against.">
            <binding strength="Preferred"/>
        </element>
        <element name="immunizationEvent" elementType="QICore.Reference" description="(QI-Core) Immunization being evaluated" definition="The vaccine administration event being evaluated."/>
        <element name="doseStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Status of the dose relative to published recommendations" definition="Indicates if the dose is valid or not valid with respect to the published recommendations.">
            <binding strength="Preferred"/>
        </element>
        <element name="doseStatusReason" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Reason for the dose status" definition="Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Preferred"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Evaluation notes" definition="Additional information about the evaluation."/>
        <element name="series" elementType="System.String" target="%value.value" description="Name of vaccine series" definition="One possible path to achieve presumed immunity against a disease - within the context of an authority."/>
        <element name="doseNumber" target="FHIRHelpers.ToValue(%value)" description="Dose number within series" definition="Nominal position in a series." comment="The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="seriesDoses" target="FHIRHelpers.ToValue(%value)" description="Recommended number of doses for immunity" definition="The recommended number of doses to achieve immunity." comment="The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImmunizationEvaluationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImmunizationNotDone" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunizationnotdone" label="QICore Immunization Not Done" target="Immunization" retrievable="true" primaryCodePath="vaccineCode" baseType="QICore.DomainResource">
        <element name="identifier" description="Business identifier" definition="A unique identifier assigned to this immunization record.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) completed | entered-in-error | not-done" definition="Indicates the current status of the immunization event." comment="Will generally be set to show that the immunization has been completed or not done.  This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Reason not done" definition="Indicates the reason the immunization event was not performed." comment="This is generally only used for the status of &quot;not-done&quot;. The reason for performing the immunization event is captured in reasonCode, not here." mustSupport="true">
            <binding description="The reason the service was not requested" strength="Extensible"/>
        </element>
        <element name="vaccineCode" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.vaccineCode.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(USCDI) Vaccine Product Type (bind to CVX)" definition="Vaccine that was administered or was to be administered." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding strength="Extensible"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who was immunized" definition="The patient who either received or did not receive the immunization." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter immunization was part of" definition="The visit or admission or other contact between patient and health care provider the immunization was performed as part of."/>
        <element name="occurrence" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Vaccine administration date" definition="Date vaccine administered or was to be administered." comment="When immunizations are given a specific date and time should always be known.   When immunizations are patient reported, a specific date might not be known.  Although partial dates are allowed, an adult patient might not be able to recall the year a childhood immunization was given. An exact date is always preferable, but the use of the String data type is acceptable when an exact date is not known. A small number of vaccines (e.g. live oral typhoid vaccine) are given as a series of patient self-administered dose over a span of time. In cases like this, often, only the first dose (typically a provider supervised dose) is recorded with the occurrence indicating the date/time of the first dose." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="recorded" elementType="System.DateTime" target="%value.value" description="(QI-Core) When the immunization was first captured in the subject's record" definition="The date the occurrence of the immunization was first captured in the record - potentially significantly after the occurrence of the event."/>
        <element name="primarySource" elementType="System.Boolean" target="%value.value" description="(USCDI) Indicates context the data was recorded in" definition="Indicates whether the data contained in the resource was captured by the individual/organization which was responsible for the administration of the vaccine rather than as 'secondary reported' data  documented by a third party. A value of 'true' means this data originated with the individual/organization which was responsible for the administration of the vaccine." comment="This updated definition is adopted from the FHIR R5 Immunization resource." mustSupport="true"/>
        <element name="reportOrigin" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Indicates the source of a secondarily reported record" definition="The source of the data when the report of the immunization event is not based on information from the person who administered the vaccine." comment="Should not be populated if primarySource = True, not required even if primarySource = False.">
            <binding name="ImmunizationReportOrigin" description="The source of the data for a record which is not from a primary source." strength="Example"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where immunization occurred" definition="The service delivery location where the vaccine administration occurred."/>
        <element name="manufacturer" elementType="QICore.Reference" description="Vaccine manufacturer" definition="Name of vaccine manufacturer."/>
        <element name="lotNumber" elementType="System.String" target="%value.value" description="Vaccine lot number" definition="Lot number of the  vaccine product."/>
        <element name="expirationDate" elementType="System.Date" target="%value.value" description="Vaccine expiration date" definition="Date vaccine batch expires."/>
        <element name="site" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Body site vaccine  was administered" definition="Body site where vaccine was administered.">
            <binding name="ImmunizationSite" description="The site at which the vaccine was administered." strength="Example"/>
        </element>
        <element name="route" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How vaccine entered body" definition="The path by which the vaccine product is taken into the body.">
            <binding name="ImmunizationRoute" description="The route by which the vaccine was administered." strength="Example"/>
        </element>
        <element name="doseQuantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Amount of vaccine administered" definition="The quantity of vaccine product that was administered."/>
        <element name="performer" description="Who performed event" definition="Indicates who performed the immunization event.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.Performer"/>
        </element>
        <element name="note" description="Additional immunization notes" definition="Extra information about the immunization that is not conveyed by the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Why immunization occurred" definition="Reasons why the vaccine was administered.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ImmunizationReason" description="The reason why a vaccine was administered." strength="Example"/>
        </element>
        <element name="reasonReference" description="Why immunization occurred" definition="Condition, Observation or DiagnosticReport that supports why the immunization was administered.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="isSubpotent" elementType="System.Boolean" target="%value.value" description="Dose potency" definition="Indication if a dose is considered to be subpotent. By default, a dose should be considered to be potent." comment="Typically, the recognition of the dose being sub-potent is retrospective, after the administration (ex. notification of a manufacturer recall after administration). However, in the case of a partial administration (the patient moves unexpectedly and only some of the dose is actually administered), subpotency may be recognized immediately, but it is still important to record the event."/>
        <element name="subpotentReason" target="FHIRHelpers.ToConcept(%value)" description="Reason for being subpotent" definition="Reason why a dose is considered to be subpotent.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="SubpotentReason" description="The reason why a dose is considered to be subpotent." strength="Example"/>
        </element>
        <element name="education" description="Educational material presented to patient" definition="Educational material presented to the patient (or guardian) at the time of vaccine administration.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.Education"/>
            <constraint name="imm-1" severity="ERROR" message="One of documentType or reference SHALL be present">
                <expression language="text/fhirpath" expression="documentType.exists() or reference.exists()"/>
            </constraint>
        </element>
        <element name="programEligibility" target="FHIRHelpers.ToConcept(%value)" description="Patient eligibility for a vaccination program" definition="Indicates a patient's eligibility for a funding program.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProgramEligibility" description="The patient's eligibility for a vaccation program." strength="Example"/>
        </element>
        <element name="fundingSource" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Funding source for the vaccine" definition="Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered).">
            <binding name="FundingSource" description="The source of funding used to purchase the vaccine administered." strength="Example"/>
        </element>
        <element name="reaction" description="Details of a reaction that follows immunization" definition="Categorical data indicating that an adverse event is associated in time to an immunization." comment="A reaction may be an indication of an allergy or intolerance and, if this is determined to be the case, it should be recorded as a new AllergyIntolerance resource instance as most systems will not query against past Immunization.reaction elements.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.Reaction"/>
        </element>
        <element name="protocolApplied" description="Protocol followed by the provider" definition="The protocol (set of recommendations) being followed by the provider who administered the dose.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Immunization.ProtocolApplied"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImmunizationRecommendation" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-immunizationrecommendation" label="QICore ImmunizationRecommendation" retrievable="true" primaryCodePath="recommendation.vaccineCode" baseType="QICore.DomainResource">
        <element name="identifier" description="Business identifier" definition="A unique identifier assigned to this particular recommendation record.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) Who this profile is for" definition="The patient the recommendation(s) are for."/>
        <element name="date" elementType="System.DateTime" target="%value.value" description="Date recommendation(s) created" definition="The date the immunization recommendation(s) were created."/>
        <element name="authority" elementType="QICore.Reference" description="Who is responsible for protocol" definition="Indicates the authority who published the protocol (e.g. ACIP)." mustSupport="false"/>
        <element name="recommendation" description="(QI-Core) Vaccine administration recommendations" definition="Vaccine administration recommendations.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ImmunizationRecommendation.Recommendation"/>
            <constraint name="imr-1" severity="ERROR" message="One of vaccineCode or targetDisease SHALL be present">
                <expression language="text/fhirpath" expression="vaccineCode.exists() or targetDisease.exists()"/>
            </constraint>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImmunizationRecommendation.Recommendation" retrievable="false" baseType="QICore.BackboneElement">
        <element name="vaccineCode" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Vaccine or vaccine group recommendation applies to" definition="Vaccine(s) or vaccine group that pertain to the recommendation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="CVX Vaccines Administered Vaccine Set" strength="Extensible"/>
        </element>
        <element name="targetDisease" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Disease to be immunized against" definition="The targeted disease for the recommendation.">
            <binding name="TargetDisease" description="The disease that the recommended vaccination targets." strength="Example"/>
        </element>
        <element name="contraindicatedVaccineCode" target="FHIRHelpers.ToConcept(%value)" description="Vaccine which is contraindicated to fulfill the recommendation" definition="Vaccine(s) which should not be used to fulfill the recommendation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="VaccineCode" description="The type of vaccine administered." strength="Example"/>
        </element>
        <element name="forecastStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Vaccine recommendation status" definition="Indicates the patient status with respect to the path to immunity for the target disease.">
            <binding name="ImmunizationRecommendationStatus" description="The patient's status with respect to a vaccination protocol." strength="Example"/>
        </element>
        <element name="forecastReason" target="FHIRHelpers.ToConcept(%value)" description="Vaccine administration status reason" definition="The reason for the assigned forecast status.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ImmunizationRecommendationReason" description="The reason for the patient's status with respect to a vaccination protocol." strength="Example"/>
        </element>
        <element name="dateCriterion" description="Dates governing proposed immunization" definition="Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ImmunizationRecommendation.Recommendation.DateCriterion"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Protocol details" definition="Contains the description about the protocol under which the vaccine was administered."/>
        <element name="series" elementType="System.String" target="%value.value" description="Name of vaccination series" definition="One possible path to achieve presumed immunity against a disease - within the context of an authority."/>
        <element name="doseNumber" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Recommended dose number within series" definition="Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose)." comment="The use of an integer is prefered if known. A string should only be used in cases where an interger is not available (such as when documenting a recurring booster dose).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="seriesDoses" target="FHIRHelpers.ToValue(%value)" description="Recommended number of doses for immunity" definition="The recommended number of doses to achieve immunity." comment="The use of an integer is prefered if known. A string should only be used in cases where an interger is not available (such as when documenting a recurring booster dose).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
            </elementTypeSpecifier>
        </element>
        <element name="supportingImmunization" description="Past immunizations supporting recommendation" definition="Immunization event history and/or evaluation that supports the status and recommendation." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="supportingPatientInformation" description="Patient observations supporting recommendation" definition="Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ImmunizationRecommendation.Recommendation.DateCriterion" retrievable="false" baseType="QICore.BackboneElement">
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of date" definition="Date classification of recommendation.  For example, earliest date to give, latest date to give, etc.">
            <binding name="ImmunizationRecommendationDateCriterion" description="Classifies date criterion with respect to conveying information about a patient's vaccination status (e.g. due date, latest to give date, etc.)." strength="Example"/>
        </element>
        <element name="value" elementType="System.DateTime" target="%value.value" description="Recommended date" definition="The date whose meaning is specified by dateCriterion.code."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="LaboratoryResultObservation" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observation-lab" label="QICore Laboratory Result Observation" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) registered | prliminary | final | amended | corrected | entered-in-error | unknown" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="us-core" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Laboratory Test Name" definition="The name of the clinical test or procedure performed on a patient.  A LOINC **SHALL** be used if the concept is present in LOINC." comment="The typical patterns for codes are:  1)  a LOINC code either as a translation from a &quot;local&quot; code or as a primary code, or 2)  a local code only if no suitable LOINC exists,  or 3)  both the local and the LOINC translation.   Systems SHALL be capable of sending the local code if one exists.  When using LOINC , Use either the SHORTNAME or LONG_COMMON_NAME field for the display." mustSupport="true">
            <binding description="Laboratory LOINC Codes" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
            <constraint name="us-core-1" severity="ERROR" message="Datetime must be at least to day.">
                <expression language="text/fhirpath" expression="$this is DateTime implies $this.toString().length() &gt;= 10"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="(QI-Core) Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Result Value" definition="The Laboratory result value.  If a coded value,  the valueCodeableConcept.code **SHOULD** be selected from [SNOMED CT](http://hl7.org/fhir/ValueSet/uslab-obs-codedresults) if the concept exists. If a numeric value, valueQuantity.code **SHALL** be selected from [UCUM](http://unitsofmeasure.org).  A FHIR [UCUM Codes value set](http://hl7.org/fhir/STU3/valueset-ucum-units.html) that defines all UCUM codes is in the FHIR specification." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="us-core-3" severity="ERROR" message="SHALL use UCUM for coded quantity units.">
                <expression language="text/fhirpath" expression="value.ofType(Quantity).system.empty() or value.ofType(Quantity).system = 'http://unitsofmeasure.org'"/>
            </constraint>
            <constraint name="us-core-4" severity="WARNING" message="SHOULD use Snomed CT for coded Results">
                <expression language="text/fhirpath" expression="value.ofType(CodeableConcept).coding.system.empty() or value.ofType(CodeableConcept).coding.system = 'http://snomed.info/sct'"/>
            </constraint>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="(USCDI) Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)." mustSupport="true"/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="LinkType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Location" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-location" label="QICore Location" retrievable="true" primaryCodePath="type" baseType="QICore.DomainResource">
        <element name="identifier" description="Unique code or number identifying the location to its users" definition="Unique code or number identifying the location to its users.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.LocationStatus" target="%value.value" description="active | suspended | inactive" definition="The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location." mustSupport="true">
            <binding name="LocationStatus" description="Indicates whether the location is still in use." strength="Required"/>
        </element>
        <element name="operationalStatus" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="The operational status of the location (typically only for a bed/room)" definition="The operational status covers operation values most relevant to beds (but can also apply to rooms/units/chairs/etc. such as an isolation unit/dialysis chair). This typically covers concepts such as contamination, housekeeping, and other activities like maintenance.">
            <binding name="OperationalStatus" description="The operational status if the location (where typically a bed/room)." strength="Preferred"/>
        </element>
        <element name="name" elementType="System.String" target="%value.value" description="Name of the location as used by humans" definition="Name of the location as used by humans. Does not need to be unique." comment="If the name of a location changes, consider putting the old name in the alias column so that it can still be located through searches." mustSupport="true"/>
        <element name="alias" target="%value.value" description="A list of alternate names that the location is known as, or was known as, in the past" definition="A list of alternate names that the location is known as, or was known as, in the past." comment="There are no dates associated with the alias/historic names, as this is not intended to track when names were used, but to assist in searching so that older names can still result in identifying the location.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Additional details about the location that could be displayed as further information to identify the location beyond its name" definition="Description of the Location, which helps in finding or referencing the place."/>
        <element name="mode" elementType="QICore.LocationMode" target="%value.value" description="instance | kind" definition="Indicates whether a resource instance represents a specific location or a class of locations." comment="This is labeled as a modifier because whether or not the location is a class of locations changes how it can be used and understood.">
            <binding name="LocationMode" description="Indicates whether a resource instance represents a specific location or a class of locations." strength="Required"/>
        </element>
        <element name="type" target="FHIRHelpers.ToConcept(%value)" description="Type of function performed" definition="Indicates the type of function performed at the location.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="LocationType" description="Indicates the type of function performed at the location." strength="Extensible"/>
        </element>
        <element name="telecom" description="(QI-Core) Contact details of the location" definition="The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="address" elementType="QICore.Address" description="Physical location" definition="Physical location." comment="Additional addresses should be recorded using another instance of the Location resource, or via the Organization." mustSupport="true"/>
        <element name="physicalType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Physical form of the location" definition="Physical form of the location, e.g. building, room, vehicle, road.">
            <binding name="PhysicalType" description="Physical form of the location." strength="Example"/>
        </element>
        <element name="position" elementType="QICore.Location.Position" description="The absolute geographic location" definition="The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML)."/>
        <element name="managingOrganization" elementType="QICore.Reference" description="(QI-Core) Organization responsible for provisioning and upkeep" definition="The organization responsible for the provisioning and upkeep of the location." comment="This can also be used as the part of the organization hierarchy where this location provides services. These services can be defined through the HealthcareService resource." mustSupport="true"/>
        <element name="partOf" elementType="QICore.Reference" description="Another Location this one is physically a part of" definition="Another Location of which this Location is physically a part of." mustSupport="false"/>
        <element name="hoursOfOperation" description="What days/times during a week is this location usually open" definition="What days/times during a week is this location usually open." comment="This type of information is commonly found published in directories and on websites informing customers when the facility is available.&#10;&#10;Specific services within the location may have their own hours which could be shorter (or longer) than the locations hours.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Location.HoursOfOperation"/>
        </element>
        <element name="availabilityExceptions" elementType="System.String" target="%value.value" description="Description of availability exceptions" definition="A description of when the locations opening ours are different to normal, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as detailed in the opening hours Times."/>
        <element name="endpoint" description="Technical endpoints providing access to services operated for the location" definition="Technical endpoints providing access to services operated for the location.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Location.HoursOfOperation" retrievable="false" baseType="QICore.BackboneElement">
        <element name="daysOfWeek" target="%value.value" description="mon | tue | wed | thu | fri | sat | sun" definition="Indicates which days of the week are available between the start and end Times.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DaysOfWeek"/>
            <binding name="DaysOfWeek" description="The days of the week." strength="Required"/>
        </element>
        <element name="allDay" elementType="System.Boolean" target="%value.value" description="The Location is open all day" definition="The Location is open all day."/>
        <element name="openingTime" elementType="System.Time" target="%value.value" description="Time that the Location opens" definition="Time that the Location opens."/>
        <element name="closingTime" elementType="System.Time" target="%value.value" description="Time that the Location closes" definition="Time that the Location closes."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Location.Position" retrievable="false" baseType="QICore.BackboneElement">
        <element name="longitude" elementType="System.Decimal" target="%value.value" description="Longitude with WGS84 datum" definition="Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below)."/>
        <element name="latitude" elementType="System.Decimal" target="%value.value" description="Latitude with WGS84 datum" definition="Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below)."/>
        <element name="altitude" elementType="System.Decimal" target="%value.value" description="Altitude with WGS84 datum" definition="Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below)."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="LocationMode" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="LocationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Medication" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medication" label="QICore Medication" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business identifier for this medication" definition="Business identifier for this medication." comment="The serial number could be included as an identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Codes that identify this medication" definition="A code (or set of codes) that specify this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems." comment="Depending on the context of use, the code that was actually selected by the user (prescriber, dispenser, etc.) will have the coding.userSelected set to true.  As described in the coding datatype: &quot;A coding may be marked as a &quot;userSelected&quot; if a user selected the particular coded value in a user interface (e.g. the user selects an item in a pick-list). If a user selected coding exists, it is the preferred choice for performing translations etc. Other codes can only be literal translations to alternative code systems, or codes at a lower level of granularity (e.g. a generic code for a vendor-specific primary one)." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="status" elementType="QICore.MedicationStatus" target="%value.value" description="active | inactive | entered-in-error" definition="A code to indicate if the medication is in active use." comment="This status is intended to identify if the medication in a local system is in active use within a drug database or inventory.  For example, a pharmacy system may create a new drug file record for a compounded product &quot;ABC Hospital Special Cream&quot; with an active status.  At some point in the future, it may be determined that the drug record was created with an error and the status is changed to &quot;entered in error&quot;.   This status is not intended to specify if a medication is part of a particular formulary.  It is possible that the drug record may be referenced by multiple formularies or catalogues and each of those entries would have a separate status.">
            <binding name="MedicationStatus" description="A coded concept defining if the medication is in active use." strength="Required"/>
        </element>
        <element name="manufacturer" elementType="QICore.Reference" description="Manufacturer of the item" definition="Describes the details of the manufacturer of the medication product.  This is not intended to represent the distributor of a medication product." mustSupport="false"/>
        <element name="form" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="powder | tablets | capsule +" definition="Describes the form of the item.  Powder; tablets; capsule." comment="When Medication is referenced from MedicationRequest, this is the ordered form.  When Medication is referenced within MedicationDispense, this is the dispensed form.  When Medication is referenced within MedicationAdministration, this is administered form.">
            <binding name="MedicationForm" description="A coded concept defining the form of a medication." strength="Example"/>
        </element>
        <element name="amount" elementType="System.Ratio" target="FHIRHelpers.ToRatio(%value)" description="Amount of drug in package" definition="Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.)."/>
        <element name="ingredient" description="Active or inactive ingredient" definition="Identifies a particular constituent of interest in the product." comment="The ingredients need not be a complete list.  If an ingredient is not specified, this does not indicate whether an ingredient is present or absent.  If an ingredient is specified it does not mean that all ingredients are specified.  It is possible to specify both inactive and active ingredients.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Medication.Ingredient"/>
        </element>
        <element name="batch" elementType="QICore.Medication.Batch" description="Details about packaged medications" definition="Information that only applies to packages (not products)."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Medication.Batch" retrievable="false" baseType="QICore.BackboneElement">
        <element name="lotNumber" elementType="System.String" target="%value.value" description="Identifier assigned to batch" definition="The assigned lot number of a batch of the specified product."/>
        <element name="expirationDate" elementType="System.DateTime" target="%value.value" description="When batch will expire" definition="When this specific batch of product will expire."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Medication.Ingredient" retrievable="false" baseType="QICore.BackboneElement">
        <element name="item" target="FHIRHelpers.ToValue(%value)" description="The actual ingredient or content" definition="The actual ingredient - either a substance (simple ingredient) or another medication of a medication." mustSupport="false">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
        </element>
        <element name="isActive" elementType="System.Boolean" target="%value.value" description="Active ingredient indicator" definition="Indication of whether this ingredient affects the therapeutic action of the drug." mustSupport="false"/>
        <element name="strength" elementType="System.Ratio" target="FHIRHelpers.ToRatio(%value)" description="Quantity of ingredient present" definition="Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationAdministration" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationadministration" label="QICore MedicationAdministration" retrievable="true" primaryCodePath="medication" baseType="QICore.DomainResource">
        <element name="identifier" description="External identifier" definition="Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiates" target="%value.value" description="Instantiates protocol or definition" definition="A protocol, guideline, orderset, or other definition that was adhered to in whole or in part by this event.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular event is a component or step.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core) in-progress | on-hold | completed | entered-in-error | stopped | unknown" definition="Will generally be set to show that the administration has been completed.  For some long running administrations such as infusions, it is possible for an administration to be started but not completed or it may be paused while some other process is under way." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" target="FHIRHelpers.ToConcept(%value)" description="Reason administration not performed" definition="A code indicating why the administration was not performed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationAdministrationNegationReason" description="A set of codes indicating the reason why the MedicationAdministration is negated." strength="Example"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of medication usage" definition="Indicates where the medication is expected to be consumed or administered.">
            <binding name="MedicationAdministrationCategory" description="A coded concept describing where the medication administered is expected to occur." strength="Preferred"/>
        </element>
        <element name="medication" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) What was administered" definition="Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications." comment="If only a code is specified, then it needs to be a code for a specific product. If more information is required, then the use of the medication resource is recommended.  For example, if you require form or lot number, then you must reference the Medication resource.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding description="The set of RxNorm codes to represent medications" strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Who received medication" definition="The person or animal or group receiving the medication."/>
        <element name="context" elementType="QICore.Reference" description="(QI-Core) Encounter or Episode of Care administered as part of" definition="The visit, admission, or other contact between patient and health care provider during which the medication administration was performed."/>
        <element name="supportingInformation" description="Additional information to support administration" definition="Additional information (for example, patient height and weight) that supports the administration of the medication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Start and end time of administration" definition="A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="performer" description="Who performed the medication administration and what they did" definition="Indicates who or what performed the medication administration and how they were involved.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.MedicationAdministration.Performer"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Reason administration performed" definition="A code indicating why the medication was given.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationAdministrationReason" description="A set of codes indicating the reason why the MedicationAdministration was made." strength="Example"/>
        </element>
        <element name="reasonReference" description="Condition or observation that supports why the medication was administered" definition="Condition or observation that supports why the medication was administered." comment="This is a reference to a condition that is the reason for the medication request.  If only a code exists, use reasonCode.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="request" elementType="QICore.Reference" description="(QI-Core) Request administration performed against" definition="The original request, instruction or authority to perform the administration." comment="This is a reference to the MedicationRequest  where the intent is either order or instance-order.  It should not reference MedicationRequests where the intent is any other value."/>
        <element name="device" description="Device used to administer" definition="The device used in administering the medication to the patient.  For example, a particular infusion pump.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Information about the administration" definition="Extra information about the medication administration that is not conveyed by the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="dosage" elementType="QICore.MedicationAdministration.Dosage" description="Details of how medication was taken" definition="Describes the medication dosage information details e.g. dose, rate, site, route, etc." mustSupport="false">
            <constraint name="mad-1" severity="ERROR" message="SHALL have at least one of dosage.dose or dosage.rate[x]">
                <expression language="text/fhirpath" expression="dose.exists() or rate.exists()"/>
            </constraint>
        </element>
        <element name="eventHistory" description="A list of events of interest in the lifecycle" definition="A summary of the events of interest that have occurred, such as when the administration was verified." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important. This SHALL NOT include the Provenance associated with this current version of the resource. (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update. Until then, it can be queried directly as the Provenance that points to this version using _revinclude All Provenances should have some historical version of this Request as their subject.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="actor"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Patient" relatedKeyElement="actor"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Encounter" relatedKeyElement="context"/>
        <contextRelationship context="Device" relatedKeyElement="device"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="actor"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationAdministration.Dosage" retrievable="false" baseType="QICore.BackboneElement">
        <element name="text" elementType="System.String" target="%value.value" description="Free text dosage instructions e.g. SIG" definition="Free text dosage can be used for cases where the dosage administered is too complex to code. When coded dosage is present, the free text dosage may still be present for display to humans.&#13;&#13;The dosage instructions should reflect the dosage of the medication that was administered."/>
        <element name="site" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Body site administered to" definition="A coded specification of the anatomic site where the medication first entered the body.  For example, &quot;left arm&quot;." comment="If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).  May be a summary code, or a reference to a very precise definition of the location, or both.">
            <binding name="MedicationAdministrationSite" description="A coded concept describing the site location the medicine enters into or onto the body." strength="Example"/>
        </element>
        <element name="route" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Path of substance into body" definition="A code specifying the route or physiological path of administration of a therapeutic agent into or onto the patient.  For example, topical, intravenous, etc.">
            <binding name="RouteOfAdministration" description="A coded concept describing the route or physiological path of administration of a therapeutic agent into or onto the body of a subject." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How drug was administered" definition="A coded value indicating the method by which the medication is intended to be or was introduced into or on the body.  This attribute will most often NOT be populated.  It is most commonly used for injections.  For example, Slow Push, Deep IV." comment="One of the reasons this attribute is not used often, is that the method is often pre-coordinated with the route and/or form of administration.  This means the codes used in route or form may pre-coordinate the method in the route code or the form code.  The implementation decision about what coding system to use for route or form code will determine how frequently the method code will be populated e.g. if route or form code pre-coordinate method code, then this attribute will not be populated often; if there is no pre-coordination then method code may  be used frequently.">
            <binding name="MedicationAdministrationMethod" description="A coded concept describing the technique by which the medicine is administered." strength="Example"/>
        </element>
        <element name="dose" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Amount of medication per dose" definition="The amount of the medication given at one administration event.   Use this value when the administration is essentially an instantaneous event such as a swallowing a tablet or giving an injection." comment="If the administration is not instantaneous (rate is present), this can be specified to convey the total amount administered over period of time of a single administration."/>
        <element name="rate" target="FHIRHelpers.ToValue(%value)" description="Dose quantity per unit of time" definition="Identifies the speed with which the medication was or will be introduced into the patient.  Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours." comment="If the rate changes over time, and you want to capture this in MedicationAdministration, then each change should be captured as a distinct MedicationAdministration, with a specific MedicationAdministration.dosage.rate, and the date time when the rate change occurred. Typically, the MedicationAdministration.dosage.rate element is not used to convey an average rate.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationAdministration.Performer" retrievable="false" baseType="QICore.BackboneElement">
        <element name="function" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of performance" definition="Distinguishes the type of involvement of the performer in the medication administration.">
            <binding name="MedicationAdministrationPerformerFunction" description="A code describing the role an individual played in administering the medication." strength="Example"/>
        </element>
        <element name="actor" elementType="QICore.Reference" description="Who performed the medication administration" definition="Indicates who or what performed the medication administration."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationAdministrationNotDone" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationadministrationnotdone" label="QICore MedicationAdministration Not Done" target="MedicationAdministration" retrievable="true" primaryCodePath="medication" baseType="QICore.DomainResource">
        <element name="recorded" elementType="QICore.NotDoneRecorded" target="%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-recorded'].value.value" description="(QI-Core) Extension" definition="Captures the recorded date of the event."/>
        <element name="identifier" description="External identifier" definition="Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiates" target="%value.value" description="Instantiates protocol or definition" definition="A protocol, guideline, orderset, or other definition that was adhered to in whole or in part by this event.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular event is a component or step.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.MedicationAdministrationStatus" target="%value.value" description="(QI-Core) in-progress | not-done | on-hold | completed | entered-in-error | stopped | unknown" definition="Will generally be set to show that the administration has been completed.  For some long running administrations such as infusions, it is possible for an administration to be started but not completed or it may be paused while some other process is under way." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="MedicationAdministrationStatus" description="A set of codes indicating the current status of a MedicationAdministration." strength="Required"/>
        </element>
        <element name="statusReason" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Reason administration not performed" definition="A code indicating why the administration was not performed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="The reason the event did not occur or was not performed" strength="Extensible"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of medication usage" definition="Indicates where the medication is expected to be consumed or administered.">
            <binding name="MedicationAdministrationCategory" description="A coded concept describing where the medication administered is expected to occur." strength="Preferred"/>
        </element>
        <element name="medication" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.medication[x].extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(QI-Core) What was administered" definition="Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications." comment="If only a code is specified, then it needs to be a code for a specific product. If more information is required, then the use of the medication resource is recommended.  For example, if you require form or lot number, then you must reference the Medication resource.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding description="The set of RxNorm codes to represent medications" strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Who received medication" definition="The person or animal or group receiving the medication."/>
        <element name="context" elementType="QICore.Reference" description="(QI-Core) Encounter or Episode of Care administered as part of" definition="The visit, admission, or other contact between patient and health care provider during which the medication administration was performed."/>
        <element name="supportingInformation" description="Additional information to support administration" definition="Additional information (for example, patient height and weight) that supports the administration of the medication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Start and end time of administration" definition="A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="performer" description="Who performed the medication administration and what they did" definition="Indicates who or what performed the medication administration and how they were involved.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.MedicationAdministration.Performer"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Reason administration performed" definition="A code indicating why the medication was given.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationAdministrationReason" description="A set of codes indicating the reason why the MedicationAdministration was made." strength="Example"/>
        </element>
        <element name="reasonReference" description="Condition or observation that supports why the medication was administered" definition="Condition or observation that supports why the medication was administered." comment="This is a reference to a condition that is the reason for the medication request.  If only a code exists, use reasonCode.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="request" elementType="QICore.Reference" description="(QI-Core) Request administration performed against" definition="The original request, instruction or authority to perform the administration." comment="This is a reference to the MedicationRequest  where the intent is either order or instance-order.  It should not reference MedicationRequests where the intent is any other value."/>
        <element name="device" description="Device used to administer" definition="The device used in administering the medication to the patient.  For example, a particular infusion pump.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Information about the administration" definition="Extra information about the medication administration that is not conveyed by the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="dosage" elementType="QICore.MedicationAdministration.Dosage" description="Details of how medication was taken" definition="Describes the medication dosage information details e.g. dose, rate, site, route, etc.">
            <constraint name="mad-1" severity="ERROR" message="SHALL have at least one of dosage.dose or dosage.rate[x]">
                <expression language="text/fhirpath" expression="dose.exists() or rate.exists()"/>
            </constraint>
        </element>
        <element name="eventHistory" description="A list of events of interest in the lifecycle" definition="A summary of the events of interest that have occurred, such as when the administration was verified." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important. This SHALL NOT include the Provenance associated with this current version of the resource. (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update. Until then, it can be queried directly as the Provenance that points to this version using _revinclude All Provenances should have some historical version of this Request as their subject.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationAdministrationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationDispense" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationdispense" label="QICore MedicationDispense" retrievable="true" primaryCodePath="medication" baseType="QICore.DomainResource">
        <element name="identifier" description="External identifier" definition="Identifiers associated with this Medication Dispense that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="partOf" description="Event that dispense is part of" definition="The procedure that trigger the dispense.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) preparation​ | in-progress​ | cancelled​ | on-hold​ | completed​ | entered-in-error​ | stopped​ | unknown" definition="A code specifying the state of the set of dispense events." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" target="FHIRHelpers.ToValue(%value)" description="Why a dispense was not performed" definition="Indicates the reason why a dispense was not performed.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="MedicationDispenseStatusReason" description="A code describing why a dispense was not performed." strength="Example"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of medication dispense" definition="Indicates the type of medication dispense (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))." comment="The category can be used to include where the medication is expected to be consumed or other types of dispenses.  Invariants can be used to bind to different value sets when profiling to bind.">
            <binding name="MedicationDispenseCategory" description="A code describing where the dispensed medication is expected to be consumed or administered." strength="Preferred"/>
        </element>
        <element name="medication" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) What medication was supplied" definition="Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications." comment="If only a code is specified, then it needs to be a code for a specific product. If more information is required, then the use of the medication resource is recommended.  For example, if you require form or lot number, then you must reference the Medication resource." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding description="The set of RxNorm codes to represent medications" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who the dispense is for" definition="A link to a resource representing the person or the group to whom the medication will be given." comment="SubstanceAdministration-&gt;subject-&gt;Patient." mustSupport="true"/>
        <element name="context" elementType="QICore.Reference" description="Encounter / Episode associated with event" definition="The encounter or episode of care that establishes the context for this event."/>
        <element name="supportingInformation" description="Information that supports the dispensing of the medication" definition="Additional information that supports the medication being dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="performer" description="(USCDI) Who performed event" definition="Indicates who or what performed the event." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.MedicationDispense.Performer"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where the dispense occurred" definition="The principal physical location where the dispense was performed."/>
        <element name="authorizingPrescription" description="(QI-Core)(USCDI) Medication order that authorizes the dispense" definition="Indicates the medication order that is being dispensed against." comment="Maps to basedOn in Event logical model." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Trial fill, partial fill, emergency fill, etc." definition="Indicates the type of dispensing event that is performed. For example, Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(QI-Core)(USCDI) Amount dispensed" definition="The amount of medication that has been dispensed. Includes unit of measure." mustSupport="true">
            <binding strength="Preferred"/>
        </element>
        <element name="daysSupply" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(QI-Core) Amount of medication expressed as a timing amount" definition="The amount of medication expressed as a timing amount."/>
        <element name="whenPrepared" elementType="System.DateTime" target="%value.value" description="(QI-Core) When product was packaged and reviewed" definition="The time when the dispensed product was packaged and reviewed." comment="When used as part of a cumulative medication duration calculation, the whenPrepared element is used if whenHandedOver is not available to determine a starting point for the period covered by the dispense."/>
        <element name="whenHandedOver" elementType="System.DateTime" target="%value.value" description="(QI-Core)(USCDI) When product was given out or mailed" definition="When the product was given out. For mailed prescriptions, when the label was printed" mustSupport="true"/>
        <element name="destination" elementType="QICore.Reference" description="Where the medication was sent" definition="Identification of the facility/location where the medication was shipped to, as part of the dispense event."/>
        <element name="receiver" description="Who collected the medication" definition="Identifies the person who picked up the medication.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Information about the dispense" definition="Extra information about the dispense that could not be conveyed in the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="dosageInstruction" description="(QI-Core)(USCDI) How the medication is to be used by the patient or administered by the caregiver" definition="Indicates how the medication is to be used by the patient." comment="When the dose or rate is intended to change over the entire administration period (e.g. Tapering dose prescriptions), multiple instances of dosage instructions will need to be supplied to convey the different doses/rates.&#13;The pharmacist reviews the medication order prior to dispense and updates the dosageInstruction based on the actual product being dispensed." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Dosage"/>
        </element>
        <element name="substitution" elementType="QICore.MedicationDispense.Substitution" description="Whether a substitution was performed on the dispense" definition="Indicates whether or not substitution was made as part of the dispense.  In some cases, substitution will be expected but does not happen, in other cases substitution is not expected but does happen.  This block explains what substitution did or did not happen and why.  If nothing is specified, substitution was not done."/>
        <element name="detectedIssue" description="Clinical issue with action" definition="Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. drug-drug interaction, duplicate therapy, dosage alert etc." comment="This element can include a detected issue that has been identified either by a decision support system or by a clinician and may include information on the steps that were taken to address the issue.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="eventHistory" description="A list of relevant lifecycle events" definition="A summary of the events of interest that have occurred, such as when the dispense was verified." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important. This SHALL NOT include the Provenance associated with this current version of the resource. (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update. Until then, it can be queried directly as the Provenance that points to this version using _revinclude All Provenances should have some historical version of this Request as their subject.).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="actor"/>
        <contextRelationship context="Practitioner" relatedKeyElement="receiver"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Patient" relatedKeyElement="receiver"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationDispense.Performer" retrievable="false" baseType="QICore.BackboneElement">
        <element name="function" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Who performed the dispense and what they did" definition="Distinguishes the type of performer in the dispense.  For example, date enterer, packager, final checker.">
            <binding name="MedicationDispensePerformerFunction" description="A code describing the role an individual played in dispensing a medication." strength="Example"/>
        </element>
        <element name="actor" elementType="QICore.Reference" description="(USCDI) Individual who was performing" definition="The device, practitioner, etc. who performed the action.  It should be assumed that the actor is the dispenser of the medication." mustSupport="true"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationDispense.Substitution" retrievable="false" baseType="QICore.BackboneElement">
        <element name="wasSubstituted" elementType="System.Boolean" target="%value.value" description="Whether a substitution was or was not performed on the dispense" definition="True if the dispenser dispensed a different drug or product from what was prescribed."/>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Code signifying whether a different drug was dispensed from what was prescribed" definition="A code signifying whether a different drug was dispensed from what was prescribed.">
            <binding name="MedicationIntendedSubstitutionType" description="A coded concept describing whether a different medicinal product may be dispensed other than the product as specified exactly in the prescription." strength="Example"/>
        </element>
        <element name="reason" target="FHIRHelpers.ToConcept(%value)" description="Why was substitution made" definition="Indicates the reason for the substitution (or lack of substitution) from what was prescribed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationIntendedSubstitutionReason" description="A coded concept describing the reason that a different medication should (or should not) be substituted from what was prescribed." strength="Example"/>
        </element>
        <element name="responsibleParty" description="Who is responsible for the substitution" definition="The person or organization that has primary responsibility for the substitution.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationDispenseDeclined" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationdispensedeclined" label="QICore MedicationDispense Declined" target="MedicationDispense" retrievable="true" primaryCodePath="medication" baseType="QICore.DomainResource">
        <element name="recorded" elementType="QICore.NotDoneRecorded" target="%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-recorded'].value.value" description="(QI-Core) Extension" definition="Captures the recorded date of the event."/>
        <element name="identifier" description="External identifier" definition="Identifiers associated with this Medication Dispense that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="partOf" description="Event that dispense is part of" definition="The procedure that trigger the dispense.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) preparation | in-progress | cancelled | on-hold | completed | entered-in-error | stopped | declined | unknown" definition="A code specifying the state of the set of dispense events." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Why a dispense was not performed" definition="Indicates the reason why a dispense was not performed.">
            <binding description="The reason the event did not occur or was not performed" strength="Extensible"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of medication dispense" definition="Indicates the type of medication dispense (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))." comment="The category can be used to include where the medication is expected to be consumed or other types of dispenses.  Invariants can be used to bind to different value sets when profiling to bind.">
            <binding name="MedicationDispenseCategory" description="A code describing where the dispensed medication is expected to be consumed or administered." strength="Preferred"/>
        </element>
        <element name="medication" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) What medication was supplied" definition="Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications." comment="If only a code is specified, then it needs to be a code for a specific product. If more information is required, then the use of the medication resource is recommended.  For example, if you require form or lot number, then you must reference the Medication resource." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding description="The set of RxNorm codes to represent medications" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who the dispense is for" definition="A link to a resource representing the person or the group to whom the medication will be given." comment="SubstanceAdministration-&gt;subject-&gt;Patient." mustSupport="true"/>
        <element name="context" elementType="QICore.Reference" description="Encounter / Episode associated with event" definition="The encounter or episode of care that establishes the context for this event."/>
        <element name="supportingInformation" description="Information that supports the dispensing of the medication" definition="Additional information that supports the medication being dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="performer" description="(USCDI) Who performed event" definition="Indicates who or what performed the event." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.MedicationDispense.Performer"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where the dispense occurred" definition="The principal physical location where the dispense was performed."/>
        <element name="authorizingPrescription" description="(USCDI) Medication order that authorizes the dispense" definition="Indicates the medication order that is being dispensed against." comment="Maps to basedOn in Event logical model." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Trial fill, partial fill, emergency fill, etc." definition="Indicates the type of dispensing event that is performed. For example, Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Amount dispensed" definition="The amount of medication that has been dispensed. Includes unit of measure." mustSupport="true">
            <binding strength="Preferred"/>
        </element>
        <element name="daysSupply" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Amount of medication expressed as a timing amount" definition="The amount of medication expressed as a timing amount."/>
        <element name="whenPrepared" elementType="System.DateTime" target="%value.value" description="When product was packaged and reviewed" definition="The time when the dispensed product was packaged and reviewed."/>
        <element name="whenHandedOver" elementType="System.DateTime" target="%value.value" description="(USCDI) When product was given out or mailed" definition="When the product was given out. For mailed prescriptions, when the label was printed" mustSupport="true"/>
        <element name="destination" elementType="QICore.Reference" description="Where the medication was sent" definition="Identification of the facility/location where the medication was shipped to, as part of the dispense event."/>
        <element name="receiver" description="Who collected the medication" definition="Identifies the person who picked up the medication.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Information about the dispense" definition="Extra information about the dispense that could not be conveyed in the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="dosageInstruction" description="(USCDI) How the medication is to be used by the patient or administered by the caregiver" definition="Indicates how the medication is to be used by the patient." comment="When the dose or rate is intended to change over the entire administration period (e.g. Tapering dose prescriptions), multiple instances of dosage instructions will need to be supplied to convey the different doses/rates.&#13;The pharmacist reviews the medication order prior to dispense and updates the dosageInstruction based on the actual product being dispensed." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Dosage"/>
        </element>
        <element name="substitution" elementType="QICore.MedicationDispense.Substitution" description="Whether a substitution was performed on the dispense" definition="Indicates whether or not substitution was made as part of the dispense.  In some cases, substitution will be expected but does not happen, in other cases substitution is not expected but does happen.  This block explains what substitution did or did not happen and why.  If nothing is specified, substitution was not done."/>
        <element name="detectedIssue" description="Clinical issue with action" definition="Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. drug-drug interaction, duplicate therapy, dosage alert etc." comment="This element can include a detected issue that has been identified either by a decision support system or by a clinician and may include information on the steps that were taken to address the issue.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="eventHistory" description="A list of relevant lifecycle events" definition="A summary of the events of interest that have occurred, such as when the dispense was verified." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important. This SHALL NOT include the Provenance associated with this current version of the resource. (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update. Until then, it can be queried directly as the Provenance that points to this version using _revinclude All Provenances should have some historical version of this Request as their subject.).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationNotRequested" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationnotrequested" label="QICore Medication Not Requested" target="MedicationRequest" retrievable="true" primaryCodePath="medication" baseType="QICore.DomainResource">
        <element name="identifier" description="External ids for this request" definition="Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) active | on-hold | cancelled | completed | entered-in-error | stopped | draft | unknown" definition="A code specifying the current state of the order.  Generally, this will be active or completed state." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding description="A code specifying the state of the prescribing event. Describes the lifecycle of the prescription." strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="Captures the reason for the current state of the MedicationRequest." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;suspended&quot; or &quot;cancelled&quot;. The reason why the MedicationRequest was created at all is captured in reasonCode, not here.">
            <binding name="MedicationRequestStatusReason" description="Identifies the reasons for a given status." strength="Example"/>
        </element>
        <element name="intent" elementType="System.String" target="%value.value" description="(USCDI) proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option" definition="Whether the request is a proposal, plan, or an original order." comment="It is expected that the type of requester will be restricted for different stages of a MedicationRequest.  For example, Proposals can be created by a patient, relatedPerson, Practitioner or Device.  Plans can be created by Practitioners, Patients, RelatedPersons and Devices.  Original orders can be created by a Practitioner only.&#13;&#13;An instance-order is an instantiation of a request or order and may be used to populate Medication Administration Record.&#13;&#13;This element is labeled as a modifier because the intent alters when and how the resource is actually applicable." mustSupport="true">
            <binding description="The kind of medication order." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Type of medication usage" definition="Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))." comment="The category can be used to include where the medication is expected to be consumed or other types of requests." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationRequestCategory" description="A coded concept identifying the category of medication request.  For example, where the medication is to be consumed or administered, or the type of medication treatment." strength="Example"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Type of medication usage" definition="Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))." comment="The category can be used to include where the medication is expected to be consumed or other types of requests." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="The type of medication order. Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.MedicationRequestPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Indicates how quickly the Medication Request should be addressed with respect to other requests.">
            <binding name="MedicationRequestPriority" description="Identifies the level of importance to be assigned to actioning the request." strength="Required"/>
        </element>
        <element name="doNotPerform" elementType="System.Boolean" target="%value.value" description="(QI-Core) True if medication was not requested" definition="If true indicates that the provider is asking for the medication request not to occur." comment="If do not perform is not specified, the request is a positive request e.g. &quot;do perform&quot;."/>
        <element name="reported" elementType="QICore.Reference" description="(QI-Core)(USCDI) Reported rather than primary record" definition="Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report." mustSupport="true"/>
        <element name="medication" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.medication[x].extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(QI-Core)(USCDI) Medication to be taken" definition="Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications." comment="If only a code is specified, then it needs to be a code for a specific product. If more information is required, then the use of the Medication resource is recommended.  For example, if you require form or lot number or if the medication is compounded or extemporaneously prepared, then you must reference the Medication resource." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who or group medication request is for" definition="A link to a resource representing the person or set of individuals to whom the medication will be given." comment="The subject on a medication request is mandatory.  For the secondary use case where the actual subject is not provided, there still must be an anonymized subject specified." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="(QI-Core)(USCDI) Encounter created as part of encounter/admission/stay" definition="The Encounter during which this [x] was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter.&quot;    If there is a need to link to episodes of care they will be handled with an extension." mustSupport="true"/>
        <element name="supportingInformation" description="Information to support ordering of the medication" definition="Include additional information (for example, patient height and weight) that supports the ordering of the medication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="(QI-Core)(USCDI) When request was initially authored" definition="The date (and perhaps time) when the prescription was initially written or authored on." mustSupport="true"/>
        <element name="requester" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who/What requested the Request" definition="The individual, organization, or device that initiated the request and has responsibility for its activation." mustSupport="true"/>
        <element name="performer" elementType="QICore.Reference" description="Intended performer of administration" definition="The specified desired performer of the medication treatment (e.g. the performer of the medication administration)."/>
        <element name="performerType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Desired kind of performer of the medication administration" definition="Indicates the type of performer of the administration of the medication." comment="If specified without indicating a performer, this indicates that the performer must be of the specified type. If specified with a performer then it indicates the requirements of the performer if the designated performer is not available.">
            <binding name="MedicationRequestPerformerType" description="Identifies the type of individual that is desired to administer the medication." strength="Example"/>
        </element>
        <element name="recorder" elementType="QICore.Reference" description="Person who entered the request" definition="The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order."/>
        <element name="reasonCode" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Reason or indication for ordering or not ordering the medication" definition="The reason or the indication for ordering or not ordering the medication." comment="This could be a diagnosis code. If a full condition record exists or additional detail is needed, use reasonReference.">
            <binding description="The reason the medication was not requested" strength="Extensible"/>
        </element>
        <element name="reasonReference" description="(QI-Core)(USCDI) US Core Condition or Observation that supports the prescription" definition="Condition or observation that supports why the medication was ordered." comment="This is a reference to a condition or observation that is the reason for the medication order.  If only a code exists, use reasonCode.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this MedicationRequest.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="What request fulfills" definition="A plan or request that is fulfilled in whole or in part by this medication request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="groupIdentifier" elementType="QICore.Identifier" description="Composite request this is part of" definition="A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition or prescription."/>
        <element name="courseOfTherapyType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Overall pattern of medication administration" definition="The description of the overall patte3rn of the administration of the medication to the patient." comment="This attribute should not be confused with the protocol of the medication.">
            <binding name="MedicationRequestCourseOfTherapy" description="Identifies the overall pattern of medication administratio." strength="Example"/>
        </element>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Information about the prescription" definition="Extra information about the prescription that could not be conveyed by the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="dosageInstruction" description="(USCDI) How the medication should be taken" definition="Indicates how the medication is to be used by the patient." comment="There are examples where a medication request may include the option of an oral dose or an Intravenous or Intramuscular dose.  For example, &quot;Ondansetron 8mg orally or IV twice a day as needed for nausea&quot; or &quot;Compazine® (prochlorperazine) 5-10mg PO or 25mg PR bid prn nausea or vomiting&quot;.  In these cases, two medication requests would be created that could be grouped together.  The decision on which dose and route of administration to use is based on the patient's condition at the time the dose is needed." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Dosage"/>
        </element>
        <element name="dispenseRequest" elementType="QICore.MedicationRequest.DispenseRequest" description="(USCDI) Medication supply authorization" definition="Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department." mustSupport="true"/>
        <element name="substitution" elementType="QICore.MedicationRequest.Substitution" description="Any restrictions on medication substitution" definition="Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done."/>
        <element name="priorPrescription" elementType="QICore.Reference" description="An order/prescription that is being replaced" definition="A link to a resource representing an earlier order related order or prescription."/>
        <element name="detectedIssue" description="Clinical Issue with action" definition="Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc." comment="This element can include a detected issue that has been identified either by a decision support system or by a clinician and may include information on the steps that were taken to address the issue.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="eventHistory" description="A list of events of interest in the lifecycle" definition="Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important. This SHALL NOT include the provenance associated with this current version of the resource. (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update. Until then, it can be queried directly as the provenance that points to this version using _revinclude All Provenances should have some historical version of this Request as their subject.).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationRequest" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationrequest" label="QICore MedicationRequest" retrievable="true" primaryCodePath="medication" baseType="QICore.DomainResource">
        <element name="identifier" description="External ids for this request" definition="Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) active | on-hold | cancelled | completed | entered-in-error | stopped | draft | unknown" definition="A code specifying the current state of the order.  Generally, this will be active or completed state." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding description="A code specifying the state of the prescribing event. Describes the lifecycle of the prescription." strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="Captures the reason for the current state of the MedicationRequest." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;suspended&quot; or &quot;cancelled&quot;. The reason why the MedicationRequest was created at all is captured in reasonCode, not here.">
            <binding name="MedicationRequestStatusReason" description="Identifies the reasons for a given status." strength="Example"/>
        </element>
        <element name="intent" elementType="System.String" target="%value.value" description="(USCDI) proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option" definition="Whether the request is a proposal, plan, or an original order." comment="It is expected that the type of requester will be restricted for different stages of a MedicationRequest.  For example, Proposals can be created by a patient, relatedPerson, Practitioner or Device.  Plans can be created by Practitioners, Patients, RelatedPersons and Devices.  Original orders can be created by a Practitioner only.&#13;&#13;An instance-order is an instantiation of a request or order and may be used to populate Medication Administration Record.&#13;&#13;This element is labeled as a modifier because the intent alters when and how the resource is actually applicable." mustSupport="true">
            <binding description="The kind of medication order." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Type of medication usage" definition="Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))." comment="The category can be used to include where the medication is expected to be consumed or other types of requests." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationRequestCategory" description="A coded concept identifying the category of medication request.  For example, where the medication is to be consumed or administered, or the type of medication treatment." strength="Example"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Type of medication usage" definition="Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient))." comment="The category can be used to include where the medication is expected to be consumed or other types of requests." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="The type of medication order. Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.MedicationRequestPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Indicates how quickly the Medication Request should be addressed with respect to other requests.">
            <binding name="MedicationRequestPriority" description="Identifies the level of importance to be assigned to actioning the request." strength="Required"/>
        </element>
        <element name="doNotPerform" elementType="System.Boolean" target="%value.value" description="(QI-Core) True if medication was not requested" definition="If true indicates that the provider is asking for the medication request not to occur." comment="If do not perform is not specified, the request is a positive request e.g. &quot;do perform&quot;."/>
        <element name="reported" elementType="QICore.Reference" description="(QI-Core)(USCDI) Reported rather than primary record" definition="Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report." mustSupport="true"/>
        <element name="medication" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Medication to be taken" definition="Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications." comment="If only a code is specified, then it needs to be a code for a specific product. If more information is required, then the use of the Medication resource is recommended.  For example, if you require form or lot number or if the medication is compounded or extemporaneously prepared, then you must reference the Medication resource." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who or group medication request is for" definition="A link to a resource representing the person or set of individuals to whom the medication will be given." comment="The subject on a medication request is mandatory.  For the secondary use case where the actual subject is not provided, there still must be an anonymized subject specified." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="(QI-Core)(USCDI) Encounter created as part of encounter/admission/stay" definition="The Encounter during which this [x] was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter.&quot;    If there is a need to link to episodes of care they will be handled with an extension." mustSupport="true"/>
        <element name="supportingInformation" description="Information to support ordering of the medication" definition="Include additional information (for example, patient height and weight) that supports the ordering of the medication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="(QI-Core)(USCDI) When request was initially authored" definition="The date (and perhaps time) when the prescription was initially written or authored on." mustSupport="true"/>
        <element name="requester" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who/What requested the Request" definition="The individual, organization, or device that initiated the request and has responsibility for its activation." comment="Should include QICoreDevice but the base profile does excludes device references." mustSupport="true"/>
        <element name="performer" elementType="QICore.Reference" description="Intended performer of administration" definition="The specified desired performer of the medication treatment (e.g. the performer of the medication administration)."/>
        <element name="performerType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Desired kind of performer of the medication administration" definition="Indicates the type of performer of the administration of the medication." comment="If specified without indicating a performer, this indicates that the performer must be of the specified type. If specified with a performer then it indicates the requirements of the performer if the designated performer is not available.">
            <binding name="MedicationRequestPerformerType" description="Identifies the type of individual that is desired to administer the medication." strength="Example"/>
        </element>
        <element name="recorder" elementType="QICore.Reference" description="Person who entered the request" definition="The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Reason or indication for ordering or not ordering the medication" definition="The reason or the indication for ordering or not ordering the medication." comment="This could be a diagnosis code. If a full condition record exists or additional detail is needed, use reasonReference.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Extensible"/>
        </element>
        <element name="reasonReference" description="(QI-Core)(USCDI) QI-Core Condition or Observation that supports the prescription" definition="Condition or observation that supports why the medication was ordered." comment="This is a reference to a condition or observation that is the reason for the medication order.  If only a code exists, use reasonCode.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this MedicationRequest.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="What request fulfills" definition="A plan or request that is fulfilled in whole or in part by this medication request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="groupIdentifier" elementType="QICore.Identifier" description="Composite request this is part of" definition="A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition or prescription."/>
        <element name="courseOfTherapyType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Overall pattern of medication administration" definition="The description of the overall patte3rn of the administration of the medication to the patient." comment="This attribute should not be confused with the protocol of the medication.">
            <binding name="MedicationRequestCourseOfTherapy" description="Identifies the overall pattern of medication administratio." strength="Example"/>
        </element>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Information about the prescription" definition="Extra information about the prescription that could not be conveyed by the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="dosageInstruction" description="(QI-Core)(USCDI) How medication should be taken" definition="Indicates how the medication is to be used by the patient." comment="There are examples where a medication request may include the option of an oral dose or an Intravenous or Intramuscular dose.  For example, &quot;Ondansetron 8mg orally or IV twice a day as needed for nausea&quot; or &quot;Compazine® (prochlorperazine) 5-10mg PO or 25mg PR bid prn nausea or vomiting&quot;.  In these cases, two medication requests would be created that could be grouped together.  The decision on which dose and route of administration to use is based on the patient's condition at the time the dose is needed." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Dosage"/>
        </element>
        <element name="dispenseRequest" elementType="QICore.MedicationRequest.DispenseRequest" description="(QI-Core)(USCDI) Medication supply authorization" definition="Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department." mustSupport="true"/>
        <element name="substitution" elementType="QICore.MedicationRequest.Substitution" description="Any restrictions on medication substitution" definition="Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done."/>
        <element name="priorPrescription" elementType="QICore.Reference" description="An order/prescription that is being replaced" definition="A link to a resource representing an earlier order related order or prescription."/>
        <element name="detectedIssue" description="Clinical Issue with action" definition="Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc." comment="This element can include a detected issue that has been identified either by a decision support system or by a clinician and may include information on the steps that were taken to address the issue.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="eventHistory" description="A list of events of interest in the lifecycle" definition="Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important. This SHALL NOT include the provenance associated with this current version of the resource. (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update. Until then, it can be queried directly as the provenance that points to this version using _revinclude All Provenances should have some historical version of this Request as their subject.).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="requester"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationRequest.DispenseRequest" retrievable="false" baseType="QICore.BackboneElement">
        <element name="dispenseInterval" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(QI-Core) Minimum period of time between dispenses" definition="The minimum period of time that must occur between dispenses of the medication."/>
        <element name="validityPeriod" target="FHIRHelpers.ToInterval(%value)" description="Time period supply is authorized for" definition="This indicates the validity period of a prescription (stale dating the Prescription)." comment="It reflects the prescribers' perspective for the validity of the prescription. Dispenses must not be made against the prescription outside of this period. The lower-bound of the Dispensing Window signifies the earliest date that the prescription can be filled for the first time. If an upper-bound is not specified then the Prescription is open-ended or will default to a stale-date based on regulations.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="numberOfRepeatsAllowed" elementType="System.Integer" target="%value.value" description="(QI-Core)(USCDI) Number of refills authorized" definition="An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus &quot;3 repeats&quot;, then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets.  A prescriber may explicitly say that zero refills are permitted after the initial dispense." comment="If displaying &quot;number of authorized fills&quot;, add 1 to this number." mustSupport="true"/>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(QI-Core)(USCDI) Amount of medication to supply per dispense" definition="The amount that is to be dispensed for one fill." mustSupport="true"/>
        <element name="expectedSupplyDuration" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(QI-Core) Number of days supply per dispense" definition="Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last." comment="In some situations, this attribute may be used instead of quantity to identify the amount supplied by how long it is expected to last, rather than the physical quantity issued, e.g. 90 days supply of medication (based on an ordered dosage). When possible, it is always better to specify quantity, as this tends to be more precise. expectedSupplyDuration will always be an estimate that can be influenced by external factors."/>
        <element name="performer" elementType="QICore.Reference" description="Intended dispenser" definition="Indicates the intended dispensing Organization specified by the prescriber."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationRequest.DispenseRequest.InitialFill" retrievable="false" baseType="QICore.BackboneElement">
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="First fill quantity" definition="The amount or quantity to provide as part of the first dispense."/>
        <element name="duration" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="First fill duration" definition="The length of time that the first dispense is expected to last."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationRequest.Substitution" retrievable="false" baseType="QICore.BackboneElement">
        <element name="allowed" target="FHIRHelpers.ToValue(%value)" description="Whether substitution is allowed or not" definition="True if the prescriber allows a different drug to be dispensed from what was prescribed." comment="This element is labeled as a modifier because whether substitution is allow or not, it cannot be ignored.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
            </elementTypeSpecifier>
            <binding name="MedicationRequestSubstitution" description="Identifies the type of substitution allowed." strength="Example"/>
        </element>
        <element name="reason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why should (not) substitution be made" definition="Indicates the reason for the substitution, or why substitution must or must not be performed.">
            <binding name="MedicationIntendedSubstitutionReason" description="A coded concept describing the reason that a different medication should (or should not) be substituted from what was prescribed." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationRequestPriority" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationStatement" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-medicationstatement" label="QICore MedicationStatement" retrievable="true" primaryCodePath="medication" baseType="QICore.DomainResource">
        <element name="identifier" description="External identifier" definition="Identifiers associated with this Medication Statement that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server." comment="This is a business identifier, not a resource identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfils plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular event is a component or step.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.MedicationStatementStatus" target="%value.value" description="(QI-Core) active | completed | entered-in-error | intended | stopped | on-hold | unknown | not-taken" definition="A code representing the patient or other source's judgment about the state of the medication used that this statement is about.  Generally, this will be active or completed." comment="MedicationStatement is a statement at a point in time.  The status is only representative at the point when it was asserted.  The value set for MedicationStatement.status contains codes that assert the status of the use of the medication by the patient (for example, stopped or on hold) as well as codes that assert the status of the medication statement itself (for example, entered in error).&#13;&#13;This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="MedicationStatementStatus" description="A coded concept indicating the current status of a MedicationStatement." strength="Required"/>
        </element>
        <element name="statusReason" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="Captures the reason for the current state of the MedicationStatement." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;not-taken&quot;, &quot;on-hold&quot;, &quot;cancelled&quot; or &quot;entered-in-error&quot;. The reason for performing the event at all is captured in reasonCode, not here.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationStatementStatusReason" description="A coded concept indicating the reason for the status of the statement." strength="Example"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of medication usage" definition="Indicates where the medication is expected to be consumed or administered.">
            <binding name="MedicationStatementCategory" description="A coded concept identifying where the medication included in the MedicationStatement is expected to be consumed or administered." strength="Preferred"/>
        </element>
        <element name="medication" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) What medication was taken" definition="Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications." comment="If only a code is specified, then it needs to be a code for a specific product. If more information is required, then the use of the medication resource is recommended.  For example, if you require form or lot number, then you must reference the Medication resource.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding description="The set of RxNorm codes to represent medications" strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Who is/was taking the medication" definition="The person, animal or group who is/was taking the medication."/>
        <element name="context" elementType="QICore.Reference" description="Encounter / Episode associated with MedicationStatement" definition="The encounter or episode of care that establishes the context for this MedicationStatement."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) The date/time or interval when the medication is/was/will be taken" definition="The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationStatement.taken element is No)." comment="This attribute reflects the period over which the patient consumed the medication and is expected to be populated on the majority of Medication Statements. If the medication is still being taken at the time the statement is recorded, the &quot;end&quot; date will be omitted.  The date/time attribute supports a variety of dates - year, year/month and exact date.  If something more than this is required, this should be conveyed as text.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="dateAsserted" elementType="System.DateTime" target="%value.value" description="(QI-Core) When the statement was asserted?" definition="The date when the medication statement was asserted by the information source."/>
        <element name="informationSource" elementType="QICore.Reference" description="(QI-Core) Person or organization that provided the information about the taking of this medication" definition="The person or organization that provided the information about the taking of this medication. Note: Use derivedFrom when a MedicationStatement is derived from other resources, e.g. Claim or MedicationRequest."/>
        <element name="derivedFrom" description="(QI-Core) Additional supporting information" definition="Allows linking the MedicationStatement to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationStatement." comment="Likely references would be to MedicationRequest, MedicationDispense, Claim, Observation or QuestionnaireAnswers.  The most common use cases for deriving a MedicationStatement comes from creating a MedicationStatement from a MedicationRequest or from a lab observation or a claim.  it should be noted that the amount of information that is available varies from the type resource that you derive the MedicationStatement from.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Reason for why the medication is being/was taken" definition="A reason for why the medication is being/was taken." comment="This could be a diagnosis code. If a full condition record exists or additional detail is needed, use reasonForUseReference." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="MedicationReason" description="A coded concept identifying why the medication is being taken." strength="Example"/>
        </element>
        <element name="reasonReference" description="Condition or observation that supports why the medication is being/was taken" definition="Condition or observation that supports why the medication is being/was taken." comment="This is a reference to a condition that is the reason why the medication is being/was taken.  If only a code exists, use reasonForUseCode.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Further information about the statement" definition="Provides extra information about the medication statement that is not conveyed by the other attributes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="dosage" description="(QI-Core) Details of how medication is/was taken or should be taken" definition="Indicates how the medication is/was or should be taken by the patient." comment="The dates included in the dosage on a Medication Statement reflect the dates for a given dose.  For example, &quot;from November 1, 2016 to November 3, 2016, take one tablet daily and from November 4, 2016 to November 7, 2016, take two tablets daily.&quot;  It is expected that this specificity may only be populated where the patient brings in their labeled container or where the Medication Statement is derived from a MedicationRequest.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Dosage"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="informationSource"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="informationSource"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationStatementStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MedicationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Meta" identifier="http://hl7.org/fhir/StructureDefinition/Meta" label="Meta" retrievable="false" baseType="QICore.Element">
        <element name="versionId" elementType="System.String" target="%value.value" description="Version specific identifier" definition="The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted." comment="The server assigns this value, and ignores what the client specifies, except in the case that the server is imposing version integrity on updates/deletes."/>
        <element name="lastUpdated" elementType="System.DateTime" target="%value.value" description="When the resource version last changed" definition="When the resource last changed - e.g. when the version changed." comment="This value is always populated except when the resource is first being created. The server / resource manager sets this value; what a client provides is irrelevant. This is equivalent to the HTTP Last-Modified and SHOULD have the same value on a [read](http.html#read) interaction."/>
        <element name="source" elementType="System.String" target="%value.value" description="Identifies where the resource comes from" definition="A uri that identifies the source system of the resource. This provides a minimal amount of [Provenance](provenance.html#) information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc." comment="In the provenance resource, this corresponds to Provenance.entity.what[x]. The exact use of the source (and the implied Provenance.entity.role) is left to implementer discretion. Only one nominated source is allowed; for additional provenance details, a full Provenance resource should be used. &#10;&#10;This element can be used to indicate where the current master source of a resource that has a canonical URL if the resource is no longer hosted at the canonical URL."/>
        <element name="profile" target="%value.value" description="Profiles this resource claims to conform to" definition="A list of profiles (references to [StructureDefinition](structuredefinition.html#) resources) that this resource claims to conform to. The URL is a reference to [StructureDefinition.url](structuredefinition-definitions.html#StructureDefinition.url)." comment="It is up to the server and/or other infrastructure of policy to determine whether/how these claims are verified and/or updated over time.  The list of profile URLs is a set.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="security" target="FHIRHelpers.ToCode(%value)" description="Security Labels applied to this resource" definition="Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure." comment="The security labels can be updated without changing the stated version of the resource. The list of security labels is a set. Uniqueness is based the system/code, and version and display are ignored.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
            <binding name="SecurityLabels" description="Security Labels from the Healthcare Privacy and Security Classification System." strength="Extensible"/>
        </element>
        <element name="tag" target="FHIRHelpers.ToCode(%value)" description="Tags applied to this resource" definition="Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource." comment="The tags can be updated without changing the stated version of the resource. The list of tags is a set. Uniqueness is based the system/code, and version and display are ignored.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
            <binding name="Tags" description="Codes that represent various types of tags, commonly workflow-related; e.g. &quot;Needs review by Dr. Jones&quot;." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="MimeType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NameUse" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Narrative" identifier="http://hl7.org/fhir/StructureDefinition/Narrative" label="Narrative" retrievable="false" baseType="QICore.Element">
        <element name="status" elementType="QICore.NarrativeStatus" target="%value.value" description="generated | extensions | additional | empty" definition="The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.">
            <binding name="NarrativeStatus" description="The status of a resource narrative." strength="Required"/>
        </element>
        <element name="div" elementType="System.String" target="%value.value" description="Limited xhtml content" definition="The actual narrative content, a stripped down version of XHTML." comment="The contents of the html element are an XHTML fragment containing only the basic html formatting elements described in chapters 7-11 and 15 of the HTML 4.0 standard, &lt;a&gt; elements (either name or href), images and internally contained stylesheets. The XHTML content SHALL NOT contain a head, a body, external stylesheet references, scripts, forms, base/link/xlink, frames, iframes and objects.">
            <constraint name="txt-1" severity="ERROR" message="The narrative SHALL contain only the basic html formatting elements and attributes described in chapters 7-11 (except section 4 of chapter 9) and 15 of the HTML 4.0 standard, &lt;a&gt; elements (either name or href), images and internally contained style attributes">
                <expression language="text/fhirpath" expression="htmlChecks()"/>
            </constraint>
            <constraint name="txt-2" severity="ERROR" message="The narrative SHALL have some non-whitespace content">
                <expression language="text/fhirpath" expression="htmlChecks()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NarrativeStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NonPatientObservation" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-nonpatient-observation" label="QICore NonPatient Observation" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core) registered | prliminary | final | amended | corrected | entered-in-error | unknown" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Classification of type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Type of observation (code / type)" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation.">
            <binding description="This value set specifies the type of observation" strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) The device/location/implantable device the observation is about" definition="The device/location/implantable device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1."/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core) Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="(QI-Core) Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below."/>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="(QI-Core) QI Core Profiles or other resource the observation is made from" definition="Observations, DocumentReference, QuestionnaireResponse or other resource from which this observation value is derived." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NotDoneReason" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneReason" label="QICore Not Done Reason" retrievable="false" baseType="System.Concept"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NotDoneRecorded" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-recorded" label="QICore Not Done Recorded" retrievable="false" baseType="System.DateTime"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NotDoneValueSet" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet" label="QICore Not Done ValueSet" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NoteType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritiionOrderIntent" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrder" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-nutritionorder" label="QICore NutritionOrder" retrievable="true" baseType="QICore.DomainResource">
        <element name="identifier" description="Identifiers assigned to this order" definition="Identifiers assigned to this order by the order sender or by the order receiver." comment="The Identifier.type element can be to indicate filler vs. placer if needed.  This is explained in further detail [here](servicerequest.html#notes)." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder." comment="Note: This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiates" target="%value.value" description="Instantiates protocol or definition" definition="The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="status" elementType="QICore.NutritionOrderStatus" target="%value.value" description="draft | active | on-hold | revoked | completed | entered-in-error | unknown" definition="The workflow status of the nutrition order/request." comment="Typically the system placing the order sets the status to &quot;requested&quot;. Thereafter, the order is maintained by the receiver that updates the status as the request is handled.  This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="NutritionOrderStatus" description="Codes identifying the lifecycle stage of the nutrition order." strength="Required"/>
        </element>
        <element name="intent" elementType="QICore.NutritiionOrderIntent" target="%value.value" description="proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option" definition="Indicates the level of authority/intentionality associated with the NutrionOrder and where the request fits into the workflow chain." comment="When resources map to this element, they are free to define as many codes as necessary to cover their space and will map to &quot;proposal, plan or order&quot;.  Can have multiple codes that map to one of these.  E.g. &quot;original order&quot;, &quot;encoded order&quot;, &quot;reflex order&quot; would all map to &quot;order&quot;.  Expectation is that the set of codes is mutually exclusive or a strict all-encompassing hierarchy.">
            <binding name="NutritiionOrderIntent" description="Codes indicating the degree of authority/intentionality associated with a nutrition order." strength="Required"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core) The person who requires the diet, formula or nutritional supplement" definition="The person (patient) who needs the nutrition order for an oral diet, nutritional supplement and/or enteral or formula feeding."/>
        <element name="encounter" elementType="QICore.Reference" description="The encounter associated with this nutrition order" definition="An encounter that provides additional information about the healthcare context in which this request is made."/>
        <element name="dateTime" elementType="System.DateTime" target="%value.value" description="Date and time the nutrition order was requested" definition="The date and time that this nutrition order was requested."/>
        <element name="orderer" elementType="QICore.Reference" description="Who ordered the diet, formula or nutritional supplement" definition="The practitioner that holds legal responsibility for ordering the diet, nutritional supplement, or formula feedings."/>
        <element name="allergyIntolerance" description="List of the patient's food and nutrition-related allergies and intolerances" definition="A link to a record of allergies or intolerances  which should be included in the nutrition order." comment="Information on a patient's food allergies and intolerances to inform healthcare personnel about the type of foods that the patient shouldn't receive or consume.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="foodPreferenceModifier" target="FHIRHelpers.ToConcept(%value)" description="Order-specific modifier about the type of food that should be given" definition="This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings." comment="Information on a patient's food preferences that inform healthcare personnel about the food that the patient should receive or consume.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="PatientDiet" description="Medical, cultural or ethical food preferences to help with catering requirements." strength="Example"/>
        </element>
        <element name="excludeFoodModifier" target="FHIRHelpers.ToConcept(%value)" description="Order-specific modifier about the type of food that should not be given" definition="This modifier is used to convey Order-specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient’s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings." comment="Information on a patient's food allergies, intolerances and preferences to inform healthcare personnel about the type  of foods that the patient shouldn't receive or consume.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="FoodType" description="Codes used to indicate the type of food that should NOT be given to the patient." strength="Example"/>
        </element>
        <element name="oralDiet" elementType="QICore.NutritionOrder.OralDiet" description="Oral diet components" definition="Diet given orally in contrast to enteral (tube) feeding."/>
        <element name="supplement" description="Supplement components" definition="Oral nutritional products given in order to add further nutritional value to the patient's diet.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.NutritionOrder.Supplement"/>
        </element>
        <element name="enteralFormula" elementType="QICore.NutritionOrder.EnteralFormula" description="Enteral formula components" definition="Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity."/>
        <element name="note" description="Comments" definition="Comments made about the {{title}} by the requester, performer, subject or other participants." comment="This element SHALL NOT be used to supply free text instructions for the diet which are represented in the `.oralDiet.instruction`, `supplement.instruction`, or `enteralFormula.administrationInstruction` elements.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="orderer"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrder.EnteralFormula" retrievable="false" baseType="QICore.BackboneElement">
        <element name="baseFormulaType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of enteral or infant formula" definition="The type of enteral or infant formula such as an adult standard formula with fiber or a soy-based infant formula.">
            <binding name="EnteralFormulaType" description="Codes for type of enteral formula to be administered to patient." strength="Example"/>
        </element>
        <element name="baseFormulaProductName" elementType="System.String" target="%value.value" description="Product or brand name of the enteral or infant formula" definition="The product or brand name of the enteral or infant formula product such as &quot;ACME Adult Standard Formula&quot;."/>
        <element name="additiveType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of modular component to add to the feeding" definition="Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula.">
            <binding name="EnteralFormulaAdditiveType" description="Codes for the type of modular component such as protein, carbohydrate or fiber to be provided in addition to or mixed with the base formula." strength="Example"/>
        </element>
        <element name="additiveProductName" elementType="System.String" target="%value.value" description="Product or brand name of the modular additive" definition="The product or brand name of the type of modular component to be added to the formula."/>
        <element name="caloricDensity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Amount of energy per specified volume that is required" definition="The amount of energy (calories) that the formula should provide per specified volume, typically per mL or fluid oz.  For example, an infant may require a formula that provides 24 calories per fluid ounce or an adult may require an enteral formula that provides 1.5 calorie/mL."/>
        <element name="routeofAdministration" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How the formula should enter the patient's gastrointestinal tract" definition="The route or physiological path of administration into the patient's gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube.">
            <binding name="EnteralRouteOfAdministration" description="Codes specifying the route of administration of enteral formula." strength="Extensible"/>
        </element>
        <element name="administration" description="Formula feeding instruction as structured data" definition="Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours." comment="See implementation notes below for further discussion on how to order continuous vs bolus enteral feeding using this resource.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.NutritionOrder.EnteralFormula.Administration"/>
        </element>
        <element name="maxVolumeToDeliver" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Upper limit on formula volume per unit of time" definition="The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours."/>
        <element name="administrationInstruction" elementType="System.String" target="%value.value" description="Formula feeding instructions expressed as text" definition="Free text formula administration, feeding instructions or additional instructions or information." comment="Free text dosage instructions can be used for cases where the instructions are too complex to code."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrder.EnteralFormula.Administration" retrievable="false" baseType="QICore.BackboneElement">
        <element name="schedule" elementType="QICore.Timing" description="Scheduled frequency of enteral feeding" definition="The time period and frequency at which the enteral formula should be delivered to the patient."/>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="The volume of formula to provide" definition="The volume of formula to provide to the patient per the specified administration schedule."/>
        <element name="rate" target="FHIRHelpers.ToValue(%value)" description="Speed with which the formula is provided per period of time" definition="The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule." comment="Ratio is used when the quantity value in the denominator is not &quot;1&quot;, otherwise use Quantity. For example, the Ratio datatype is used for &quot;200 mL/4 hrs&quot; versus the Quantity datatype for &quot;50 mL/hr&quot;.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrder.OralDiet" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" target="FHIRHelpers.ToConcept(%value)" description="Type of oral diet or diet restrictions that describe what can be consumed orally" definition="The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="OralDiet" description="Codes used to indicate the type of diet being ordered for a patient." strength="Example"/>
        </element>
        <element name="schedule" description="Scheduled frequency of diet" definition="The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Timing"/>
        </element>
        <element name="nutrient" description="Required  nutrient modifications" definition="Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.NutritionOrder.OralDiet.Nutrient"/>
        </element>
        <element name="texture" description="Required  texture modifications" definition="Class that describes any texture modifications required for the patient to safely consume various types of solid foods.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.NutritionOrder.OralDiet.Texture"/>
        </element>
        <element name="fluidConsistencyType" target="FHIRHelpers.ToConcept(%value)" description="The required consistency of fluids and liquids provided to the patient" definition="The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="FluidConsistencyType" description="Codes used to represent the consistency of fluids and liquids provided to the patient." strength="Example"/>
        </element>
        <element name="instruction" elementType="System.String" target="%value.value" description="Instructions or additional information about the oral diet" definition="Free text or additional instructions or information pertaining to the oral diet." comment="Free text dosage instructions can be used for cases where the instructions are too complex to code."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrder.OralDiet.Nutrient" retrievable="false" baseType="QICore.BackboneElement">
        <element name="modifier" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of nutrient that is being modified" definition="The nutrient that is being modified such as carbohydrate or sodium.">
            <binding name="NutrientModifier" description="Codes for types of nutrients that are being modified such as carbohydrate or sodium." strength="Example"/>
        </element>
        <element name="amount" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Quantity of the specified nutrient" definition="The quantity of the specified nutrient to include in diet."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrder.OralDiet.Texture" retrievable="false" baseType="QICore.BackboneElement">
        <element name="modifier" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Code to indicate how to alter the texture of the foods, e.g. pureed" definition="Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed." comment="Coupled with the foodType (Meat).">
            <binding name="TextureModifier" description="Codes for food consistency types or texture modifications to apply to foods." strength="Example"/>
        </element>
        <element name="foodType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Concepts that are used to identify an entity that is ingested for nutritional purposes" definition="The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types." comment="Coupled with the `texture.modifier`; could be (All Foods).">
            <binding name="TextureModifiedFoodType" description="Codes for types of foods that are texture-modified." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrder.Supplement" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of supplement product requested" definition="The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement.">
            <binding name="SupplementType" description="Codes for nutritional supplements to be provided to the patient." strength="Example"/>
        </element>
        <element name="productName" elementType="System.String" target="%value.value" description="Product or brand name of the nutritional supplement" definition="The product or brand name of the nutritional supplement such as &quot;Acme Protein Shake&quot;."/>
        <element name="schedule" description="Scheduled frequency of supplement" definition="The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Timing"/>
        </element>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Amount of the nutritional supplement" definition="The amount of the nutritional supplement to be given."/>
        <element name="instruction" elementType="System.String" target="%value.value" description="Instructions or additional information about the oral supplement" definition="Free text or additional instructions or information pertaining to the oral supplement." comment="Free text dosage instructions can be used for cases where the instructions are too complex to code."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="NutritionOrderStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Observation.Component" retrievable="false" baseType="QICore.BackboneElement">
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of component observation (code / type)" definition="Describes what was observed. Sometimes this is called the observation &quot;code&quot;." comment="*All* code-value and  component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation.">
            <binding name="ObservationCode" description="Codes identifying names of simple observations." strength="Example"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Actual component result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="Used when observation has a set of component observations. An observation may have both a value (e.g. an  Apgar score)  and component observations (the observations from which the Apgar score was derived). If a value is present, the datatype for this element should be determined by Observation.code. A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="SampledData"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the component result is missing" definition="Provides a reason why the expected value in the element Observation.component.value[x] is missing." comment="&quot;Null&quot; or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;test not done&quot;. &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed.  Because of these options, use-case agreements are required to interpret general observations for exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="referenceRange" description="Provides guide for interpretation of component result" definition="Guidance on how to interpret the value by comparison to a normal or recommended range." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Observation.Component.Concentration" retrievable="false" baseType="QICore.Observation.Component"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Observation.Component.FlowRate" retrievable="false" baseType="QICore.Observation.Component"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Observation.Component.diastolic" retrievable="false" baseType="QICore.Observation.Component"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Observation.Component.industry" retrievable="false" baseType="QICore.Observation.Component"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Observation.Component.systolic" retrievable="false" baseType="QICore.Observation.Component"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Observation.ReferenceRange" retrievable="false" baseType="QICore.BackboneElement">
        <element name="low" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Low Range, if relevant" definition="The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is &gt;=5 - &lt;=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is &lt;=2.3)."/>
        <element name="high" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="High Range, if relevant" definition="The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is &gt;=5 - &lt;=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is &gt;= 2.3)."/>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reference range qualifier" definition="Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range." comment="This SHOULD be populated if there is more than one range.  If this element is not present then the normal range is assumed.">
            <binding name="ObservationRangeMeaning" description="Code for the meaning of a reference range." strength="Preferred"/>
        </element>
        <element name="appliesTo" target="FHIRHelpers.ToConcept(%value)" description="Reference range population" definition="Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an &quot;AND&quot; of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used." comment="This SHOULD be populated if there is more than one range.  If this element is not present then the normal population is assumed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationRangeType" description="Codes identifying the population the reference range applies to." strength="Example"/>
        </element>
        <element name="age" target="FHIRHelpers.ToInterval(%value)" description="Applicable age range, if relevant" definition="The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
        </element>
        <element name="text" elementType="System.String" target="%value.value" description="Text based reference range in an observation" definition="Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of &quot;Negative&quot; or a list or table of &quot;normals&quot;."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ObservationCancelled" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observationcancelled" label="QICore Observation Cancelled" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="notDoneReason" elementType="QICore.NotDoneReason" target="FHIRHelpers.ToConcept(%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneReason'].value)" description="(QI-Core) Extension" definition="Indicates the reason the event was not done."/>
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.ObservationStatus" target="%value.value" description="(QI-Core) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="ObservationStatus" description="Codes providing the status of an observation." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Classification of type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.code.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(QI-Core) Type of observation (code / type)" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding name="ObservationCode" description="Codes identifying names of simple observations." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated."/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="(QI-Core) Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below."/>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ObservationClinicalResult" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observation-clinical-result" label="QICore Observation Clinical Result" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) registered | prliminary | final | amended | corrected | entered-in-error | unknown" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Clinical Test or Procedure Name" definition="The name of the clinical test or procedure performed on a patient.  A LOINC **SHALL** be used if the concept is present in LOINC." comment="The typical patterns for codes are:  1)  a LOINC code either as a translation from a &quot;local&quot; code or as a primary code, or 2)  a local code only if no suitable LOINC exists,  or 3)  both the local and the LOINC translation.   Systems SHALL be capable of sending the local code if one exists.  When using LOINC , Use either the SHORTNAME or LONG_COMMON_NAME field for the display." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
            <constraint name="us-core-1" severity="ERROR" message="Datetime must be at least to day.">
                <expression language="text/fhirpath" expression="$this is DateTime implies $this.toString().length() &gt;= 10"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Result Value" definition="The clinical test or procedure result value. If a numeric value, valueQuantity.code **SHALL** be selected from [UCUM](http://unitsofmeasure.org).  A FHIR [UCUM Codes value set](http://hl7.org/fhir/STU3/valueset-ucum-units.html) that defines all UCUM codes is in the FHIR specification." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="us-core-3" severity="ERROR" message="SHALL use UCUM for coded quantity units.">
                <expression language="text/fhirpath" expression="value.ofType(Quantity).system.empty() or value.ofType(Quantity).system = 'http://unitsofmeasure.org'"/>
            </constraint>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ObservationScreeningAssessment" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-observation-screening-assessment" label="QICore Observation Screening Assessment" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) registered | prliminary | final | amended | corrected | entered-in-error | unknown" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Required"/>
        </element>
        <element name="survey" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Required"/>
        </element>
        <element name="screening-assessment" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of  type of observation" definition="Categories that a provider may use in their workflow to classify that this Observation is related to a USCDI Health Status/Assessments Data Class." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Type of observation (code / type)" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;." comment="At least a date should be present unless this observation is a historical report." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
            <constraint name="us-core-1" severity="ERROR" message="Datetime must be at least to day.">
                <expression language="text/fhirpath" expression="$this is DateTime implies $this.toString().length() &gt;= 10"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="(QI-Core)(USCDI) Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;." comment="Some questions on questionnaires are not answered directly (e.g., asserted) by the individual completing the questionnaire, but are derived from answers to one or more other questions. For types of answers, `Observation.performer` should not be specified and `Observation.derivedFrom` should reference the relevant Screening Response Observation(s)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have a value if it represents an individual survey question and answer pair. An observation should not have a value if it represents a multi-question survey or multi-select “check all that apply” question. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="&quot;Null&quot; or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values. For a given LOINC question, if the LOINC answer list includes concepts such as 'unknown' or 'not available', they should be used for Observation.value. Where these concepts are not part of the value set for Observation.value, the Observation.dataAbsentReason can be used if necessary and appropriate." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="(QI-Core)(USCDI) Reference to panel or multi-select responses" definition="Aggregate set of Observations that represent question answer pairs for both multi-question surveys and multi-select questions." comment="This grouping element is used to represent surveys that group several questions together or individual questions with  “check all that apply” responses. For example in the simplest case a flat multi-question survey where the &quot;panel&quot; observation is the survey instrument itself and instead of an `Observation.value` the `hasMember` element references other Observation that represent the individual questions answer pairs. In a survey that has a heirarchical grouping of questions, the observation &quot;panels&quot; can be nested. Because surveys can be arbitrarily complex structurally, not all survey structures can be represented using this Observation grouping pattern." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="(QI-Core)(USCDI) Related Observations or QuestionnaireResponses that the observation is made from" definition="Observations or QuestionnaireResponses from which this observation value is derived." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ObservationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Ordinal Value" identifier="http://hl7.org/fhir/StructureDefinition/ordinalValue" label="Ordinal Value" retrievable="false" baseType="System.Decimal"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Organization" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-organization" label="QICore Organization" retrievable="true" primaryCodePath="type" baseType="QICore.DomainResource">
        <element name="identifier" description="Identifies this organization  across multiple systems" definition="Identifier for the organization that is used to identify the organization across multiple disparate systems." comment="NPI preferred." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="NPI" description="National Provider Identifier (NPI)" definition="Identifier for the organization that is used to identify the organization across multiple disparate systems." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
            <constraint name="us-core-16" severity="ERROR" message="NPI must be 10 digits">
                <expression language="text/fhirpath" expression="value.matches('^[0-9]{10}$')"/>
            </constraint>
            <constraint name="us-core-17" severity="ERROR" message="NPI check digit must be valid (Luhn algorithm check)">
                <expression language="text/fhirpath" expression="(((select(value.substring(0,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(1,1).toInteger())+(select(value.substring(2,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(3,1).toInteger())+(select(value.substring(4,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(5,1).toInteger())+(select(value.substring(6,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(7,1).toInteger())+(select(value.substring(8,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(9,1).toInteger()) + 24)mod 10=0)"/>
            </constraint>
        </element>
        <element name="CLIA" description="Clinical Laboratory Improvement Amendments (CLIA) Number for laboratories" definition="Identifier for the organization that is used to identify the organization across multiple disparate systems." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
            <constraint name="us-core-18" severity="ERROR" message="CLIA number must be 10 digits with a letter &quot;D&quot; in third position">
                <expression language="text/fhirpath" expression="value.matches('^[0-9]{2}D[0-9]{7}$')"/>
            </constraint>
        </element>
        <element name="NAIC" description="NAIC Code" definition="Identifier for the organization that is used to identify the organization across multiple disparate systems." comment="NAIC Company code (sometimes called &quot;NAIC Number&quot; or &quot;cocode&quot;) for payers." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
            <constraint name="us-core-19" severity="ERROR" message="NAIC must be 5 digits">
                <expression language="text/fhirpath" expression="value.matches('^[0-9]{5}$')"/>
            </constraint>
        </element>
        <element name="ccn" elementType="QICore.Identifier" description="(QI-Core) CMS Certification Number" definition="Identifier for the organization that is used to identify the organization across multiple disparate systems." comment="NPI preferred." mustSupport="true"/>
        <element name="ein" elementType="QICore.Identifier" description="(QI-Core) Employer Identification Number" definition="Identifier for the organization that is used to identify the organization across multiple disparate systems." comment="There is not a general Tax Identifier Numer (TIN) OID. There is an SSN, a PTIN, and an ITIN, but no TIN generally. So the only slice specified here is EIN, if consumers determine a need for an SSN, submit a comment to that effect." mustSupport="true"/>
        <element name="active" elementType="System.Boolean" target="%value.value" description="Whether the organization's record is still in active use" definition="Whether the organization's record is still in active use." comment="This active flag is not intended to be used to mark an organization as temporarily closed or under construction. Instead the Location(s) within the Organization should have the suspended status. If further details of the reason for the suspension are required, then an extension on this element should be used.&#10;&#10;This element is labeled as a modifier because it may be used to mark that the resource was created in error." mustSupport="true"/>
        <element name="type" target="FHIRHelpers.ToConcept(%value)" description="Kind of organization" definition="The kind(s) of organization that this is." comment="Organizations can be corporations, wards, sections, clinical teams, government departments, etc. Note that code is generally a classifier of the type of organization; in many applications, codes are used to identity a particular organization (say, ward) as opposed to another of the same type - these are identifiers, not codes&#10;&#10;When considering if multiple types are appropriate, you should evaluate if child organizations would be a more appropriate use of the concept, as different types likely are in different sub-areas of the organization. This is most likely to be used where type values have orthogonal values, such as a religious, academic and medical center.&#10;&#10;We expect that some jurisdictions will profile this optionality to be a single cardinality.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Used to categorize the organization" strength="Preferred"/>
        </element>
        <element name="name" elementType="System.String" target="%value.value" description="Name used for the organization" definition="A name associated with the organization." comment="If the name of an organization changes, consider putting the old name in the alias column so that it can still be located through searches." mustSupport="true"/>
        <element name="alias" target="%value.value" description="A list of alternate names that the organization is known as, or was known as in the past" definition="A list of alternate names that the organization is known as, or was known as in the past." comment="There are no dates associated with the alias/historic names, as this is not intended to track when names were used, but to assist in searching so that older names can still result in identifying the organization.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="telecom" description="A contact detail for the organization" definition="A contact detail for the organization." comment="The use code 'home' is not to be used. Note that these contacts are not the contact details of people who are employed by or represent the organization, but official contacts for the organization itself." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
            <constraint name="org-3" severity="ERROR" message="The telecom of an organization can never be of use 'home'">
                <expression language="text/fhirpath" expression="where(use = 'home').empty()"/>
            </constraint>
        </element>
        <element name="address" description="An address for the organization" definition="An address for the organization." comment="Organization may have multiple addresses with different uses or applicable periods. The use code 'home' is not to be used." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Address"/>
            <constraint name="org-2" severity="ERROR" message="An address of an organization can never be of use 'home'">
                <expression language="text/fhirpath" expression="where(use = 'home').empty()"/>
            </constraint>
        </element>
        <element name="partOf" elementType="QICore.Reference" description="The organization of which this organization forms a part" definition="The organization of which this organization forms a part."/>
        <element name="contact" description="Contact for the organization for a certain purpose" definition="Contact for the organization for a certain purpose." comment="Where multiple contacts for the same purpose are provided there is a standard extension that can be used to determine which one is the preferred contact to use.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Organization.Contact"/>
        </element>
        <element name="endpoint" description="Technical endpoints providing access to services operated for the organization" definition="Technical endpoints providing access to services operated for the organization.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Organization.Contact" retrievable="false" baseType="QICore.BackboneElement">
        <element name="purpose" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The type of contact" definition="Indicates a purpose for which the contact can be reached.">
            <binding name="ContactPartyType" description="The purpose for which you would contact a contact party." strength="Extensible"/>
        </element>
        <element name="name" elementType="QICore.HumanName" description="A name associated with the contact" definition="A name associated with the contact."/>
        <element name="telecom" description="Contact details (telephone, email, etc.)  for a contact" definition="A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="address" elementType="QICore.Address" description="Visiting or postal addresses for the contact" definition="Visiting or postal addresses for the contact."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ParameterDefinition" identifier="http://hl7.org/fhir/StructureDefinition/ParameterDefinition" label="ParameterDefinition" retrievable="false" baseType="QICore.Element">
        <element name="name" elementType="System.String" target="%value.value" description="Name used to access the parameter value" definition="The name of the parameter used to allow access to the value of the parameter in evaluation contexts."/>
        <element name="use" elementType="QICore.ParameterUse" target="%value.value" description="in | out" definition="Whether the parameter is input or output for the module.">
            <binding name="ParameterUse" description="Whether the parameter is input or output." strength="Required"/>
        </element>
        <element name="min" elementType="System.Integer" target="%value.value" description="Minimum cardinality" definition="The minimum number of times this parameter SHALL appear in the request or response."/>
        <element name="max" elementType="System.String" target="%value.value" description="Maximum cardinality (a number of *)" definition="The maximum number of times this element is permitted to appear in the request or response."/>
        <element name="documentation" elementType="System.String" target="%value.value" description="A brief description of the parameter" definition="A brief discussion of what the parameter is for and how it is used by the module."/>
        <element name="type" elementType="QICore.FHIRAllTypes" target="%value.value" description="What type of value" definition="The type of the parameter.">
            <binding name="FHIRAllTypes" description="A list of all the concrete types defined in this version of the FHIR specification - Abstract Types, Data Types and Resource Types." strength="Required"/>
        </element>
        <element name="profile" elementType="System.String" target="%value.value" description="What profile the value is expected to be" definition="If specified, this indicates a profile that the input data must conform to, or that the output data will conform to."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ParameterUse" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Patient" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-patient" label="QICore Patient" retrievable="true" baseType="QICore.DomainResource">
        <element name="race" elementType="QICore.USCoreRaceExtension" target="%parent.extension[url='http://hl7.org/fhir/us/core/StructureDefinition/us-core-race']" description="(QI-Core)(USCDI) US Core Race Extension" definition="Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality.  The race codes used to represent these concepts are based upon the [CDC Race and Ethnicity Code Set Version 1.0](http://www.cdc.gov/phin/resources/vocabulary/index.html) which includes over 900 concepts for representing race and ethnicity of which 921 reference race.  The race concepts are grouped by and pre-mapped to the 5 OMB race categories:&#10;&#10;   - American Indian or Alaska Native&#10;   - Asian&#10;   - Black or African American&#10;   - Native Hawaiian or Other Pacific Islander&#10;   - White." mustSupport="false"/>
        <element name="ethnicity" elementType="QICore.USCoreEthnicityExtension" target="%parent.extension[url='http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity']" description="(QI-Core)(USCDI) US Core ethnicity Extension" definition="Concepts classifying the person into a named category of humans sharing common history, traits, geographical origin or nationality.  The ethnicity codes used to represent these concepts are based upon the [CDC ethnicity and Ethnicity Code Set Version 1.0](http://www.cdc.gov/phin/resources/vocabulary/index.html) which includes over 900 concepts for representing race and ethnicity of which 43 reference ethnicity.  The ethnicity concepts are grouped by and pre-mapped to the 2 OMB ethnicity categories: - Hispanic or Latino - Not Hispanic or Latino." mustSupport="false"/>
        <element name="tribalAffiliation" target="%parent.extension[url='http://hl7.org/fhir/us/core/StructureDefinition/us-core-tribal-affiliation']" description="(QI-Core)(USCDI) Tribal Affiliation Extension" definition="A tribe or band with which a person associates whether or not they are an enrolled member." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.USCoreTribalAffiliationExtension"/>
        </element>
        <element name="birthsex" elementType="QICore.USCoreBirthSexExtension" target="%parent.extension[url='http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex'].value.value" description="Birth Sex Extension" definition="A code classifying the person's sex assigned at birth  as specified by the [Office of the National Coordinator for Health IT (ONC)](https://www.healthit.gov/newsroom/about-onc)." comment="The codes required are intended to present birth sex (i.e., the sex recorded on the patient's birth certificate) and not gender identity or reassigned sex." mustSupport="false"/>
        <element name="sex" elementType="QICore.USCoreSexExtension" target="%parent.extension[url='http://hl7.org/fhir/us/core/StructureDefinition/us-core-sex'].value.value" description="(QI-Core)(USCDI) Sex Extension" definition="The US Core Sex Extension is used to reflect the documentation of a person's sex. It aligns with the C-CDA Sex Observation (LOINC 46098-0)." mustSupport="false"/>
        <element name="genderIdentity" target="FHIRHelpers.ToConcept(%parent.extension[url='http://hl7.org/fhir/us/core/StructureDefinition/us-core-genderIdentity'].value)" description="(QI-Core)(USCDI) The individual's gender identity" definition="An individual's personal sense of being a man, woman, boy, girl, nonbinary, or something else." comment="This represents an individual's identity, ascertained by asking them what that identity is." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.USCoreGenderIdentityExtension"/>
        </element>
        <element name="identifier" description="(USCDI) An identifier for this patient" definition="An identifier for this patient." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="active" elementType="System.Boolean" target="%value.value" description="Whether this patient's record is in active use" definition="Whether this patient record is in active use. &#10;Many systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules.&#10;&#10;It is often used to filter patient lists to exclude inactive patients&#10;&#10;Deceased patients may also be marked as inactive for the same reasons, but may be active for some time after death." comment="If a record is inactive, and linked to an active record, then future patient/record updates should occur on the other patient."/>
        <element name="name" description="(USCDI) A name associated with the patient" definition="A name associated with the individual." comment="A patient may have multiple names with different uses or applicable periods. For animals, the name is a &quot;HumanName&quot; in the sense that is assigned and used by humans and has the same patterns." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.HumanName"/>
            <constraint name="us-core-6" severity="ERROR" message="At least name.given and/or name.family are present or, if neither is available, the Data Absent Reason Extension is present.">
                <expression language="text/fhirpath" expression="(family.exists() or given.exists()) xor extension.where(url='http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists()"/>
            </constraint>
        </element>
        <element name="telecom" description="(QI-Core)(USCDI) A contact detail for the individual" definition="A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted." comment="A Patient may have multiple ways to be contacted with different uses or applicable periods.  May need to have options for contacting the person urgently and also to help with identification. The address might not go directly to the individual, but may reach another party that is able to proxy for the patient (i.e. home phone, or pet owner's phone)." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Patient.Telecom"/>
        </element>
        <element name="gender" elementType="System.String" target="%value.value" description="(USCDI) male | female | other | unknown" definition="Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes." comment="The gender might not match the biological sex as determined by genetics or the individual's preferred identification. Note that for both humans and particularly animals, there are other legitimate possibilities than male and female, though the vast majority of systems and contexts only support male and female.  Systems providing decision support or enforcing business rules should ideally do this on the basis of Observations dealing with the specific sex or gender aspect of interest (anatomical, chromosomal, social, etc.)  However, because these observations are infrequently recorded, defaulting to the administrative gender is common practice.  Where such defaulting occurs, rule enforcement should allow for the variation between administrative and biological, chromosomal and other gender aspects.  For example, an alert about a hysterectomy on a male should be handled as a warning or overridable error, not a &quot;hard&quot; error.  See the Patient Gender and Sex section for additional information about communicating patient gender and sex." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="birthDate" elementType="System.Date" target="%value.value" description="(QI-Core)(USCDI) The date of birth for the individual" definition="The date of birth for the individual." comment="At least an estimated year should be provided as a guess if the real DOB is unknown  There is a standard extension &quot;patient-birthTime&quot; available that should be used where Time is required (such as in maternity/infant care systems)." mustSupport="true"/>
        <element name="deceased" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Indicates if the individual is deceased or not" definition="Indicates if the individual is deceased or not." comment="The &quot;Cause of death&quot; for a patient is typically captured as an Observation.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="address" description="(QI-Core)(USCDI) An address for the individual" definition="An address for the individual." comment="Patient may have multiple addresses with different uses or applicable periods." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Patient.Address"/>
        </element>
        <element name="maritalStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Marital (civil) status of a patient" definition="This field contains a patient's most recent marital (civil) status.">
            <binding name="MaritalStatus" description="The domestic partnership status of a person." strength="Extensible"/>
        </element>
        <element name="multipleBirth" target="FHIRHelpers.ToValue(%value)" description="Whether patient is part of a multiple birth" definition="Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer)." comment="Where the valueInteger is provided, the number is the birth number in the sequence. E.g. The middle birth in triplets would be valueInteger=2 and the third born would have valueInteger=3 If a boolean value was provided for this triplets example, then all 3 patient records would have valueBoolean=true (the ordering is not indicated).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
            </elementTypeSpecifier>
        </element>
        <element name="photo" description="Image of the patient" definition="Image of the patient." comment="Guidelines:&#10;* Use id photos, not clinical photos.&#10;* Limit dimensions to thumbnail.&#10;* Keep byte count low to ease resource updates.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Attachment"/>
        </element>
        <element name="contact" description="A contact party (e.g. guardian, partner, friend) for the patient" definition="A contact party (e.g. guardian, partner, friend) for the patient." comment="Contact covers all kinds of contact parties: family members, business contacts, guardians, caregivers. Not applicable to register pedigree and family ties beyond use of having contact.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Patient.Contact"/>
            <constraint name="pat-1" severity="ERROR" message="SHALL at least contain a contact's details or a reference to an organization">
                <expression language="text/fhirpath" expression="name.exists() or telecom.exists() or address.exists() or organization.exists()"/>
            </constraint>
        </element>
        <element name="communication" description="(QI-Core)(USCDI) A language which may be used to communicate with the patient about his or her health" definition="A language which may be used to communicate with the patient about his or her health." comment="If no language is specified, this *implies* that the default local language is spoken.  If you need to convey proficiency for multiple modes, then you need multiple Patient.Communication associations.   For animals, language is not a relevant field, and should be absent from the instance. If the Patient does not speak the default local language, then the Interpreter Required Standard can be used to explicitly declare that an interpreter is required." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Patient.Communication"/>
        </element>
        <element name="generalPractitioner" description="Patient's nominated primary care provider" definition="Patient's nominated care provider." comment="This may be the primary care provider (in a GP context), or it may be a patient nominated care manager in a community/disability setting, or even organization that will provide people to perform the care provider roles.  It is not to be used to record Care Teams, these should be in a CareTeam resource that may be linked to the CarePlan or EpisodeOfCare resources.&#10;Multiple GPs may be recorded against the patient for various reasons, such as a student that has his home GP listed along with the GP at university during the school semesters, or a &quot;fly-in/fly-out&quot; worker that has the onsite GP also included with his home GP to remain aware of medical issues.&#10;&#10;Jurisdictions may decide that they can profile this down to 1 if desired, or 1 per type.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="managingOrganization" elementType="QICore.Reference" description="Organization that is the custodian of the patient record" definition="Organization that is the custodian of the patient record." comment="There is only one managing organization for a specific patient record. Other organizations will have their own Patient record, and may use the Link property to join the records together (or a Person resource which can include confidence ratings for the association)."/>
        <element name="link" description="Link to another patient resource that concerns the same actual person" definition="Link to another patient resource that concerns the same actual patient." comment="There is no assumption that linked patient records have mutual links." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Patient.Link"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="generalPractitioner"/>
        <contextRelationship context="Patient" relatedKeyElement="other"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="other"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Patient.Address" retrievable="false">
        <baseTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="QICore" name="Address"/>
        <element name="address-preferred" elementType="QICore.preferred" target="%parent.address.extension[url='http://hl7.org/fhir/StructureDefinition/iso21090-preferred'].value.value" description="Preferred" definition="Flag denoting whether parent item is preferred - e.g., a preferred address or telephone number." comment="Make general extension." mustSupport="false"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Patient.Communication" retrievable="false" baseType="QICore.BackboneElement">
        <element name="language" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) The language which can be used to communicate with the patient about his or her health" definition="The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. &quot;en&quot; for English, or &quot;en-US&quot; for American English versus &quot;en-EN&quot; for England English." comment="The structure aa-BB with this exact casing is one the most widely used notations for locale. However not all systems actually code this but instead have it as free text. Hence CodeableConcept instead of code as the data type." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="preferred" elementType="System.Boolean" target="%value.value" description="Language preference indicator" definition="Indicates whether or not the patient prefers this language (over other languages he masters up a certain level)." comment="This language is specifically identified for communicating healthcare information."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Patient.Contact" retrievable="false" baseType="QICore.BackboneElement">
        <element name="relationship" target="FHIRHelpers.ToConcept(%value)" description="The kind of relationship" definition="The nature of the relationship between the patient and the contact person.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ContactRelationship" description="The nature of the relationship between a patient and a contact person for that patient." strength="Extensible"/>
        </element>
        <element name="name" elementType="QICore.HumanName" description="A name associated with the contact person" definition="A name associated with the contact person."/>
        <element name="telecom" description="A contact detail for the person" definition="A contact detail for the person, e.g. a telephone number or an email address." comment="Contact may have multiple ways to be contacted with different uses or applicable periods.  May need to have options for contacting the person urgently, and also to help with identification.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="address" elementType="QICore.Address" description="Address for the contact person" definition="Address for the contact person."/>
        <element name="gender" elementType="QICore.AdministrativeGender" target="%value.value" description="male | female | other | unknown" definition="Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.">
            <binding name="AdministrativeGender" description="The gender of a person used for administrative purposes." strength="Required"/>
        </element>
        <element name="organization" elementType="QICore.Reference" description="Organization that is associated with the contact" definition="Organization on behalf of which the contact is acting or for which the contact is working."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="The period during which this contact person or organization is valid to be contacted relating to this patient" definition="The period during which this contact person or organization is valid to be contacted relating to this patient.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Patient.Link" retrievable="false" baseType="QICore.BackboneElement">
        <element name="other" elementType="QICore.Reference" description="The other patient or related person resource that the link refers to" definition="The other patient resource that the link refers to." comment="Referencing a RelatedPerson here removes the need to use a Person record to associate a Patient and RelatedPerson as the same individual." mustSupport="false"/>
        <element name="type" elementType="QICore.LinkType" target="%value.value" description="replaced-by | replaces | refer | seealso" definition="The type of link between this patient resource and another patient resource.">
            <binding name="LinkType" description="The type of link between this patient resource and another patient resource." strength="Required"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Patient.Telecom" retrievable="false">
        <baseTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="QICore" name="ContactPoint"/>
        <element name="telecom-preferred" elementType="QICore.preferred" target="%parent.telecom.extension[url='http://hl7.org/fhir/StructureDefinition/iso21090-preferred'].value.value" description="Preferred" definition="Flag denoting whether parent item is preferred - e.g., a preferred address or telephone number." mustSupport="false"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Practitioner" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-practitioner" label="QICore Practitioner" retrievable="true" baseType="QICore.DomainResource">
        <element name="identifier" description="(QI-Core) An identifier for the person as this agent" definition="An identifier that applies to this person in this role." comment="NPI must be supported as the identifier system in the US, Tax id is allowed, Local id is allowed in addition to another identifier supplied by a jurisdictional authority such as a practitioner's *Drug Enforcement Administration (DEA)* number." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="NPI" description="(QI-Core) An identifier for the person as this agent" definition="An identifier that applies to this person in this role." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
            <constraint name="us-core-16" severity="ERROR" message="NPI must be 10 digits">
                <expression language="text/fhirpath" expression="value.matches('^[0-9]{10}$')"/>
            </constraint>
            <constraint name="us-core-17" severity="ERROR" message="NPI check digit must be valid (Luhn algorithm check)">
                <expression language="text/fhirpath" expression="(((select(value.substring(0,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(1,1).toInteger())+(select(value.substring(2,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(3,1).toInteger())+(select(value.substring(4,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(5,1).toInteger())+(select(value.substring(6,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(7,1).toInteger())+(select(value.substring(8,1).toInteger()).select(iif($this&lt;5, $this*2, (($this*2)-9))))+(value.substring(9,1).toInteger()) + 24)mod 10=0)"/>
            </constraint>
        </element>
        <element name="ein" elementType="QICore.Identifier" description="(QI-Core) There is not a general Tax Identifier Numer (TIN) OID. There is an SSN, a PTIN, and an ITIN, but no TIN generally. So the only slice specified here is EIN, if consumers determine a need for an SSN, submit a comment to that effect." definition="An identifier that applies to this person in this role." comment="NPI must be supported as the identifier system in the US, Tax id is allowed, Local id is allowed in addition to another identifier supplied by a jurisdictional authority such as a practitioner's *Drug Enforcement Administration (DEA)* number." mustSupport="true"/>
        <element name="active" elementType="System.Boolean" target="%value.value" description="Whether this practitioner's record is in active use" definition="Whether this practitioner's record is in active use." comment="If the practitioner is not in use by one organization, then it should mark the period on the PractitonerRole with an end date (even if they are active) as they may be active in another role."/>
        <element name="name" description="The name(s) associated with the practitioner" definition="The name(s) associated with the practitioner." comment="The selection of the use property should ensure that there is a single usual name specified, and others use the nickname (alias), old, or other values as appropriate.  &#13;&#13;In general, select the value to be used in the ResourceReference.display based on this:&#13;&#13;1. There is more than 1 name&#13;2. Use = usual&#13;3. Period is current to the date of the usage&#13;4. Use = official&#13;5. Other order as decided by internal business rules." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.HumanName"/>
        </element>
        <element name="telecom" description="A contact detail for the practitioner (that apply to all roles)" definition="A contact detail for the practitioner, e.g. a telephone number or an email address." comment="Person may have multiple ways to be contacted with different uses or applicable periods.  May need to have options for contacting the person urgently and to help with identification.  These typically will have home numbers, or mobile numbers that are not role specific." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="address" description="Address(es) of the practitioner" definition="Address(es) of the practitioner" comment="The PractitionerRole does not have an address value on it, as it is expected that the location property be used for this purpose (which has an address)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Address"/>
        </element>
        <element name="gender" elementType="QICore.AdministrativeGender" target="%value.value" description="male | female | other | unknown" definition="Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.">
            <binding name="AdministrativeGender" description="The gender of a person used for administrative purposes." strength="Required"/>
        </element>
        <element name="birthDate" elementType="System.Date" target="%value.value" description="The date  on which the practitioner was born" definition="The date of birth for the practitioner."/>
        <element name="photo" description="Image of the person" definition="Image of the person.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Attachment"/>
        </element>
        <element name="qualification" description="Certification, licenses, or training pertaining to the provision of care" definition="The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.  For example, a medical license issued by a medical board authorizing the practitioner to practice medicine within a certian locality.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Practitioner.Qualification"/>
        </element>
        <element name="communication" target="FHIRHelpers.ToConcept(%value)" description="A language the practitioner can use in patient communication" definition="A language the practitioner can use in patient communication." comment="The structure aa-BB with this exact casing is one the most widely used notations for locale. However not all systems code this but instead have it as free text. Hence CodeableConcept instead of code as the data type.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Language" description="A human language." strength="Preferred"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Practitioner.Qualification" retrievable="false" baseType="QICore.BackboneElement">
        <element name="identifier" description="An identifier for this qualification for the practitioner" definition="An identifier that applies to this person's qualification in this role.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Coded representation of the qualification" definition="Coded representation of the qualification.">
            <binding name="Qualification" description="Specific qualification the practitioner has to provide a service." strength="Example"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Period during which the qualification is valid" definition="Period during which the qualification is valid.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="issuer" elementType="QICore.Reference" description="Organization that regulates and issues the qualification" definition="Organization that regulates and issues the qualification."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="PractitionerRole" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-practitionerrole" label="QICore PractitionerRole" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="(QI-Core) Business Identifiers that are specific to a role/location" definition="Business Identifiers that are specific to a role/location.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="active" elementType="System.Boolean" target="%value.value" description="(QI-Core) Whether this practitioner role record is in active use" definition="Whether this practitioner role record is in active use." comment="If this value is false, you may refer to the period to see when the role was in active use. If there is no period specified, no inference can be made about when it was active."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="(QI-Core) The period during which the practitioner is authorized to perform in these role(s)" definition="The period during which the person is authorized to act as a practitioner in these role(s) for the organization.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="practitioner" elementType="QICore.Reference" description="(QI-Core) Practitioner that is able to provide the defined services for the organization" definition="Practitioner that is able to provide the defined services for the organization." mustSupport="true"/>
        <element name="organization" elementType="QICore.Reference" description="(QI-Core) Organization where the roles are available" definition="The organization where the Practitioner performs the roles associated." mustSupport="true"/>
        <element name="code" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Roles which this practitioner may perform" definition="Roles which this practitioner is authorized to perform for the organization." comment="A person may have more than one role." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Indicates specific responsibility of an individual within the care team, such as Primary physician, Team coordinator, Caregiver, etc." strength="Extensible"/>
        </element>
        <element name="specialty" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Specific specialty of the practitioner" definition="Specific specialty of the practitioner." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Extensible"/>
        </element>
        <element name="location" description="(QI-Core) The location(s) at which this practitioner provides care" definition="The location(s) at which this practitioner provides care." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="healthcareService" description="The list of healthcare services that this worker provides for this role's Organization/Location(s)" definition="The list of healthcare services that this worker provides for this role's Organization/Location(s).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="telecom" description="(QI-Core) Contact details that are specific to the role/location/service" definition="Contact details that are specific to the role/location/service." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="availableTime" description="Times the Service Site is available" definition="A collection of times the practitioner is available or performing this role at the location and/or healthcareservice." comment="More detailed availability information may be provided in associated Schedule/Slot resources.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.PractitionerRole.AvailableTime"/>
        </element>
        <element name="notAvailable" description="Not available during this time due to provided reason" definition="The practitioner is not available or performing this role during this period of time due to the provided reason.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.PractitionerRole.NotAvailable"/>
        </element>
        <element name="availabilityExceptions" elementType="System.String" target="%value.value" description="Description of availability exceptions" definition="A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times."/>
        <element name="endpoint" description="(QI-Core) Technical endpoints providing access to services operated for the practitioner with this role" definition="Technical endpoints providing access to services operated for the practitioner with this role." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="practitioner"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="PractitionerRole.AvailableTime" retrievable="false" baseType="QICore.BackboneElement">
        <element name="daysOfWeek" target="%value.value" description="mon | tue | wed | thu | fri | sat | sun" definition="Indicates which days of the week are available between the start and end Times.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DaysOfWeek"/>
            <binding name="DaysOfWeek" description="The days of the week." strength="Required"/>
        </element>
        <element name="allDay" elementType="System.Boolean" target="%value.value" description="Always available? e.g. 24 hour service" definition="Is this always available? (hence times are irrelevant) e.g. 24 hour service."/>
        <element name="availableStartTime" elementType="System.Time" target="%value.value" description="Opening time of day (ignored if allDay = true)" definition="The opening time of day. Note: If the AllDay flag is set, then this time is ignored." comment="The timezone is expected to be for where this HealthcareService is provided at."/>
        <element name="availableEndTime" elementType="System.Time" target="%value.value" description="Closing time of day (ignored if allDay = true)" definition="The closing time of day. Note: If the AllDay flag is set, then this time is ignored." comment="The timezone is expected to be for where this HealthcareService is provided at."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="PractitionerRole.NotAvailable" retrievable="false" baseType="QICore.BackboneElement">
        <element name="description" elementType="System.String" target="%value.value" description="Reason presented to the user explaining why time not available" definition="The reason that can be presented to the user as to why this time is not available."/>
        <element name="during" target="FHIRHelpers.ToInterval(%value)" description="Service not available from this date" definition="Service is not available (seasonally or for a public holiday) from this date.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Procedure" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedure" label="QICore Procedure" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="recorded" elementType="QICore.NotDoneRecorded" target="%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-recorded'].value.value" description="(QI-Core) When the procedure was first captured in the subject's record" definition="The date the occurrence of the procedure was first captured in the record regardless of Procedure.status (potentially after the occurrence of the event)."/>
        <element name="identifier" description="External Identifiers for this procedure" definition="Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and Person resource instances might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="(QI-Core)(USCDI) A request for this procedure" definition="A reference to a resource that contains details of the request for this procedure." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular procedure is a component or step." comment="The MedicationAdministration resource has a partOf reference to Procedure, but this is not a circular reference.   For example, the anesthesia MedicationAdministration is part of the surgical Procedure (MedicationAdministration.partOf = Procedure).  For example, the procedure to insert the IV port for an IV medication administration is part of the medication administration (Procedure.partOf = MedicationAdministration).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) preparation | in-progress | ​on-hold​ | stopped​ | completed | entered-in-error​ | unknown​" definition="A code specifying the state of the procedure. Generally, this will be the in-progress or completed state." comment="The &quot;unknown&quot; code is not to be used to convey other statuses.  The &quot;unknown&quot; code should be used when one of the statuses applies, but the authoring system doesn't know the current state of the procedure.&#10;&#10;This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="Captures the reason for the current state of the procedure." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;not-done&quot;, &quot;suspended&quot; or &quot;aborted&quot;. The reason for performing the event at all is captured in reasonCode, not here.">
            <binding name="ProcedureNegationReason" description="A code that identifies the reason a procedure was not performed." strength="Example"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Classification of the procedure" definition="A code that classifies the procedure for searching, sorting and display purposes (e.g. &quot;Surgical Procedure&quot;).">
            <binding name="ProcedureCategory" description="A code that classifies a procedure for searching, sorting and display purposes." strength="Example"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Identification of the procedure" definition="The specific procedure that is performed. Use text if the exact nature of the procedure cannot be coded (e.g. &quot;Laparoscopic Appendectomy&quot;)." mustSupport="true">
            <binding description="Codes describing the type of  Procedure" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who the procedure was performed on" definition="The person, animal or group on which the procedure was performed." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this Procedure was created or performed or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter."/>
        <element name="performed" target="FHIRHelpers.ToValue(%value)" description="(USCDI) When the procedure was performed" definition="Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured." comment="Age is generally used when the patient reports an age at which the procedure was performed. Range is generally used when the patient reports an age range when the procedure was performed, such as sometime between 20-25 years old.  dateTime supports a range of precision due to some procedures being reported as past procedures that might not have millisecond precision while other procedures performed and documented during the encounter might have more precise UTC timestamps with timezone." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="recorder" elementType="QICore.Reference" description="Who recorded the procedure" definition="Individual who recorded the record and takes responsibility for its content."/>
        <element name="asserter" elementType="QICore.Reference" description="Person who asserts this procedure" definition="Individual who is making the procedure statement."/>
        <element name="performer" description="The people who performed the procedure" definition="Limited to &quot;real&quot; people rather than equipment.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Procedure.Performer"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where the procedure happened" definition="The location where the procedure actually happened.  E.g. a newborn at home, a tracheostomy at a restaurant."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Coded reason procedure performed" definition="The coded reason why the procedure was performed. This may be a coded entity of some type, or may simply be present as text." comment="Use Procedure.reasonCode when a code sufficiently describes the reason.  Use Procedure.reasonReference when referencing a resource, which allows more information to be conveyed, such as onset date. Procedure.reasonCode and Procedure.reasonReference are not meant to be duplicative.  For a single reason, either Procedure.reasonCode or Procedure.reasonReference can be used.  Procedure.reasonCode may be a summary code, or Procedure.reasonReference may be used to reference a very precise definition of the reason using Condition | Observation | Procedure | DiagnosticReport | DocumentReference.  Both Procedure.reasonCode and Procedure.reasonReference can be used if they are describing different reasons for the procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="A code that identifies the reason a procedure is required." strength="Preferred"/>
        </element>
        <element name="reasonReference" description="(QI-Core) The justification that the procedure was performed" definition="The justification of why the procedure was performed." comment="It is possible for a procedure to be a reason (such as C-Section) for another procedure (such as an epidural). Other examples include endoscopy for dilatation and biopsy (a combination of diagnostic and therapeutic use). &#10;Use Procedure.reasonCode when a code sufficiently describes the reason.  Use Procedure.reasonReference when referencing a resource, which allows more information to be conveyed, such as onset date. Procedure.reasonCode and Procedure.reasonReference are not meant to be duplicative.  For a single reason, either Procedure.reasonCode or Procedure.reasonReference can be used.  Procedure.reasonCode may be a summary code, or Procedure.reasonReference may be used to reference a very precise definition of the reason using Condition | Observation | Procedure | DiagnosticReport | DocumentReference.  Both Procedure.reasonCode and Procedure.reasonReference can be used if they are describing different reasons for the procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="bodySite" target="FHIRHelpers.ToConcept(%value)" description="Target body sites" definition="Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion." comment="If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [procedure-targetbodystructure](http://hl7.org/fhir/R4/extension-procedure-targetbodystructure.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="outcome" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The result of procedure" definition="The outcome of the procedure - did it resolve the reasons for the procedure being performed?" comment="If outcome contains narrative text only, it can be captured using the CodeableConcept.text.">
            <binding name="ProcedureOutcome" description="An outcome of a procedure - whether it was resolved or otherwise." strength="Example"/>
        </element>
        <element name="report" description="Any report resulting from the procedure" definition="This could be a histology result, pathology report, surgical report, etc." comment="There could potentially be multiple reports - e.g. if this was a procedure which took multiple biopsies resulting in a number of anatomical pathology reports.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="complication" target="FHIRHelpers.ToConcept(%value)" description="Complication following the procedure" definition="Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues." comment="If complications are only expressed by the narrative text, they can be captured using the CodeableConcept.text.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureComplication" description="Codes describing complications that resulted from a procedure." strength="Example"/>
        </element>
        <element name="complicationDetail" description="A condition that is a result of the procedure" definition="Any complications that occurred during the procedure, or in the immediate post-performance period.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="followUp" target="FHIRHelpers.ToConcept(%value)" description="Instructions for follow up" definition="If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureFollowUp" description="Specific follow up required for a procedure e.g. removal of sutures." strength="Example"/>
        </element>
        <element name="note" description="Additional information about the procedure" definition="Any other notes and comments about the procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="focalDevice" description="Manipulated, implanted, or removed device" definition="A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Procedure.FocalDevice"/>
        </element>
        <element name="usedReference" description="Items used during procedure" definition="Identifies medications, devices and any other substance used as part of the procedure." comment="For devices actually implanted or removed, use Procedure.device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="usedCode" target="FHIRHelpers.ToConcept(%value)" description="Coded items used during the procedure" definition="Identifies coded items that were used as part of the procedure." comment="For devices actually implanted or removed, use Procedure.device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureUsed" description="Codes describing items used during a procedure." strength="Example"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="actor"/>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
        <contextRelationship context="Patient" relatedKeyElement="actor"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="actor"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Procedure.FocalDevice" retrievable="false" baseType="QICore.BackboneElement">
        <element name="action" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Kind of change to device" definition="The kind of change that happened to the device during the procedure.">
            <binding name="DeviceActionKind" description="A kind of change that happened to the device during the procedure." strength="Preferred"/>
        </element>
        <element name="manipulated" elementType="QICore.Reference" description="Device that was changed" definition="The device that was manipulated (changed) during the procedure."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Procedure.Performer" retrievable="false" baseType="QICore.BackboneElement">
        <element name="function" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Type of performance" definition="Distinguishes the type of involvement of the performer in the procedure. For example, surgeon, anaesthetist, endoscopist.">
            <binding name="ProcedurePerformerRole" description="A code that identifies the role of a performer of the procedure." strength="Example"/>
        </element>
        <element name="actor" elementType="QICore.Reference" description="The reference to the practitioner" definition="The practitioner who was involved in the procedure."/>
        <element name="onBehalfOf" elementType="QICore.Reference" description="Organization the device or practitioner was acting for" definition="The organization the device or practitioner was acting on behalf of."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ProcedureNotDone" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-procedurenotdone" label="QICore Procedure Not Done" target="Procedure" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="recorded" elementType="QICore.NotDoneRecorded" target="%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-recorded'].value.value" description="(QI-Core) When the procedure was first captured in the subject's record" definition="The date the occurrence of the procedure was first captured in the record regardless of Procedure.status (potentially after the occurrence of the event)."/>
        <element name="identifier" description="External Identifiers for this procedure" definition="Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server." comment="This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and Person resource instances might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="(QI-Core)(USCDI) A request for this procedure" definition="A reference to a resource that contains details of the request for this procedure." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular procedure is a component or step." comment="The MedicationAdministration resource has a partOf reference to Procedure, but this is not a circular reference.   For example, the anesthesia MedicationAdministration is part of the surgical Procedure (MedicationAdministration.partOf = Procedure).  For example, the procedure to insert the IV port for an IV medication administration is part of the medication administration (Procedure.partOf = MedicationAdministration).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown" definition="A code specifying the state of the procedure. Generally, this will be the in-progress or completed state." comment="The &quot;unknown&quot; code is not to be used to convey other statuses.  The &quot;unknown&quot; code should be used when one of the statuses applies, but the authoring system doesn't know the current state of the procedure.&#10;&#10;This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Reason for the current status" definition="Captures the reason for the current state of the procedure." comment="This is generally only used for &quot;exception&quot; statuses such as &quot;not-done&quot;, &quot;suspended&quot; or &quot;aborted&quot;. The reason for performing the event at all is captured in reasonCode, not here.">
            <binding description="The reason the procedure was not done" strength="Extensible"/>
        </element>
        <element name="category" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Classification of the procedure" definition="A code that classifies the procedure for searching, sorting and display purposes (e.g. &quot;Surgical Procedure&quot;).">
            <binding name="ProcedureCategory" description="A code that classifies a procedure for searching, sorting and display purposes." strength="Example"/>
        </element>
        <element name="code" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.code.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(QI-Core)(USCDI) Identification of the procedure" definition="The specific procedure that is performed. Use text if the exact nature of the procedure cannot be coded (e.g. &quot;Laparoscopic Appendectomy&quot;)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding description="Codes describing the type of  Procedure" strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who the procedure was performed on" definition="The person, animal or group on which the procedure was performed." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this Procedure was created or performed or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter."/>
        <element name="performed" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) When the procedure was performed" definition="Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured." comment="Age is generally used when the patient reports an age at which the procedure was performed. Range is generally used when the patient reports an age range when the procedure was performed, such as sometime between 20-25 years old.  dateTime supports a range of precision due to some procedures being reported as past procedures that might not have millisecond precision while other procedures performed and documented during the encounter might have more precise UTC timestamps with timezone." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="recorder" elementType="QICore.Reference" description="Who recorded the procedure" definition="Individual who recorded the record and takes responsibility for its content."/>
        <element name="asserter" elementType="QICore.Reference" description="Person who asserts this procedure" definition="Individual who is making the procedure statement."/>
        <element name="performer" description="The people who performed the procedure" definition="Limited to &quot;real&quot; people rather than equipment.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Procedure.Performer"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where the procedure happened" definition="The location where the procedure actually happened.  E.g. a newborn at home, a tracheostomy at a restaurant."/>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="Coded reason procedure performed" definition="The coded reason why the procedure was performed. This may be a coded entity of some type, or may simply be present as text." comment="Use Procedure.reasonCode when a code sufficiently describes the reason.  Use Procedure.reasonReference when referencing a resource, which allows more information to be conveyed, such as onset date. Procedure.reasonCode and Procedure.reasonReference are not meant to be duplicative.  For a single reason, either Procedure.reasonCode or Procedure.reasonReference can be used.  Procedure.reasonCode may be a summary code, or Procedure.reasonReference may be used to reference a very precise definition of the reason using Condition | Observation | Procedure | DiagnosticReport | DocumentReference.  Both Procedure.reasonCode and Procedure.reasonReference can be used if they are describing different reasons for the procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureReason" description="A code that identifies the reason a procedure is  required." strength="Example"/>
        </element>
        <element name="reasonReference" description="The justification that the procedure was performed" definition="The justification of why the procedure was performed." comment="It is possible for a procedure to be a reason (such as C-Section) for another procedure (such as an epidural). Other examples include endoscopy for dilatation and biopsy (a combination of diagnostic and therapeutic use). &#10;Use Procedure.reasonCode when a code sufficiently describes the reason.  Use Procedure.reasonReference when referencing a resource, which allows more information to be conveyed, such as onset date. Procedure.reasonCode and Procedure.reasonReference are not meant to be duplicative.  For a single reason, either Procedure.reasonCode or Procedure.reasonReference can be used.  Procedure.reasonCode may be a summary code, or Procedure.reasonReference may be used to reference a very precise definition of the reason using Condition | Observation | Procedure | DiagnosticReport | DocumentReference.  Both Procedure.reasonCode and Procedure.reasonReference can be used if they are describing different reasons for the procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="bodySite" target="FHIRHelpers.ToConcept(%value)" description="Target body sites" definition="Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion." comment="If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [procedure-targetbodystructure](http://hl7.org/fhir/R4/extension-procedure-targetbodystructure.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="outcome" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The result of procedure" definition="The outcome of the procedure - did it resolve the reasons for the procedure being performed?" comment="If outcome contains narrative text only, it can be captured using the CodeableConcept.text.">
            <binding name="ProcedureOutcome" description="An outcome of a procedure - whether it was resolved or otherwise." strength="Example"/>
        </element>
        <element name="report" description="Any report resulting from the procedure" definition="This could be a histology result, pathology report, surgical report, etc." comment="There could potentially be multiple reports - e.g. if this was a procedure which took multiple biopsies resulting in a number of anatomical pathology reports.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="complication" target="FHIRHelpers.ToConcept(%value)" description="Complication following the procedure" definition="Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues." comment="If complications are only expressed by the narrative text, they can be captured using the CodeableConcept.text.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureComplication" description="Codes describing complications that resulted from a procedure." strength="Example"/>
        </element>
        <element name="complicationDetail" description="A condition that is a result of the procedure" definition="Any complications that occurred during the procedure, or in the immediate post-performance period.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="followUp" target="FHIRHelpers.ToConcept(%value)" description="Instructions for follow up" definition="If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureFollowUp" description="Specific follow up required for a procedure e.g. removal of sutures." strength="Example"/>
        </element>
        <element name="note" description="Additional information about the procedure" definition="Any other notes and comments about the procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="focalDevice" description="Manipulated, implanted, or removed device" definition="A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Procedure.FocalDevice"/>
        </element>
        <element name="usedReference" description="Items used during procedure" definition="Identifies medications, devices and any other substance used as part of the procedure." comment="For devices actually implanted or removed, use Procedure.device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="usedCode" target="FHIRHelpers.ToConcept(%value)" description="Coded items used during the procedure" definition="Identifies coded items that were used as part of the procedure." comment="For devices actually implanted or removed, use Procedure.device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ProcedureUsed" description="Codes describing items used during a procedure." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="PublicationStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="QuantityComparator" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Questionnaire" identifier="http://hl7.org/fhir/StructureDefinition/Questionnaire" label="Questionnaire" retrievable="true" primaryCodePath="name" baseType="QICore.DomainResource">
        <element name="url" elementType="System.String" target="%value.value" description="Canonical identifier for this questionnaire, represented as a URI (globally unique)" definition="An absolute URI that is used to identify this questionnaire when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this questionnaire is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the questionnaire is stored on different servers." comment="The name of the referenced questionnaire can be conveyed using the http://hl7.org/fhir/StructureDefinition/display extension."/>
        <element name="identifier" description="Additional identifier for the questionnaire" definition="A formal identifier that is used to identify this questionnaire when it is represented in other formats, or referenced in a specification, model, design or an instance." comment="Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this questionnaire outside of FHIR, where it is not possible to use the logical URI.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="version" elementType="System.String" target="%value.value" description="Business version of the questionnaire" definition="The identifier that is used to identify this version of the questionnaire when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the questionnaire author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence." comment="There may be different questionnaire instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the questionnaire with the format [url]|[version]."/>
        <element name="name" elementType="System.String" target="%value.value" description="Name for this questionnaire (computer friendly)" definition="A natural language name identifying the questionnaire. This name should be usable as an identifier for the module by machine processing applications such as code generation." comment="The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly."/>
        <element name="title" elementType="System.String" target="%value.value" description="Name for this questionnaire (human friendly)" definition="A short, descriptive, user-friendly title for the questionnaire." comment="This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc."/>
        <element name="derivedFrom" target="%value.value" description="Instantiates protocol or definition" definition="The URL of a Questionnaire that this Questionnaire is based on.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="status" elementType="QICore.PublicationStatus" target="%value.value" description="draft | active | retired | unknown" definition="The status of this questionnaire. Enables tracking the life-cycle of the content." comment="Allows filtering of questionnaires that are appropriate for use versus not.">
            <binding name="PublicationStatus" description="The lifecycle status of an artifact." strength="Required"/>
        </element>
        <element name="experimental" elementType="System.Boolean" target="%value.value" description="For testing purposes, not real usage" definition="A Boolean value to indicate that this questionnaire is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage." comment="Allows filtering of questionnaires that are appropriate for use versus not."/>
        <element name="subjectType" target="%value.value" description="Resource that can be subject of QuestionnaireResponse" definition="The types of subjects that can be the subject of responses created for the questionnaire." comment="If none are specified, then the subject is unlimited.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ResourceType"/>
            <binding name="ResourceType" description="One of the resource types defined as part of this version of FHIR." strength="Required"/>
        </element>
        <element name="date" elementType="System.DateTime" target="%value.value" description="Date last changed" definition="The date  (and optionally time) when the questionnaire was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the questionnaire changes." comment="Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the questionnaire. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource."/>
        <element name="publisher" elementType="System.String" target="%value.value" description="Name of the publisher (organization or individual)" definition="The name of the organization or individual that published the questionnaire." comment="Usually an organization but may be an individual. The publisher (or steward) of the questionnaire is the organization or individual primarily responsible for the maintenance and upkeep of the questionnaire. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the questionnaire. This item SHOULD be populated unless the information is available from context."/>
        <element name="contact" description="Contact details for the publisher" definition="Contact details to assist a user in finding and communicating with the publisher." comment="May be a web site, an email address, a telephone number, etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactDetail"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Natural language description of the questionnaire" definition="A free text natural language description of the questionnaire from a consumer's perspective." comment="This description can be used to capture details such as why the questionnaire was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the questionnaire as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the questionnaire is presumed to be the predominant language in the place the questionnaire was created)."/>
        <element name="useContext" description="The context that the content is intended to support" definition="The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate questionnaire instances." comment="When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.UsageContext"/>
        </element>
        <element name="jurisdiction" target="FHIRHelpers.ToConcept(%value)" description="Intended jurisdiction for questionnaire (if applicable)" definition="A legal or geographic region in which the questionnaire is intended to be used." comment="It may be possible for the questionnaire to be used in jurisdictions other than those for which it was originally designed or intended.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="Jurisdiction" description="Countries and regions within which this artifact is targeted for use." strength="Extensible"/>
        </element>
        <element name="purpose" elementType="System.String" target="%value.value" description="Why this questionnaire is defined" definition="Explanation of why this questionnaire is needed and why it has been designed as it has." comment="This element does not describe the usage of the questionnaire. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this questionnaire."/>
        <element name="copyright" elementType="System.String" target="%value.value" description="Use and/or publishing restrictions" definition="A copyright statement relating to the questionnaire and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the questionnaire."/>
        <element name="approvalDate" elementType="System.Date" target="%value.value" description="When the questionnaire was approved by publisher" definition="The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage." comment="The 'date' element may be more recent than the approval date because of minor changes or editorial corrections."/>
        <element name="lastReviewDate" elementType="System.Date" target="%value.value" description="When the questionnaire was last reviewed" definition="The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date." comment="If specified, this date follows the original approval date."/>
        <element name="effectivePeriod" target="FHIRHelpers.ToInterval(%value)" description="When the questionnaire is expected to be used" definition="The period during which the questionnaire content was or is planned to be in active use." comment="The effective period for a questionnaire  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 might be published in 2015.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="code" target="FHIRHelpers.ToCode(%value)" description="Concept that represents the overall questionnaire" definition="An identifier for this question or group of questions in a particular terminology such as LOINC.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
            <binding name="QuestionnaireConcept" description="Codes for questionnaires, groups and individual questions." strength="Example"/>
        </element>
        <element name="item" description="Questions and sections within the Questionnaire" definition="A particular question, question grouping or display text that is part of the questionnaire." comment="The content of the questionnaire is constructed from an ordered, hierarchical collection of items.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Questionnaire.Item"/>
            <constraint name="que-1" severity="ERROR" message="Group items must have nested items, display items cannot have nested items">
                <expression language="text/fhirpath" expression="(type='group' implies item.empty().not()) and (type.trace('type')='display' implies item.trace('item').empty())"/>
            </constraint>
            <constraint name="que-3" severity="ERROR" message="Display items cannot have a &quot;code&quot; asserted">
                <expression language="text/fhirpath" expression="type!='display' or code.empty()"/>
            </constraint>
            <constraint name="que-4" severity="ERROR" message="A question cannot have both answerOption and answerValueSet">
                <expression language="text/fhirpath" expression="answerOption.empty() or answerValueSet.empty()"/>
            </constraint>
            <constraint name="que-5" severity="ERROR" message="Only 'choice' and 'open-choice' items can have answerValueSet">
                <expression language="text/fhirpath" expression="(type ='choice' or type = 'open-choice' or type = 'decimal' or type = 'integer' or type = 'date' or type = 'dateTime' or type = 'time' or type = 'string' or type = 'quantity') or (answerValueSet.empty() and answerOption.empty())"/>
            </constraint>
            <constraint name="que-6" severity="ERROR" message="Required and repeat aren't permitted for display items">
                <expression language="text/fhirpath" expression="type!='display' or (required.empty() and repeats.empty())"/>
            </constraint>
            <constraint name="que-8" severity="ERROR" message="Initial values can't be specified for groups or display items">
                <expression language="text/fhirpath" expression="(type!='group' and type!='display') or initial.empty()"/>
            </constraint>
            <constraint name="que-9" severity="ERROR" message="Read-only can't be specified for &quot;display&quot; items">
                <expression language="text/fhirpath" expression="type!='display' or readOnly.empty()"/>
            </constraint>
            <constraint name="que-10" severity="ERROR" message="Maximum length can only be declared for simple question types">
                <expression language="text/fhirpath" expression="(type in ('boolean' | 'decimal' | 'integer' | 'string' | 'text' | 'url' | 'open-choice')) or maxLength.empty()"/>
            </constraint>
            <constraint name="que-11" severity="ERROR" message="If one or more answerOption is present, initial[x] must be missing">
                <expression language="text/fhirpath" expression="answerOption.empty() or initial.empty()"/>
            </constraint>
            <constraint name="que-12" severity="ERROR" message="If there are more than one enableWhen, enableBehavior must be specified">
                <expression language="text/fhirpath" expression="enableWhen.count() &gt; 2 implies enableBehavior.exists()"/>
            </constraint>
            <constraint name="que-13" severity="ERROR" message="Can only have multiple initial values for repeating items">
                <expression language="text/fhirpath" expression="repeats=true or initial.count() &lt;= 1"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Questionnaire.Item" retrievable="false" baseType="QICore.BackboneElement">
        <element name="linkId" elementType="System.String" target="%value.value" description="Unique id for item in questionnaire" definition="An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource." comment="This ''can'' be a meaningful identifier (e.g. a LOINC code) but is not intended to have any meaning.  GUIDs or sequential numbers are appropriate here."/>
        <element name="definition" elementType="System.String" target="%value.value" description="ElementDefinition - details for the item" definition="This element is a URI that refers to an [ElementDefinition](elementdefinition.html) that provides information about this item, including information that might otherwise be included in the instance of the Questionnaire resource. A detailed description of the construction of the URI is shown in Comments, below. If this element is present then the following element values MAY be derived from the Element Definition if the corresponding elements of this Questionnaire resource instance have no value:&#10;&#10;* code (ElementDefinition.code) &#10;* type (ElementDefinition.type) &#10;* required (ElementDefinition.min) &#10;* repeats (ElementDefinition.max) &#10;* maxLength (ElementDefinition.maxLength) &#10;* answerValueSet (ElementDefinition.binding)&#10;* options (ElementDefinition.binding)." comment="The uri refers to an ElementDefinition in a [StructureDefinition](structuredefinition.html#) and always starts with the [canonical URL](references.html#canonical) for the target resource. When referring to a StructureDefinition, a fragment identifier is used to specify the element definition by its id [Element.id](element-definitions.html#Element.id). E.g. http://hl7.org/fhir/StructureDefinition/Observation#Observation.value[x]. In the absence of a fragment identifier, the first/root element definition in the target is the matching element definition."/>
        <element name="code" target="FHIRHelpers.ToCode(%value)" description="Corresponding concept for this item in a terminology" definition="A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers)." comment="The value may come from the ElementDefinition referred to by .definition.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
            <binding name="QuestionnaireConcept" description="Codes for questionnaires, groups and individual questions." strength="Example"/>
        </element>
        <element name="prefix" elementType="System.String" target="%value.value" description="E.g. &quot;1(a)&quot;, &quot;2.5.3&quot;" definition="A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire." comment="These are generally unique within a questionnaire, though this is not guaranteed. Some questionnaires may have multiple questions with the same label with logic to control which gets exposed.  Typically, these won't be used for &quot;display&quot; items, though such use is not prohibited.  Systems SHOULD NOT generate their own prefixes if prefixes are defined for any items within a Questionnaire."/>
        <element name="text" elementType="System.String" target="%value.value" description="Primary text for the item" definition="The name of a section, the text of a question or text content for a display item." comment="When using this element to represent the name of a section, use group type item and also make sure to limit the text element to a short string suitable for display as a section heading.  Group item instructions should be included as a display type item within the group."/>
        <element name="type" elementType="QICore.QuestionnaireItemType" target="%value.value" description="group | display | boolean | decimal | integer | date | dateTime +" definition="The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, coded choice, etc.)." comment="Additional constraints on the type of answer can be conveyed by extensions. The value may come from the ElementDefinition referred to by .definition.">
            <binding name="QuestionnaireItemType" description="Distinguishes groups from questions and display text and indicates data type for questions." strength="Required"/>
        </element>
        <element name="enableWhen" description="Only allow data when" definition="A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true." comment="If multiple repetitions of this extension are present, the item should be enabled when the condition for *any* of the repetitions is true.  I.e. treat &quot;enableWhen&quot;s as being joined by an &quot;or&quot; clause.  This element is a modifier because if enableWhen is present for an item, &quot;required&quot; is ignored unless one of the enableWhen conditions is met. When an item is disabled, all of its descendants are disabled, regardless of what their own enableWhen logic might evaluate to.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Questionnaire.Item.EnableWhen"/>
            <constraint name="que-7" severity="ERROR" message="If the operator is 'exists', the value must be a boolean">
                <expression language="text/fhirpath" expression="operator = 'exists' implies (answer is Boolean)"/>
            </constraint>
        </element>
        <element name="enableBehavior" elementType="QICore.EnableWhenBehavior" target="%value.value" description="all | any" definition="Controls how multiple enableWhen values are interpreted -  whether all or any must be true." comment="This element must be specified if more than one enableWhen value is provided.">
            <binding name="EnableWhenBehavior" description="Controls how multiple enableWhen values are interpreted -  whether all or any must be true." strength="Required"/>
        </element>
        <element name="required" elementType="System.Boolean" target="%value.value" description="Whether the item must be included in data results" definition="An indication, if true, that the item must be present in a &quot;completed&quot; QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire." comment="Questionnaire.item.required only has meaning for elements that are conditionally enabled with enableWhen if the condition evaluates to true.  If an item that contains other items is marked as required, that does not automatically make the contained elements required (though required groups must contain at least one child element). The value may come from the ElementDefinition referred to by .definition."/>
        <element name="repeats" elementType="System.Boolean" target="%value.value" description="Whether the item may repeat" definition="An indication, if true, that the item may occur multiple times in the response, collecting multiple answers for questions or multiple sets of answers for groups." comment="If a question is marked as repeats=true, then multiple answers can be provided for the question in the corresponding QuestionnaireResponse.  When rendering the questionnaire, it is up to the rendering software whether to render the question text for each answer repetition (i.e. &quot;repeat the question&quot;) or to simply allow entry/selection of multiple answers for the question (repeat the answers).  Which is most appropriate visually may depend on the type of answer as well as whether there are nested items.&#10;&#10;The resulting QuestionnaireResponse will be populated the same way regardless of rendering - one 'question' item with multiple answer values.&#10;&#10; The value may come from the ElementDefinition referred to by .definition."/>
        <element name="readOnly" elementType="System.Boolean" target="%value.value" description="Don't allow human editing" definition="An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire." comment="The value of readOnly elements can be established by asserting  extensions for defaultValues, linkages that support pre-population and/or extensions that support calculation based on other answers."/>
        <element name="maxLength" elementType="System.Integer" target="%value.value" description="No more than this many characters" definition="The maximum number of characters that are permitted in the answer to be considered a &quot;valid&quot; QuestionnaireResponse." comment="For base64binary, reflects the number of characters representing the encoded data, not the number of bytes of the binary data. The value may come from the ElementDefinition referred to by .definition."/>
        <element name="answerValueSet" elementType="System.String" target="%value.value" description="Valueset containing permitted answers" definition="A reference to a value set containing a list of codes representing permitted answers for a &quot;choice&quot; or &quot;open-choice&quot; question." comment="LOINC defines many useful value sets for questionnaire responses. See [LOINC Answer Lists](loinc.html#alist). The value may come from the ElementDefinition referred to by .definition."/>
        <element name="answerOption" description="Permitted answer" definition="One of the permitted answers for a &quot;choice&quot; or &quot;open-choice&quot; question." comment="This element can be used when the value set machinery of answerValueSet is deemed too cumbersome or when there's a need to capture possible answers that are not codes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Questionnaire.Item.AnswerOption"/>
        </element>
        <element name="initial" description="Initial value(s) when item is first rendered" definition="One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input." comment="The user is allowed to change the value and override the default (unless marked as read-only). If the user doesn't change the value, then this initial value will be persisted when the QuestionnaireResponse is initially created.  Note that initial values can influence results.  The data type of initial[x] must agree with the item.type, and only repeating items can have more then one initial value.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Questionnaire.Item.Initial"/>
        </element>
        <element name="item" description="Nested questionnaire items" definition="Text, questions and other groups to be nested beneath a question or group." comment="There is no specified limit to the depth of nesting.  However, Questionnaire authors are encouraged to consider the impact on the user and user interface of overly deep nesting.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier">
                <elementTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="QICore" name="Questionnaire.Item"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Questionnaire.Item.AnswerOption" retrievable="false" baseType="QICore.BackboneElement">
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Answer value" definition="A potential answer that's allowed as the answer to this question." comment="The data type of the value must agree with the item.type.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Code"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="QuestionnaireQuestionOption" description="Allowed values to answer questions." strength="Example"/>
        </element>
        <element name="initialSelected" elementType="System.Boolean" target="%value.value" description="Whether option is selected by default" definition="Indicates whether the answer value is selected when the list of possible answers is initially shown." comment="Use this instead of initial[v] if answerValueSet is present."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Questionnaire.Item.EnableWhen" retrievable="false" baseType="QICore.BackboneElement">
        <element name="question" elementType="System.String" target="%value.value" description="Question that determines whether item is enabled" definition="The linkId for the question whose answer (or lack of answer) governs whether this item is enabled." comment="If multiple question occurrences are present for the same question (same linkId), then this refers to the nearest question occurrence reachable by tracing first the &quot;ancestor&quot; axis and then the &quot;preceding&quot; axis and then the &quot;following&quot; axis."/>
        <element name="operator" elementType="QICore.QuestionnaireItemOperator" target="%value.value" description="exists | = | != | &gt; | &lt; | &gt;= | &lt;=" definition="Specifies the criteria by which the question is enabled.">
            <binding name="QuestionnaireItemOperator" description="The criteria by which a question is enabled." strength="Required"/>
        </element>
        <element name="answer" target="FHIRHelpers.ToValue(%value)" description="Value for question comparison based on operator" definition="A value that the referenced question is tested using the specified operator in order for the item to be enabled.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Code"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="QuestionnaireQuestionOption3" description="Allowed values to answer questions." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Questionnaire.Item.Initial" retrievable="false" baseType="QICore.BackboneElement">
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Actual value for initializing the question" definition="The actual value to for an initial answer." comment="The type of the initial value must be consistent with the type of the item.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Attachment"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Code"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="QuestionnaireQuestionOption2" description="Allowed values to answer questions." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="QuestionnaireItemOperator" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="QuestionnaireItemType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="QuestionnaireResponse" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-questionnaireresponse" label="QICore QuestionnaireResponse" retrievable="true" baseType="QICore.DomainResource">
        <element name="signature" target="%parent.extension[url='http://hl7.org/fhir/StructureDefinition/questionnaireresponse-signature']" description="A signature attesting to the content" definition="Represents a wet or electronic signature for either the form overall or for the question or item it's associated with." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.signature"/>
        </element>
        <element name="completionMode" elementType="QICore.completionMode" target="FHIRHelpers.ToConcept(%parent.extension[url='http://hl7.org/fhir/StructureDefinition/questionnaireresponse-completionMode'].value)" description="E.g. Verbal, written, electronic" definition="Indicates how the individual completing the QuestionnaireResponse provided their responses." mustSupport="false"/>
        <element name="identifier" elementType="QICore.Identifier" description="Unique id for this set of answers" definition="A business identifier assigned to a particular completed (or partially completed) questionnaire." mustSupport="true"/>
        <element name="basedOn" description="Request fulfilled by this QuestionnaireResponse" definition="The order, proposal or plan that is fulfilled in whole or in part by this QuestionnaireResponse.  For example, a ServiceRequest seeking an intake assessment or a decision support recommendation to assess for post-partum depression." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of this action" definition="A procedure or observation that this questionnaire was performed as part of the execution of.  For example, the surgery a checklist was executed as part of." comment="Composition of questionnaire responses will be handled by the parent questionnaire having answers that reference the child questionnaire.  For relationships to referrals, and other types of requests, use basedOn." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="questionnaire" elementType="System.String" target="%value.value" description="(USCDI) Form being answered" definition="The Questionnaire that defines and organizes the questions for which answers are being provided." comment="For SDC, this SHALL be the version-specific URL of the form as hosted on the Form Manager." mustSupport="true"/>
        <element name="status" elementType="QICore.QuestionnaireResponseStatus" target="%value.value" description="(USCDI) in-progress | completed | amended | entered-in-error | stopped" definition="The position of the questionnaire response within its overall lifecycle." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="QuestionnaireResponseStatus" description="Lifecycle status of the questionnaire response." strength="Required"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) The subject of the questions" definition="The subject of the questionnaire response.  This could be a patient, organization, practitioner, device, etc.  This is who/what the answers apply to, but is not necessarily the source of information." comment="-" mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter created as part of" definition="The Encounter during which this questionnaire response was created or to which the creation of this record is tightly associated." comment="This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter. A questionnaire that was initiated during an encounter but not fully completed during the encounter would still generally be associated with the encounter." mustSupport="false"/>
        <element name="authored" elementType="System.DateTime" target="%value.value" description="(USCDI) Date the answers were gathered" definition="Identifies when this version of the answer set was created.  Changes whenever the answers are updated." comment="May be different from the lastUpdateTime of the resource itself, because that reflects when the data was known to the server, not when the data was captured.&#10;&#10;This element is optional to allow for systems that might not know the value, however it SHOULD be populated if possible." mustSupport="true"/>
        <element name="author" elementType="QICore.Reference" description="(QI-Core)(USCDI) Person who received and recorded the answers" definition="Person who received the answers to the questions in the QuestionnaireResponse and recorded them in the system." comment="Mapping a subject's answers to multiple choice options and determining what to put in the textual answer is a matter of interpretation.  Authoring by device would indicate that some portion of the questionnaire had been auto-populated." mustSupport="true"/>
        <element name="source" elementType="QICore.Reference" description="The person who answered the questions" definition="The person who answered the questions about the subject." comment="If not specified, no inference can be made about who provided the data." mustSupport="false"/>
        <element name="item" description="(QI-Core)(USCDI) Groups and questions" definition="A group or question item from the original questionnaire for which answers are provided." comment="Groups cannot have answers and therefore must nest directly within item. When dealing with questions, nesting must occur within each answer because some questions may have multiple answers (and the nesting occurs for each answer)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.QuestionnaireResponse.Item"/>
            <constraint name="qrs-1" severity="ERROR" message="Nested item can't be beneath both item and answer">
                <expression language="text/fhirpath" expression="(answer.exists() and item.exists()).not()"/>
            </constraint>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="author"/>
        <contextRelationship context="Practitioner" relatedKeyElement="source"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Patient" relatedKeyElement="author"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="Device" relatedKeyElement="author"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="author"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="source"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="QuestionnaireResponse.Item" retrievable="false" baseType="QICore.BackboneElement">
        <element name="linkId" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) Pointer to specific item from Questionnaire" definition="The item from the Questionnaire that corresponds to this item in the QuestionnaireResponse resource." mustSupport="true"/>
        <element name="definition" elementType="System.String" target="%value.value" description="ElementDefinition - details for the item" definition="A reference to an [ElementDefinition](http://hl7.org/fhir/R4/elementdefinition.html) that provides the details for the item." comment="The ElementDefinition must be in a [StructureDefinition](http://hl7.org/fhir/R4/structuredefinition.html#), and must have a fragment identifier that identifies the specific data element by its id (Element.id). E.g. http://hl7.org/fhir/StructureDefinition/Observation#Observation.value[x].&#10;&#10;There is no need for this element if the item pointed to by the linkId has a definition listed."/>
        <element name="text" elementType="System.String" target="%value.value" description="Name for group or question text" definition="Text that is displayed above the contents of the group or as the text of the question being answered." mustSupport="true"/>
        <element name="answer" description="The response(s) to the question" definition="The respondent's answer(s) to the question." comment="The value is nested because we cannot have a repeating structure that has variable type." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.QuestionnaireResponse.Item.Answer"/>
        </element>
        <element name="item" description="Nested questionnaire response items" definition="Questions or sub-groups nested beneath a question or group." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.QuestionnaireResponse.Item"/>
        </element>
        <element name="itemMedia" target="%parent.item.extension[url='null']" description="Media to display" definition="Media to render/make available as an accompaniment to the question being asked" mustSupport="false"/>
        <element name="ItemSignature" target="%parent.item.extension[url='http://hl7.org/fhir/StructureDefinition/questionnaireresponse-signature']" description="A signature attesting to the content" definition="Represents a wet or electronic signature for either the form overall or for the question or item it's associated with." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.signature"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="QuestionnaireResponse.Item.Answer" retrievable="false" baseType="QICore.BackboneElement">
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Single-valued answer to the question" definition="The answer (or one of the answers) provided by the respondent to the question." comment="More complex structures (Attachment, Resource and Quantity) will typically be limited to electronic forms that can expose an appropriate user interface to capture the components and enforce the constraints of a complex data type.  Additional complex types can be introduced through extensions. Must match the datatype specified by Questionnaire.item.type in the corresponding Questionnaire." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Code"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
            <binding name="QuestionnaireAnswer" description="Code indicating the response provided for a question." strength="Example"/>
        </element>
        <element name="item" description="Nested groups and questions" definition="Nested groups and/or questions found within this particular answer." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.QuestionnaireResponse.Item"/>
        </element>
        <element name="itemAnswerMedia" target="%parent.answer.extension[url='null']" description="Answer Media to display" definition="Media to render/make available as an accompaniment to a specific answer option" mustSupport="false"/>
        <element name="ordinalValue" elementType="QICore.Ordinal Value" target="%parent.answer.extension[url='http://hl7.org/fhir/StructureDefinition/ordinalValue'].value.value" description="Assigned Ordinal Value" definition="A numeric value that allows the comparison (less than, greater than) or other numerical &#10;manipulation of a concept (e.g. Adding up components of a score). Scores are usually a whole number, but occasionally decimals are encountered in scores." comment="Scores are commonly encountered in various clinical assessment scales. Assigning a value to a concept should generally be done in a formal code system that defines the value, or in an applicable value set for the concept, but some concepts do not have a formal definition (or are not even represented as a concept formally, especially in [Questionnaires](http://hl7.org/fhir/R4/questionnaire.html), &#10;so this extension is allowed to appear ouside those preferred contexts.  Scores may even be assigned arbitrarily during use (hence, on Coding). The value may be constrained to an integer in some contexts of use. Todo: Scoring algorithms may also be defined directly, but how this is done is not yet defined." mustSupport="false"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="QuestionnaireResponseStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Reference" identifier="http://hl7.org/fhir/StructureDefinition/Reference" label="Reference" retrievable="false" baseType="QICore.Element">
        <element name="reference" elementType="System.String" target="%value.value" description="Literal reference, Relative, internal or absolute URL" definition="A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources." comment="Using absolute URLs provides a stable scalable approach suitable for a cloud/web context, while using relative/logical references provides a flexible approach suitable for use when trading across closed eco-system boundaries.   Absolute URLs do not need to point to a FHIR RESTful server, though this is the preferred approach. If the URL conforms to the structure &quot;/[type]/[id]&quot; then it should be assumed that the reference is to a FHIR RESTful server."/>
        <element name="type" elementType="System.String" target="%value.value" description="Type the reference refers to (e.g. &quot;Patient&quot;)" definition="The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.&#10;&#10;The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. &quot;Patient&quot; is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources)." comment="This element is used to indicate the type of  the target of the reference. This may be used which ever of the other elements are populated (or not). In some cases, the type of the target may be determined by inspection of the reference (e.g. a RESTful URL) or by resolving the target of the reference; if both the type and a reference is provided, the reference SHALL resolve to a resource of the same type as that specified.">
            <binding name="FHIRResourceTypeExt" description="Aa resource (or, for logical models, the URI of the logical model)." strength="Extensible"/>
        </element>
        <element name="identifier" elementType="QICore.Identifier" description="Logical reference, when literal reference is not known" definition="An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference." comment="When an identifier is provided in place of a reference, any system processing the reference will only be able to resolve the identifier to a reference if it understands the business context in which the identifier is used. Sometimes this is global (e.g. a national identifier) but often it is not. For this reason, none of the useful mechanisms described for working with references (e.g. chaining, includes) are possible, nor should servers be expected to be able resolve the reference. Servers may accept an identifier based reference untouched, resolve it, and/or reject it - see CapabilityStatement.rest.resource.referencePolicy. &#10;&#10;When both an identifier and a literal reference are provided, the literal reference is preferred. Applications processing the resource are allowed - but not required - to check that the identifier matches the literal reference&#10;&#10;Applications converting a logical reference to a literal reference may choose to leave the logical reference present, or remove it.&#10;&#10;Reference is intended to point to a structure that can potentially be expressed as a FHIR resource, though there is no need for it to exist as an actual FHIR resource instance - except in as much as an application wishes to actual find the target of the reference. The content referred to be the identifier must meet the logical constraints implied by any limitations on what resource types are permitted for the reference.  For example, it would not be legitimate to send the identifier for a drug prescription if the type were Reference(Observation|DiagnosticReport).  One of the use-cases for Reference.identifier is the situation where no FHIR representation exists (where the type is Reference (Any)."/>
        <element name="display" elementType="System.String" target="%value.value" description="Text alternative for the resource" definition="Plain text narrative that identifies the resource in addition to the resource reference." comment="This is generally not the same as the Resource.text of the referenced resource.  The purpose is to identify what's being referenced, not to fully describe it."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="RelatedArtifact" identifier="http://hl7.org/fhir/StructureDefinition/RelatedArtifact" label="RelatedArtifact" retrievable="false" baseType="QICore.Element">
        <element name="type" elementType="QICore.RelatedArtifactType" target="%value.value" description="documentation | justification | citation | predecessor | successor | derived-from | depends-on | composed-of" definition="The type of relationship to the related artifact.">
            <binding name="RelatedArtifactType" description="The type of relationship to the related artifact." strength="Required"/>
        </element>
        <element name="label" elementType="System.String" target="%value.value" description="Short label" definition="A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index."/>
        <element name="display" elementType="System.String" target="%value.value" description="Brief description of the related artifact" definition="A brief description of the document or knowledge resource being referenced, suitable for display to a consumer."/>
        <element name="citation" elementType="System.String" target="%value.value" description="Bibliographic citation for the artifact" definition="A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format." comment="Additional structured information about citations should be captured as extensions."/>
        <element name="url" elementType="System.String" target="%value.value" description="Where the artifact can be accessed" definition="A url for the artifact that can be followed to access the actual content." comment="If a document or resource element is present, this element SHALL NOT be provided (use the url or reference in the Attachment or resource reference)."/>
        <element name="document" elementType="QICore.Attachment" description="What document is being referenced" definition="The document being referenced, represented as an attachment. This is exclusive with the resource element."/>
        <element name="resource" elementType="System.String" target="%value.value" description="What resource is being referenced" definition="The related resource, such as a library, value set, profile, or other knowledge resource." comment="If the type is predecessor, this is a reference to the succeeding knowledge resource. If the type is successor, this is a reference to the prior knowledge resource."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="RelatedArtifactType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="RelatedPerson" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-relatedperson" label="QICore RelatedPerson" retrievable="true" primaryCodePath="relationship" baseType="QICore.DomainResource">
        <element name="identifier" description="A human identifier for this person" definition="Identifier for a person within a particular scope.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="active" elementType="System.Boolean" target="%value.value" description="(QI-Core)(USCDI) Whether this related person's record is in active use" definition="Whether this related person record is in active use." comment="This element is labeled as a modifier because it may be used to mark that the resource was created in error." mustSupport="true"/>
        <element name="patient" elementType="QICore.Reference" description="(QI-Core)(USCDI) The patient this person is related to" definition="The patient this person is related to." mustSupport="true"/>
        <element name="relationship" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) The nature of the relationship" definition="The nature of the relationship between a patient and the related person." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="PatientRelationshipType" description="The nature of the relationship between a patient and the related person." strength="Preferred"/>
        </element>
        <element name="name" description="(QI-Core)(USCDI) A name associated with the person" definition="A name associated with the person." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.HumanName"/>
        </element>
        <element name="telecom" description="(QI-Core) A contact detail for the person" definition="A contact detail for the person, e.g. a telephone number or an email address." comment="Person may have multiple ways to be contacted with different uses or applicable periods.  May need to have options for contacting the person urgently, and also to help with identification." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="gender" elementType="QICore.AdministrativeGender" target="%value.value" description="male | female | other | unknown" definition="Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.">
            <binding name="AdministrativeGender" description="The gender of a person used for administrative purposes." strength="Required"/>
        </element>
        <element name="birthDate" elementType="System.Date" target="%value.value" description="The date on which the related person was born" definition="The date on which the related person was born."/>
        <element name="address" description="(QI-Core) Address where the related person can be contacted or visited" definition="Address where the related person can be contacted or visited." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Address"/>
        </element>
        <element name="photo" description="Image of the person" definition="Image of the person.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Attachment"/>
        </element>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="Period of time that this relationship is considered valid" definition="The period of time during which this relationship is or was active. If there are no dates defined, then the interval is unknown.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="communication" description="A language which may be used to communicate with about the patient's health" definition="A language which may be used to communicate with about the patient's health." comment="If no language is specified, this *implies* that the default local language is spoken.  If you need to convey proficiency for multiple modes, then you need multiple RelatedPerson.Communication associations.   If the RelatedPerson does not speak the default local language, then the Interpreter Required Standard can be used to explicitly declare that an interpreter is required.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.RelatedPerson.Communication"/>
        </element>
        <contextRelationship context="Patient" relatedKeyElement="patient"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="RelatedPerson.Communication" retrievable="false" baseType="QICore.BackboneElement">
        <element name="language" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="The language which can be used to communicate with the patient about his or her health" definition="The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. &quot;en&quot; for English, or &quot;en-US&quot; for American English versus &quot;en-EN&quot; for England English." comment="The structure aa-BB with this exact casing is one the most widely used notations for locale. However not all systems actually code this but instead have it as free text. Hence CodeableConcept instead of code as the data type.">
            <binding name="Language" description="A human language." strength="Preferred"/>
        </element>
        <element name="preferred" elementType="System.Boolean" target="%value.value" description="Language preference indicator" definition="Indicates whether or not the patient prefers this language (over other languages he masters up a certain level)." comment="This language is specifically identified for communicating healthcare information."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="RemittanceOutcome" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="RequestIntent" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="RequestPriority" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Resource" identifier="http://hl7.org/fhir/StructureDefinition/Resource" label="Resource" retrievable="true" baseType="System.Any">
        <element name="id" elementType="System.String" target="%value.value" description="Logical id of this artifact" definition="The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes." comment="The only time that a resource does not have an id is when it is being submitted to the server using a create operation."/>
        <element name="meta" elementType="QICore.Meta" description="Metadata about the resource" definition="The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."/>
        <element name="implicitRules" elementType="System.String" target="%value.value" description="A set of rules under which this content was created" definition="A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc." comment="Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc."/>
        <element name="language" elementType="System.String" target="%value.value" description="Language of the resource content" definition="The base language in which the resource is written." comment="Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).">
            <binding name="Language" description="A human language." strength="Preferred"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ResourceType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="SampledData" identifier="http://hl7.org/fhir/StructureDefinition/SampledData" label="SampledData" retrievable="false" baseType="QICore.Element">
        <element name="origin" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Zero value and units" definition="The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series."/>
        <element name="period" elementType="System.Decimal" target="%value.value" description="Number of milliseconds between samples" definition="The length of time between sampling times, measured in milliseconds." comment="This is usually a whole number."/>
        <element name="factor" elementType="System.Decimal" target="%value.value" description="Multiply data by this before adding to origin" definition="A correction factor that is applied to the sampled data points before they are added to the origin."/>
        <element name="lowerLimit" elementType="System.Decimal" target="%value.value" description="Lower limit of detection" definition="The lower limit of detection of the measured points. This is needed if any of the data points have the value &quot;L&quot; (lower than detection limit)."/>
        <element name="upperLimit" elementType="System.Decimal" target="%value.value" description="Upper limit of detection" definition="The upper limit of detection of the measured points. This is needed if any of the data points have the value &quot;U&quot; (higher than detection limit)."/>
        <element name="dimensions" elementType="System.Integer" target="%value.value" description="Number of sample points at each time point" definition="The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once." comment="If there is more than one dimension, the code for the type of data will define the meaning of the dimensions (typically ECG data)."/>
        <element name="data" elementType="System.String" target="%value.value" description="Decimal values with spaces, or &quot;E&quot; | &quot;U&quot; | &quot;L&quot;" definition="A series of data points which are decimal values separated by a single space (character u20). The special values &quot;E&quot; (error), &quot;L&quot; (below detection limit) and &quot;U&quot; (above detection limit) can also be used in place of a decimal value." comment="Data may be missing if it is omitted for summarization purposes. In general, data is required for any actual use of a SampledData."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ServiceNotRequested" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicenotrequested" label="QICore Service Not Requested" target="ServiceRequest" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="reasonRefused" elementType="QICore.DoNotPerformReason" target="FHIRHelpers.ToConcept(%parent.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-doNotPerformReason'].value)" description="(QI-Core) Extension" definition="Indicates the reason the event was not performed."/>
        <element name="identifier" description="Identifiers assigned to this order" definition="Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller." comment="The identifier.type element is used to distinguish between the identifiers assigned by the orderer (known as the 'Placer' in HL7 v2) and the producer of the observations in response to the order (known as the 'Filler' in HL7 v2).  For further discussion and examples see the resource notes section below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest." comment="Note: This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="What request fulfills" definition="Plan/proposal/order fulfilled by this request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="replaces" description="What request replaces" definition="The request takes the place of the referenced completed or terminated request(s).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="requisition" elementType="QICore.Identifier" description="Composite Request ID" definition="A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier." comment="Requests are linked either by a &quot;basedOn&quot; relationship (i.e. one request is fulfilling another) or by having a common requisition. Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation."/>
        <element name="status" elementType="QICore.ServiceRequestStatus" target="%value.value" description="(QI-Core)(USCDI) draft | active | on-hold | revoked | completed | entered-in-error | unknown" definition="The status of the order." comment="The status is generally fully in the control of the requester - they determine whether the order is draft or active and, after it has been activated, competed, cancelled or suspended. States relating to the activities of the performer are reflected on either the corresponding event (see [Event Pattern](http://hl7.org/fhir/R4/event.html) for general discussion) or using the [Task](http://hl7.org/fhir/R4/task.html) resource." mustSupport="true">
            <binding name="ServiceRequestStatus" description="The status of a service order." strength="Required"/>
        </element>
        <element name="intent" elementType="QICore.ServiceRequestIntent" target="%value.value" description="(USCDI) proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option" definition="Whether the request is a proposal, plan, an original order or a reflex order." comment="This element is labeled as a modifier because the intent alters when and how the resource is actually applicable." mustSupport="true">
            <binding name="ServiceRequestIntent" description="The kind of service request." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of service" definition="A code that classifies the service for searching, sorting and display purposes (e.g. &quot;Surgical Procedure&quot;)." comment="There may be multiple axis of categorization depending on the context or use case for retrieving or displaying the resource.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ServiceRequestCategory" description="Classification of the requested service." strength="Example"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of service" definition="A code that classifies the service for searching, sorting and display purposes (e.g. &quot;Surgical Procedure&quot;)." comment="There may be multiple axis of categorization depending on the context or use case for retrieving or displaying the resource.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-value-sets)" strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.ServiceRequestPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Indicates how quickly the ServiceRequest should be addressed with respect to other requests.">
            <binding name="ServiceRequestPriority" description="Identifies the level of importance to be assigned to actioning the request." strength="Required"/>
        </element>
        <element name="doNotPerform" elementType="System.Boolean" target="%value.value" description="(QI-Core) True if service/procedure should not be performed" definition="Set this to true if the record is saying that the service/procedure should NOT be performed." comment="In general, only the code and timeframe will be present, though occasional additional qualifiers such as body site or even performer could be included to narrow the scope of the prohibition.  If the ServiceRequest.code and ServiceRequest.doNotPerform both contain negation, that will reinforce prohibition and should not have a double negative interpretation."/>
        <element name="code" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.code.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(USCDI) What is being requested/ordered" definition="A code that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested." comment="Many laboratory and radiology procedure codes embed the specimen/organ system in the test order name, for example,  serum or serum/plasma glucose, or a chest x-ray. The specimen might not be recorded separately from the test code." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding strength="Extensible"/>
        </element>
        <element name="orderDetail" target="FHIRHelpers.ToConcept(%value)" description="Additional order information" definition="Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied." comment="For information from the medical record intended to support the delivery of the requested services, use the `supportingInformation` element.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="OrderDetail" description="Codified order entry details which are based on order context." strength="Example"/>
        </element>
        <element name="quantity" target="FHIRHelpers.ToValue(%value)" description="Service amount" definition="An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Individual or Entity the service is ordered for" definition="On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans)." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter in which the request was created" definition="An encounter that provides additional information about the healthcare context in which this request is made."/>
        <element name="occurrence" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) When service should occur" definition="The date/time at which the requested service should occur." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
            </elementTypeSpecifier>
        </element>
        <element name="asNeeded" target="FHIRHelpers.ToValue(%value)" description="Preconditions for service" definition="If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example &quot;pain&quot;, &quot;on flare-up&quot;, etc.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
            </elementTypeSpecifier>
            <binding name="ProcedureAsNeededReason" description="A coded concept identifying the pre-condition that should hold prior to performing a procedure.  For example &quot;pain&quot;, &quot;on flare-up&quot;, etc." strength="Example"/>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="(QI-Core)(USCDI) Date request signed" definition="When the request transitioned to being actionable." mustSupport="true"/>
        <element name="requester" elementType="QICore.Reference" description="(USCDI) Who/what is requesting service" definition="The individual who initiated the request and has responsibility for its activation." comment="This not the dispatcher, but rather who is the authorizer.  This element is not intended to handle delegation which would generally be managed through the Provenance resource." mustSupport="true"/>
        <element name="performerType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Performer role" definition="Desired type of performer for doing the requested service." comment="This is a  role, not  a participation type.  In other words, does not describe the task but describes the capacity.  For example, “compounding pharmacy”, “psychiatrist” or “internal referral”.">
            <binding name="ServiceRequestParticipantRole" description="Indicates specific responsibility of an individual within the care team, such as &quot;Primary physician&quot;, &quot;Team coordinator&quot;, &quot;Caregiver&quot;, etc." strength="Example"/>
        </element>
        <element name="performer" description="Requested performer" definition="The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc." comment="If multiple performers are present, it is interpreted as a list of *alternative* performers without any preference regardless of order.  If order of preference is needed use the [request-performerOrder extension](http://hl7.org/fhir/R4/extension-request-performerorder.html).  Use CareTeam to represent a group of performers (for example, Practitioner A *and* Practitioner B).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="locationCode" target="FHIRHelpers.ToConcept(%value)" description="Requested location" definition="The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ServiceRequestLocation" description="A location type where services are delivered." strength="Example"/>
        </element>
        <element name="locationReference" description="Requested location" definition="A reference to the the preferred location(s) where the procedure should actually happen. E.g. at home or nursing day care center.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Explanation/Justification for procedure or service" definition="An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in `supportingInfo`." comment="This element represents why the referral is being made and may be used to decide how the service will be performed, or even if it will be performed at all.   Use `CodeableConcept.text` element if the data is free (uncoded) text as shown in the [CT Scan example](http://hl7.org/fhir/R4/servicerequest-example-di.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Extensible"/>
        </element>
        <element name="reasonReference" description="(QI-Core)(USCDI) Explanation/Justification for service or service" definition="Indicates another resource that provides a justification for why this service is being requested.   May relate to the resources referred to in `supportingInfo`." comment="This element represents why the referral is being made and may be used to decide how the service will be performed, or even if it will be performed at all.    To be as specific as possible,  a reference to  *Observation* or *Condition* should be used if available.  Otherwise when referencing  *DiagnosticReport*  it should contain a finding  in `DiagnosticReport.conclusion` and/or `DiagnosticReport.conclusionCode`.   When using a reference to *DocumentReference*, the target document should contain clear findings language providing the relevant reason for this service request.  Use  the CodeableConcept text element in `ServiceRequest.reasonCode` if the data is free (uncoded) text as shown in the [CT Scan example](servicerequest-example-di.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="supportingInfo" description="Additional clinical information" definition="Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as &quot;ask at order entry questions (AOEs)&quot;.  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements." comment="To represent information about how the services are to be delivered use the `instructions` element.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="specimen" description="Procedure Samples" definition="One or more specimens that the laboratory procedure will use." comment="Many diagnostic procedures need a specimen, but the request itself is not actually about the specimen. This element is for when the diagnostic is requested on already existing specimens and the request points to the specimen it applies to.    Conversely, if the request is entered first with an unknown specimen, then the [Specimen](http://hl7.org/fhir/R4/specimen.html) resource points to the ServiceRequest.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="bodySite" target="FHIRHelpers.ToConcept(%value)" description="Location on Body" definition="Anatomic location where the procedure should be performed. This is the target site." comment="Only used if not implicit in the code found in ServiceRequest.code.  If the use case requires BodySite to be handled as a separate resource instead of an inline coded element (e.g. to identify and track separately)  then use the standard extension [procedure-targetBodyStructure](http://hl7.org/fhir/R4/extension-procedure-targetbodystructure.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="note" description="Comments" definition="Any other notes and comments made about the service request. For example, internal billing notes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="patientInstruction" elementType="System.String" target="%value.value" description="Patient or consumer-oriented instructions" definition="Instructions in terms that are understood by the patient or consumer."/>
        <element name="relevantHistory" description="Request provenance" definition="Key events in the history of the request." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important.&#13;This SHALL NOT include the Provenance associated with this current version of the resource.  (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update.  Until then, it can be queried directly as the Provenance that points to this version using _revinclude&#13;All Provenances should have some historical version of this Request as their subject.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ServiceRequest" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-servicerequest" label="QICore ServiceRequest" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Identifiers assigned to this order" definition="Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller." comment="The identifier.type element is used to distinguish between the identifiers assigned by the orderer (known as the 'Placer' in HL7 v2) and the producer of the observations in response to the order (known as the 'Filler' in HL7 v2).  For further discussion and examples see the resource notes section below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" target="%value.value" description="Instantiates FHIR protocol or definition" definition="The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest." comment="Note: This is a business identifier, not a resource identifier (see [discussion](http://hl7.org/fhir/R4/resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="instantiatesUri" target="%value.value" description="Instantiates external protocol or definition" definition="The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest." comment="This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.String"/>
        </element>
        <element name="basedOn" description="What request fulfills" definition="Plan/proposal/order fulfilled by this request.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="replaces" description="What request replaces" definition="The request takes the place of the referenced completed or terminated request(s).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="requisition" elementType="QICore.Identifier" description="Composite Request ID" definition="A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier." comment="Requests are linked either by a &quot;basedOn&quot; relationship (i.e. one request is fulfilling another) or by having a common requisition. Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation."/>
        <element name="status" elementType="QICore.ServiceRequestStatus" target="%value.value" description="(QI-Core)(USCDI) draft | active | on-hold | revoked | completed | entered-in-error | unknown" definition="The status of the order." comment="The status is generally fully in the control of the requester - they determine whether the order is draft or active and, after it has been activated, competed, cancelled or suspended. States relating to the activities of the performer are reflected on either the corresponding event (see [Event Pattern](http://hl7.org/fhir/R4/event.html) for general discussion) or using the [Task](http://hl7.org/fhir/R4/task.html) resource." mustSupport="true">
            <binding name="ServiceRequestStatus" description="The status of a service order." strength="Required"/>
        </element>
        <element name="intent" elementType="QICore.ServiceRequestIntent" target="%value.value" description="(USCDI) proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option" definition="Whether the request is a proposal, plan, an original order or a reflex order." comment="This element is labeled as a modifier because the intent alters when and how the resource is actually applicable." mustSupport="true">
            <binding name="ServiceRequestIntent" description="The kind of service request." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of service" definition="A code that classifies the service for searching, sorting and display purposes (e.g. &quot;Surgical Procedure&quot;)." comment="There may be multiple axis of categorization depending on the context or use case for retrieving or displaying the resource.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ServiceRequestCategory" description="Classification of the requested service." strength="Example"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of service" definition="A code that classifies the service for searching, sorting and display purposes (e.g. &quot;Surgical Procedure&quot;)." comment="There may be multiple axis of categorization depending on the context or use case for retrieving or displaying the resource.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-value-sets)" strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.ServiceRequestPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Indicates how quickly the ServiceRequest should be addressed with respect to other requests.">
            <binding name="ServiceRequestPriority" description="Identifies the level of importance to be assigned to actioning the request." strength="Required"/>
        </element>
        <element name="doNotPerform" elementType="System.Boolean" target="%value.value" description="(QI-Core) True if service/procedure should not be performed" definition="Set this to true if the record is saying that the service/procedure should NOT be performed." comment="In general, only the code and timeframe will be present, though occasional additional qualifiers such as body site or even performer could be included to narrow the scope of the prohibition.  If the ServiceRequest.code and ServiceRequest.doNotPerform both contain negation, that will reinforce prohibition and should not have a double negative interpretation."/>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) What is being requested/ordered" definition="A code that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested." comment="Many laboratory and radiology procedure codes embed the specimen/organ system in the test order name, for example,  serum or serum/plasma glucose, or a chest x-ray. The specimen might not be recorded separately from the test code." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="orderDetail" target="FHIRHelpers.ToConcept(%value)" description="Additional order information" definition="Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied." comment="For information from the medical record intended to support the delivery of the requested services, use the `supportingInformation` element.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="OrderDetail" description="Codified order entry details which are based on order context." strength="Example"/>
        </element>
        <element name="quantity" target="FHIRHelpers.ToValue(%value)" description="Service amount" definition="An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Individual or Entity the service is ordered for" definition="On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans)." mustSupport="true"/>
        <element name="encounter" elementType="QICore.Reference" description="Encounter in which the request was created" definition="An encounter that provides additional information about the healthcare context in which this request is made."/>
        <element name="occurrence" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) When service should occur" definition="The date/time at which the requested service should occur." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
            </elementTypeSpecifier>
        </element>
        <element name="asNeeded" target="FHIRHelpers.ToValue(%value)" description="Preconditions for service" definition="If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example &quot;pain&quot;, &quot;on flare-up&quot;, etc.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
            </elementTypeSpecifier>
            <binding name="ProcedureAsNeededReason" description="A coded concept identifying the pre-condition that should hold prior to performing a procedure.  For example &quot;pain&quot;, &quot;on flare-up&quot;, etc." strength="Example"/>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="(QI-Core)(USCDI) Date request signed" definition="When the request transitioned to being actionable." mustSupport="true"/>
        <element name="requester" elementType="QICore.Reference" description="(USCDI) Who/what is requesting service" definition="The individual who initiated the request and has responsibility for its activation." comment="This not the dispatcher, but rather who is the authorizer.  This element is not intended to handle delegation which would generally be managed through the Provenance resource." mustSupport="true"/>
        <element name="performerType" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Performer role" definition="Desired type of performer for doing the requested service." comment="This is a  role, not  a participation type.  In other words, does not describe the task but describes the capacity.  For example, “compounding pharmacy”, “psychiatrist” or “internal referral”.">
            <binding name="ServiceRequestParticipantRole" description="Indicates specific responsibility of an individual within the care team, such as &quot;Primary physician&quot;, &quot;Team coordinator&quot;, &quot;Caregiver&quot;, etc." strength="Example"/>
        </element>
        <element name="performer" description="Requested performer" definition="The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc." comment="If multiple performers are present, it is interpreted as a list of *alternative* performers without any preference regardless of order.  If order of preference is needed use the [request-performerOrder extension](http://hl7.org/fhir/R4/extension-request-performerorder.html).  Use CareTeam to represent a group of performers (for example, Practitioner A *and* Practitioner B).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="locationCode" target="FHIRHelpers.ToConcept(%value)" description="Requested location" definition="The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ServiceRequestLocation" description="A location type where services are delivered." strength="Example"/>
        </element>
        <element name="locationReference" description="Requested location" definition="A reference to the the preferred location(s) where the procedure should actually happen. E.g. at home or nursing day care center.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="reasonCode" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Explanation/Justification for procedure or service" definition="An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in `supportingInfo`." comment="This element represents why the referral is being made and may be used to decide how the service will be performed, or even if it will be performed at all.   Use `CodeableConcept.text` element if the data is free (uncoded) text as shown in the [CT Scan example](http://hl7.org/fhir/R4/servicerequest-example-di.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding strength="Extensible"/>
        </element>
        <element name="reasonReference" description="(QI-Core)(USCDI) Explanation/Justification for service or service" definition="Indicates another resource that provides a justification for why this service is being requested.   May relate to the resources referred to in `supportingInfo`." comment="This element represents why the referral is being made and may be used to decide how the service will be performed, or even if it will be performed at all.    To be as specific as possible,  a reference to  *Observation* or *Condition* should be used if available.  Otherwise when referencing  *DiagnosticReport*  it should contain a finding  in `DiagnosticReport.conclusion` and/or `DiagnosticReport.conclusionCode`.   When using a reference to *DocumentReference*, the target document should contain clear findings language providing the relevant reason for this service request.  Use  the CodeableConcept text element in `ServiceRequest.reasonCode` if the data is free (uncoded) text as shown in the [CT Scan example](servicerequest-example-di.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="supportingInfo" description="Additional clinical information" definition="Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as &quot;ask at order entry questions (AOEs)&quot;.  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements." comment="To represent information about how the services are to be delivered use the `instructions` element.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="specimen" description="Procedure Samples" definition="One or more specimens that the laboratory procedure will use." comment="Many diagnostic procedures need a specimen, but the request itself is not actually about the specimen. This element is for when the diagnostic is requested on already existing specimens and the request points to the specimen it applies to.    Conversely, if the request is entered first with an unknown specimen, then the [Specimen](http://hl7.org/fhir/R4/specimen.html) resource points to the ServiceRequest.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="bodySite" target="FHIRHelpers.ToConcept(%value)" description="Location on Body" definition="Anatomic location where the procedure should be performed. This is the target site." comment="Only used if not implicit in the code found in ServiceRequest.code.  If the use case requires BodySite to be handled as a separate resource instead of an inline coded element (e.g. to identify and track separately)  then use the standard extension [procedure-targetBodyStructure](http://hl7.org/fhir/R4/extension-procedure-targetbodystructure.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="note" description="Comments" definition="Any other notes and comments made about the service request. For example, internal billing notes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="patientInstruction" elementType="System.String" target="%value.value" description="Patient or consumer-oriented instructions" definition="Instructions in terms that are understood by the patient or consumer."/>
        <element name="relevantHistory" description="Request provenance" definition="Key events in the history of the request." comment="This might not include provenances for all versions of the request – only those deemed “relevant” or important.&#13;This SHALL NOT include the Provenance associated with this current version of the resource.  (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update.  Until then, it can be queried directly as the Provenance that points to this version using _revinclude&#13;All Provenances should have some historical version of this Request as their subject.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <contextRelationship context="Practitioner" relatedKeyElement="performer"/>
        <contextRelationship context="Practitioner" relatedKeyElement="requester"/>
        <contextRelationship context="Patient" relatedKeyElement="subject"/>
        <contextRelationship context="Patient" relatedKeyElement="performer"/>
        <contextRelationship context="Encounter" relatedKeyElement="encounter"/>
        <contextRelationship context="Device" relatedKeyElement="performer"/>
        <contextRelationship context="Device" relatedKeyElement="requester"/>
        <contextRelationship context="RelatedPerson" relatedKeyElement="performer"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ServiceRequestIntent" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ServiceRequestPriority" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="ServiceRequestStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Signature" identifier="http://hl7.org/fhir/StructureDefinition/Signature" label="Signature" retrievable="false" baseType="QICore.Element">
        <element name="type" target="FHIRHelpers.ToCode(%value)" description="Indication of the reason the entity signed the object(s)" definition="An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document." comment="Examples include attesting to: authorship, correct transcription, and witness of specific event. Also known as a &amp;quot;Commitment Type Indication&amp;quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
            <binding name="SignatureType" description="An indication of the reason that an entity signed the object." strength="Preferred"/>
        </element>
        <element name="when" elementType="System.DateTime" target="%value.value" description="When the signature was created" definition="When the digital signature was signed." comment="This should agree with the information in the signature."/>
        <element name="who" elementType="QICore.Reference" description="Who signed" definition="A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key)." comment="This should agree with the information in the signature."/>
        <element name="onBehalfOf" elementType="QICore.Reference" description="The party represented" definition="A reference to an application-usable description of the identity that is represented by the signature." comment="The party that can't sign. For example a child."/>
        <element name="targetFormat" elementType="QICore.MimeType" target="%value.value" description="The technical format of the signed resources" definition="A mime type that indicates the technical format of the target resources signed by the signature." comment="&quot;xml&quot;, &quot;json&quot; and &quot;ttl&quot; are allowed, which describe the simple encodings described in the specification (and imply appropriate bundle support). Otherwise, mime types are legal here.">
            <binding name="MimeType" description="The mime type of an attachment. Any valid mime type is allowed." strength="Required"/>
        </element>
        <element name="sigFormat" elementType="QICore.MimeType" target="%value.value" description="The technical format of the signature" definition="A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.">
            <binding name="MimeType" description="The mime type of an attachment. Any valid mime type is allowed." strength="Required"/>
        </element>
        <element name="data" elementType="System.String" target="%value.value" description="The actual signature content (XML DigSig. JWS, picture, etc.)" definition="The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty." comment="Where the signature type is an XML DigSig, the signed content is a FHIR Resource(s), the signature is of the XML form of the Resource(s) using  XML-Signature (XMLDIG) &quot;Detached Signature&quot; form."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="SimpleObservation" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-simple-observation" label="QICore Simple Observation" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core)(USCDI) registered | prliminary | final | amended | corrected | entered-in-error | unknown" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Classification of type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="us-core" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding description="Note that other codes are permitted, see [Required Bindings When Slicing by Value Sets](http://hl7.org/fhir/us/core/general-requirements.html#required-bindings-when-slicing-by-valuesets)" strength="Required"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Type of observation (code / type)" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="This value set specifies the type of observation" strength="Preferred"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(QI-Core)(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(QI-Core)(USCDI) Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="(QI-Core)(USCDI) Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core)(USCDI) Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below." mustSupport="true"/>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="(QI-Core)(USCDI) US Core Profiles or other resource the observation is made from" definition="US Core Observations, DocumentReference, QuestionnaireResponse or other resource from which this observation value is derived." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="SortDirection" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Specimen.Collection" retrievable="false" baseType="QICore.BackboneElement">
        <element name="collector" elementType="QICore.Reference" description="Who collected the specimen" definition="Person who collected the specimen."/>
        <element name="collected" target="FHIRHelpers.ToValue(%value)" description="Collection time" definition="Time when specimen was collected from subject - the physiologically relevant time.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="duration" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="How long it took to collect specimen" definition="The span of time over which the collection of a specimen occurred."/>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="The quantity of specimen collected" definition="The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample."/>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Technique used to perform collection" definition="A coded value specifying the technique that is used to perform the procedure.">
            <binding name="SpecimenCollectionMethod" description="The  technique that is used to perform the procedure." strength="Example"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Anatomical collection site" definition="Anatomical location from which the specimen was collected (if subject is a patient). This is the target site.  This element is not used for environmental specimens." comment="If the use case requires  BodySite to be handled as a separate resource instead of an inline coded element (e.g. to identify and track separately)  then use the standard extension [bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="fastingStatus" target="FHIRHelpers.ToValue(%value)" description="Whether or how long patient abstained from food and/or drink" definition="Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection." comment="Representing fasting status using this element is preferred to representing it with an observation using a 'pre-coordinated code'  such as  LOINC 2005-7 (Calcium [Moles/​time] in 2 hour Urine --12 hours fasting), or  using  a component observation ` such as `Observation.component code`  = LOINC 49541-6 (Fasting status - Reported).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            </elementTypeSpecifier>
            <binding name="FastingStatus" description="Codes describing the fasting status of the patient." strength="Extensible"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Specimen.Container" retrievable="false" baseType="QICore.BackboneElement">
        <element name="identifier" description="Id for the container" definition="Id for container. There may be multiple; a manufacturer's bar code, lab assigned identifier, etc. The container ID may differ from the specimen id in some circumstances.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Textual description of the container" definition="Textual description of the container."/>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Kind of container directly associated with specimen" definition="The type of container associated with the specimen (e.g. slide, aliquot, etc.).">
            <binding name="SpecimenContainerType" description="Type of specimen container." strength="Example"/>
        </element>
        <element name="capacity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Container volume or size" definition="The capacity (volume or other measure) the container may contain."/>
        <element name="specimenQuantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="Quantity of specimen within container" definition="The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type."/>
        <element name="additive" target="FHIRHelpers.ToValue(%value)" description="Additive associated with container" definition="Introduced substance to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="SpecimenContainerAdditive" description="Substance added to specimen container." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Specimen.Processing" retrievable="false" baseType="QICore.BackboneElement">
        <element name="description" elementType="System.String" target="%value.value" description="Textual description of procedure" definition="Textual description of procedure."/>
        <element name="procedure" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Indicates the treatment step  applied to the specimen" definition="A coded value specifying the procedure used to process the specimen.">
            <binding name="SpecimenProcessingProcedure" description="Type indicating the technique used to process the specimen." strength="Example"/>
        </element>
        <element name="additive" description="Material used in the processing step" definition="Material used in the processing step.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="time" target="FHIRHelpers.ToValue(%value)" description="Date and time of specimen processing" definition="A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="SpecimenStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Status" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Substance" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-substance" label="QICore Substance" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Unique identifier" definition="Unique identifier for the substance." comment="This identifier is associated with the kind of substance in contrast to the  Substance.instance.identifier which is associated with the package/container.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="status" elementType="QICore.FHIRSubstanceStatus" target="%value.value" description="active | inactive | entered-in-error" definition="A code to indicate if the substance is actively used.">
            <binding name="FHIRSubstanceStatus" description="A code to indicate if the substance is actively used." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="What class/type of substance this is" definition="A code that classifies the general type of substance.  This is used  for searching, sorting and display purposes." comment="The level of granularity is defined by the category concepts in the value set.   More fine-grained filtering can be performed using the metadata and/or terminology hierarchy in Substance.code.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="SubstanceCategory" description="Category or classification of substance." strength="Extensible"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) If this describes a specific package/container of the substance" definition="A code (or set of codes) that identify this substance." comment="This could be a reference to an externally defined code.  It could also be a locally assigned code (e.g. a formulary),  optionally with translations to the standard drug codes.">
            <binding description="Substance codes" strength="Preferred"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Textual description of the substance, comments" definition="A description of the substance - its appearance, handling requirements, and other usage notes."/>
        <element name="instance" description="If this describes a specific package/container of the substance" definition="Substance may be used to describe a kind of substance, or a specific package/container of the substance: an instance." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Substance.Instance"/>
        </element>
        <element name="ingredient" description="Composition information about the substance" definition="A substance can be composed of other substances." mustSupport="false">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Substance.Ingredient"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Substance.Ingredient" retrievable="false" baseType="QICore.BackboneElement">
        <element name="quantity" elementType="System.Ratio" target="FHIRHelpers.ToRatio(%value)" description="(QI-Core) Optional amount (concentration)" definition="The amount of the ingredient in the substance - a concentration ratio."/>
        <element name="substance" elementType="QICore.Reference" description="(QI-Core) A component of the substance" definition="Another substance that is a component of this substance."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Substance.Instance" retrievable="false" baseType="QICore.BackboneElement">
        <element name="identifier" elementType="QICore.Identifier" description="Identifier of the package/container" definition="Identifier associated with the package/container (usually a label affixed directly)."/>
        <element name="expiry" elementType="System.DateTime" target="%value.value" description="When no longer valid to use" definition="When the substance is no longer valid to use. For some substances, a single arbitrary date is used for expiry."/>
        <element name="quantity" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(QI-Core) Amount of substance in the package" definition="The amount of the substance."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Task" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-task" label="QICore Task" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="(QI-Core) Task Instance Identifier" definition="The business identifier for this task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" elementType="System.String" target="%value.value" description="Formal definition of task" definition="The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task."/>
        <element name="instantiatesUri" elementType="System.String" target="%value.value" description="Formal definition of task" definition="The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task."/>
        <element name="basedOn" description="Request fulfilled by this task" definition="BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a &quot;request&quot; resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the &quot;request&quot; resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="groupIdentifier" elementType="QICore.Identifier" description="Requisition or grouper id" definition="An identifier that links together multiple tasks and other requests that were created in the same context."/>
        <element name="partOf" description="Composite task" definition="Task that this particular task is part of." comment="This should usually be 0..1.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(QI-Core) draft​ | requested​ | received​ | accepted​ | ready​ | cancelled​ | in-progress​ | on-hold​ | failed​ | completed | entered-in-error" definition="The current status of the task.">
            <binding strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="An explanation as to why this task is held, failed, was refused, etc." comment="This applies to the current status.  Look at the history of the task to see reasons for past statuses.">
            <binding name="TaskStatusReason" description="Codes to identify the reason for current status.  These will typically be specific to a particular workflow." strength="Example"/>
        </element>
        <element name="businessStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="E.g. &quot;Specimen collected&quot;, &quot;IV prepped&quot;" definition="Contains business-specific nuances of the business state.">
            <binding name="TaskBusinessStatus" description="The domain-specific business-contextual sub-state of the task.  For example: &quot;Blood drawn&quot;, &quot;IV inserted&quot;, &quot;Awaiting physician signature&quot;, etc." strength="Example"/>
        </element>
        <element name="intent" elementType="QICore.TaskIntent" target="%value.value" description="(QI-Core) unknown | proposal | plan | order | original-order | reflex-order | filler-order | instance" definition="Indicates the &quot;level&quot; of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc." comment="This element is immutable.  Proposed tasks, planned tasks, etc. must be distinct instances.&#10;&#10;In most cases, Tasks will have an intent of &quot;order&quot;.">
            <binding name="TaskIntent" description="Distinguishes whether the task is a proposal, plan or full order." strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.TaskPriority" target="%value.value" description="(QI-Core) routine | urgent | asap | stat" definition="Indicates how quickly the Task should be addressed with respect to other requests.">
            <binding name="TaskPriority" description="The task's priority." strength="Required"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(QI-Core) Task Type" definition="A name or code (or both) briefly describing what the task involves." comment="The title (eg &quot;My Tasks&quot;, &quot;Outstanding Tasks for Patient X&quot;) should go into the code.">
            <binding description="Codes to identify what the task involves. These will typically be specific to a particular workflow" strength="Preferred"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Human-readable explanation of task" definition="A free-text description of what is to be performed."/>
        <element name="focus" elementType="QICore.Reference" description="What task is acting on" definition="The request being actioned or the resource being manipulated by this task." comment="If multiple resources need to be manipulated, use sub-tasks.  (This ensures that status can be tracked independently for each referenced resource.)."/>
        <element name="for" elementType="QICore.Reference" description="Beneficiary of the Task" definition="The entity who benefits from the performance of the service specified in the task (e.g., the patient)."/>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this task originated" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created."/>
        <element name="executionPeriod" target="FHIRHelpers.ToInterval(%value)" description="Start and end time of execution" definition="Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end)." mustSupport="false">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="Task Creation Date" definition="The date and time this task was created."/>
        <element name="lastModified" elementType="System.DateTime" target="%value.value" description="Task Last Modified Date" definition="The date and time of last modification to this task."/>
        <element name="requester" elementType="QICore.Reference" description="Who is asking for task to be done" definition="The creator of the task."/>
        <element name="performerType" target="FHIRHelpers.ToConcept(%value)" description="Requested performer" definition="The kind of participant that should perform the task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="TaskPerformerType" description="The type(s) of task performers allowed." strength="Preferred"/>
        </element>
        <element name="owner" elementType="QICore.Reference" description="Responsible individual" definition="Individual organization or Device currently responsible for task execution." comment="Tasks may be created with an owner not yet identified."/>
        <element name="location" elementType="QICore.Reference" description="Where task occurs" definition="Principal physical location where the this task is performed."/>
        <element name="reasonCode" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why task is needed" definition="A description or code indicating why this task needs to be performed." comment="This should only be included if there is no focus or if it differs from the reason indicated on the focus." mustSupport="false">
            <binding name="TaskReason" description="Indicates why the task is needed.  E.g. Suspended because patient admitted to hospital." strength="Example"/>
        </element>
        <element name="reasonReference" elementType="QICore.Reference" description="Why task is needed" definition="A resource reference indicating why this task needs to be performed." comment="Tasks might be justified based on an Observation, a Condition, a past or planned procedure, etc.   This should only be included if there is no focus or if it differs from the reason indicated on the focus.    Use the CodeableConcept text element in `Task.reasonCode` if the data is free (uncoded) text."/>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Comments made about the task" definition="Free-text information captured about the task as it progresses.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="relevantHistory" description="Key events in history of the Task" definition="Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task." comment="This element does not point to the Provenance associated with the *current* version of the resource - as it would be created after this version existed.  The Provenance for the current version can be retrieved with a _revinclude.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="restriction" elementType="QICore.Task.Restriction" description="Constraints on fulfillment tasks" definition="If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned."/>
        <element name="input" description="Information used to perform task" definition="Additional information that may be needed in the execution of the task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Task.Input"/>
        </element>
        <element name="output" description="Information produced as part of task" definition="Outputs produced by the Task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Task.Output"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Task.Input" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Label for the input" definition="A code or description indicating how the input is intended to be used as part of the task execution." comment="If referencing a BPMN workflow or Protocol, the &quot;system&quot; is the URL for the workflow definition and the code is the &quot;name&quot; of the required input.">
            <binding name="TaskInputParameterType" description="Codes to identify types of input parameters.  These will typically be specific to a particular workflow.  E.g. &quot;Comparison source&quot;, &quot;Applicable consent&quot;, &quot;Concomitent Medications&quot;, etc." strength="Example"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Content to use in performing the task" definition="The value of the input parameter as a basic type.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Address"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Annotation"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Attachment"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Code"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ContactPoint"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="HumanName"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Identifier"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="SampledData"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Signature"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ContactDetail"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Contributor"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="DataRequirement"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Expression"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ParameterDefinition"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="RelatedArtifact"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="TriggerDefinition"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="UsageContext"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Dosage"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Meta"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Task.Output" retrievable="false" baseType="QICore.BackboneElement">
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Label for output" definition="The name of the Output parameter.">
            <binding name="TaskOutputParameterType" description="Codes to identify types of input parameters.  These will typically be specific to a particular workflow.  E.g. &quot;Identified issues&quot;, &quot;Preliminary results&quot;, &quot;Filler order&quot;, &quot;Final results&quot;, etc." strength="Example"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Result of output" definition="The value of the Output parameter as a basic type.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Address"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Annotation"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Attachment"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Code"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ContactPoint"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="HumanName"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Identifier"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Decimal"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="SampledData"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Signature"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ContactDetail"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Contributor"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="DataRequirement"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Expression"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="ParameterDefinition"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="RelatedArtifact"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="TriggerDefinition"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="UsageContext"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Dosage"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Meta"/>
            </elementTypeSpecifier>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Task.Restriction" retrievable="false" baseType="QICore.BackboneElement">
        <element name="repetitions" elementType="System.Integer" target="%value.value" description="How many times to repeat" definition="Indicates the number of times the requested action should occur."/>
        <element name="period" target="FHIRHelpers.ToInterval(%value)" description="When fulfillment sought" definition="Over what time-period is fulfillment sought." comment="Note that period.high is the due date representing the time by which the task should be completed.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="recipient" description="For whom is fulfillment sought?" definition="For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="TaskIntent" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="TaskPriority" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="TaskRejected" identifier="http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-taskrejected" label="QICore Task Rejected" target="Task" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Task Instance Identifier" definition="The business identifier for this task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="instantiatesCanonical" elementType="System.String" target="%value.value" description="Formal definition of task" definition="The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task."/>
        <element name="instantiatesUri" elementType="System.String" target="%value.value" description="Formal definition of task" definition="The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task."/>
        <element name="basedOn" description="Request fulfilled by this task" definition="BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a &quot;request&quot; resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the &quot;request&quot; resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="groupIdentifier" elementType="QICore.Identifier" description="Requisition or grouper id" definition="An identifier that links together multiple tasks and other requests that were created in the same context."/>
        <element name="partOf" description="Composite task" definition="Task that this particular task is part of." comment="This should usually be 0..1.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.TaskStatus" target="%value.value" description="(QI-Core) The potential performer who claimed ownership of the task has decided not to execute it prior to performing any action" definition="The current status of the task.">
            <binding name="TaskStatus" description="The current status of the task." strength="Required"/>
        </element>
        <element name="statusReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Reason for current status" definition="An explanation as to why this task is held, failed, was refused, etc." comment="This applies to the current status.  Look at the history of the task to see reasons for past statuses." mustSupport="false">
            <binding strength="Extensible"/>
        </element>
        <element name="businessStatus" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="E.g. &quot;Specimen collected&quot;, &quot;IV prepped&quot;" definition="Contains business-specific nuances of the business state.">
            <binding name="TaskBusinessStatus" description="The domain-specific business-contextual sub-state of the task.  For example: &quot;Blood drawn&quot;, &quot;IV inserted&quot;, &quot;Awaiting physician signature&quot;, etc." strength="Example"/>
        </element>
        <element name="intent" elementType="QICore.TaskIntent" target="%value.value" description="unknown | proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option" definition="Indicates the &quot;level&quot; of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc." comment="This element is immutable.  Proposed tasks, planned tasks, etc. must be distinct instances.&#10;&#10;In most cases, Tasks will have an intent of &quot;order&quot;.">
            <binding name="TaskIntent" description="Distinguishes whether the task is a proposal, plan or full order." strength="Required"/>
        </element>
        <element name="priority" elementType="QICore.TaskPriority" target="%value.value" description="routine | urgent | asap | stat" definition="Indicates how quickly the Task should be addressed with respect to other requests.">
            <binding name="TaskPriority" description="The task's priority." strength="Required"/>
        </element>
        <element name="code" target="System.Concept:FHIRHelpers.ToConcept(%value);System.ValueSet:FHIRHelpers.ToValueSet(%parent.code.extension[url='http://hl7.org/fhir/us/qicore/StructureDefinition/qicore-notDoneValueSet'].value.value)" description="(QI-Core) Task Type" definition="A name or code (or both) briefly describing what the task involves." comment="The title (eg &quot;My Tasks&quot;, &quot;Outstanding Tasks for Patient X&quot;) should go into the code.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="ValueSet"/>
            </elementTypeSpecifier>
            <binding description="Codes to identify what the task involves. These will typically be specific to a particular workflow." strength="Preferred"/>
        </element>
        <element name="description" elementType="System.String" target="%value.value" description="Human-readable explanation of task" definition="A free-text description of what is to be performed."/>
        <element name="focus" elementType="QICore.Reference" description="What task is acting on" definition="The request being actioned or the resource being manipulated by this task." comment="If multiple resources need to be manipulated, use sub-tasks.  (This ensures that status can be tracked independently for each referenced resource.)." mustSupport="false"/>
        <element name="for" elementType="QICore.Reference" description="Beneficiary of the Task" definition="The entity who benefits from the performance of the service specified in the task (e.g., the patient)." mustSupport="false"/>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this task originated" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created." mustSupport="false"/>
        <element name="executionPeriod" target="FHIRHelpers.ToInterval(%value)" description="(QI-Core) The timing the task was rejected and the reason." definition="Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="authoredOn" elementType="System.DateTime" target="%value.value" description="Task Creation Date" definition="The date and time this task was created."/>
        <element name="lastModified" elementType="System.DateTime" target="%value.value" description="Task Last Modified Date" definition="The date and time of last modification to this task."/>
        <element name="requester" elementType="QICore.Reference" description="Who is asking for task to be done" definition="The creator of the task."/>
        <element name="performerType" target="FHIRHelpers.ToConcept(%value)" description="Requested performer" definition="The kind of participant that should perform the task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="TaskPerformerType" description="The type(s) of task performers allowed." strength="Preferred"/>
        </element>
        <element name="owner" elementType="QICore.Reference" description="Responsible individual" definition="Individual organization or Device currently responsible for task execution." comment="Tasks may be created with an owner not yet identified."/>
        <element name="location" elementType="QICore.Reference" description="Where task occurs" definition="Principal physical location where the this task is performed."/>
        <element name="reasonCode" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why task is needed" definition="A description or code indicating why this task needs to be performed." comment="This should only be included if there is no focus or if it differs from the reason indicated on the focus.">
            <binding name="TaskReason" description="Indicates why the task is needed.  E.g. Suspended because patient admitted to hospital." strength="Example"/>
        </element>
        <element name="reasonReference" elementType="QICore.Reference" description="Why task is needed" definition="A resource reference indicating why this task needs to be performed." comment="Tasks might be justified based on an Observation, a Condition, a past or planned procedure, etc.   This should only be included if there is no focus or if it differs from the reason indicated on the focus.    Use the CodeableConcept text element in `Task.reasonCode` if the data is free (uncoded) text."/>
        <element name="insurance" description="Associated insurance coverage" definition="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="note" description="Comments made about the task" definition="Free-text information captured about the task as it progresses.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="relevantHistory" description="Key events in history of the Task" definition="Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task." comment="This element does not point to the Provenance associated with the *current* version of the resource - as it would be created after this version existed.  The Provenance for the current version can be retrieved with a _revinclude.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="restriction" elementType="QICore.Task.Restriction" description="Constraints on fulfillment tasks" definition="If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned."/>
        <element name="input" description="Information used to perform task" definition="Additional information that may be needed in the execution of the task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Task.Input"/>
        </element>
        <element name="output" description="Information produced as part of task" definition="Outputs produced by the Task.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Task.Output"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="TaskStatus" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Timing" identifier="http://hl7.org/fhir/StructureDefinition/Timing" label="Timing" retrievable="false" primaryCodePath="code" baseType="QICore.BackboneElement">
        <element name="event" target="%value.value" description="When the event occurs" definition="Identifies specific times when the event occurs.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.DateTime"/>
        </element>
        <element name="repeat" elementType="QICore.Timing.Repeat" description="When the event is to occur" definition="A set of rules that describe when the event is scheduled.">
            <constraint name="tim-1" severity="ERROR" message="if there's a duration, there needs to be duration units">
                <expression language="text/fhirpath" expression="duration.empty() or durationUnit.exists()"/>
            </constraint>
            <constraint name="tim-2" severity="ERROR" message="if there's a period, there needs to be period units">
                <expression language="text/fhirpath" expression="period.empty() or periodUnit.exists()"/>
            </constraint>
            <constraint name="tim-4" severity="ERROR" message="duration SHALL be a non-negative value">
                <expression language="text/fhirpath" expression="duration.exists() implies duration &gt;= 0"/>
            </constraint>
            <constraint name="tim-5" severity="ERROR" message="period SHALL be a non-negative value">
                <expression language="text/fhirpath" expression="period.exists() implies period &gt;= 0"/>
            </constraint>
            <constraint name="tim-6" severity="ERROR" message="If there's a periodMax, there must be a period">
                <expression language="text/fhirpath" expression="periodMax.empty() or period.exists()"/>
            </constraint>
            <constraint name="tim-7" severity="ERROR" message="If there's a durationMax, there must be a duration">
                <expression language="text/fhirpath" expression="durationMax.empty() or duration.exists()"/>
            </constraint>
            <constraint name="tim-8" severity="ERROR" message="If there's a countMax, there must be a count">
                <expression language="text/fhirpath" expression="countMax.empty() or count.exists()"/>
            </constraint>
            <constraint name="tim-9" severity="ERROR" message="If there's an offset, there must be a when (and not C, CM, CD, CV)">
                <expression language="text/fhirpath" expression="offset.empty() or (when.exists() and ((when in ('C' | 'CM' | 'CD' | 'CV')).not()))"/>
            </constraint>
            <constraint name="tim-10" severity="ERROR" message="If there's a timeOfDay, there cannot be a when, or vice versa">
                <expression language="text/fhirpath" expression="timeOfDay.empty() or when.empty()"/>
            </constraint>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="BID | TID | QID | AM | PM | QD | QOD | +" definition="A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code)." comment="BID etc. are defined as 'at institutionally specified times'. For example, an institution may choose that BID is &quot;always at 7am and 6pm&quot;.  If it is inappropriate for this choice to be made, the code BID should not be used. Instead, a distinct organization-specific code should be used in place of the HL7-defined BID code and/or a structured representation should be used (in this case, specifying the two event times).">
            <binding name="TimingAbbreviation" description="Code for a known / defined timing pattern." strength="Preferred"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Timing.Repeat" retrievable="false" baseType="QICore.Element">
        <element name="bounds" target="FHIRHelpers.ToValue(%value)" description="Length/Range of lengths, or (Start and/or end) limits" definition="Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
        </element>
        <element name="count" elementType="System.Integer" target="%value.value" description="Number of times to repeat" definition="A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values." comment="If you have both bounds and count, then this should be understood as within the bounds period, until count times happens."/>
        <element name="countMax" elementType="System.Integer" target="%value.value" description="Maximum number of times to repeat" definition="If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times."/>
        <element name="duration" elementType="System.Decimal" target="%value.value" description="How long when it happens" definition="How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration." comment="For some events the duration is part of the definition of the event (e.g. IV infusions, where the duration is implicit in the specified quantity and rate). For others, it's part of the timing specification (e.g. exercise)."/>
        <element name="durationMax" elementType="System.Decimal" target="%value.value" description="How long when it happens (Max)" definition="If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length." comment="For some events the duration is part of the definition of the event (e.g. IV infusions, where the duration is implicit in the specified quantity and rate). For others, it's part of the timing specification (e.g. exercise)."/>
        <element name="durationUnit" elementType="QICore.UnitsOfTime" target="%value.value" description="s | min | h | d | wk | mo | a - unit of time (UCUM)" definition="The units of time for the duration, in UCUM units.">
            <binding name="UnitsOfTime" description="A unit of time (units from UCUM)." strength="Required"/>
        </element>
        <element name="frequency" elementType="System.Integer" target="%value.value" description="Event occurs frequency times per period" definition="The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency."/>
        <element name="frequencyMax" elementType="System.Integer" target="%value.value" description="Event occurs up to frequencyMax times per period" definition="If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range."/>
        <element name="period" elementType="System.Decimal" target="%value.value" description="Event occurs frequency times per period" definition="Indicates the duration of time over which repetitions are to occur; e.g. to express &quot;3 times per day&quot;, 3 would be the frequency and &quot;1 day&quot; would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length."/>
        <element name="periodMax" elementType="System.Decimal" target="%value.value" description="Upper limit of period (3-4 hours)" definition="If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as &quot;do this once every 3-5 days."/>
        <element name="periodUnit" elementType="QICore.UnitsOfTime" target="%value.value" description="s | min | h | d | wk | mo | a - unit of time (UCUM)" definition="The units of time for the period in UCUM units.">
            <binding name="UnitsOfTime" description="A unit of time (units from UCUM)." strength="Required"/>
        </element>
        <element name="dayOfWeek" target="%value.value" description="mon | tue | wed | thu | fri | sat | sun" definition="If one or more days of week is provided, then the action happens only on the specified day(s)." comment="If no days are specified, the action is assumed to happen every day as otherwise specified. The elements frequency and period cannot be used as well as dayOfWeek.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DayOfWeek"/>
            <binding name="DayOfWeek" strength="Required"/>
        </element>
        <element name="timeOfDay" target="%value.value" description="Time of day for action" definition="Specified time of day for action to take place." comment="When time of day is specified, it is inferred that the action happens every day (as filtered by dayofWeek) on the specified times. The elements when, frequency and period cannot be used as well as timeOfDay.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Time"/>
        </element>
        <element name="when" target="%value.value" description="Code for time period of occurrence" definition="An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur." comment="When more than one event is listed, the event is tied to the union of the specified events.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.EventTiming"/>
            <binding name="EventTiming" description="Real world event relating to the schedule." strength="Required"/>
        </element>
        <element name="offset" elementType="System.Integer" target="%value.value" description="Minutes from event (before or after)" definition="The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="TriggerDefinition" identifier="http://hl7.org/fhir/StructureDefinition/TriggerDefinition" label="TriggerDefinition" retrievable="false" baseType="QICore.Element">
        <element name="type" elementType="QICore.TriggerType" target="%value.value" description="named-event | periodic | data-changed | data-added | data-modified | data-removed | data-accessed | data-access-ended" definition="The type of triggering event.">
            <binding name="TriggerType" description="The type of trigger." strength="Required"/>
        </element>
        <element name="name" elementType="System.String" target="%value.value" description="Name or URI that identifies the event" definition="A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context." comment="An event name can be provided for all event types, but is required for named events. If a name is provided for a type other than named events, it is considered to be a shorthand for the semantics described by the formal description of the event."/>
        <element name="timing" target="FHIRHelpers.ToValue(%value)" description="Timing of the event" definition="The timing of the event (if this is a periodic trigger).">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="data" description="Triggering data of the event (multiple = 'and')" definition="The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true." comment="This element shall be present for any data type trigger.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.DataRequirement"/>
        </element>
        <element name="condition" elementType="QICore.Expression" description="Whether the event triggers (boolean expression)" definition="A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires." comment="This element can be only be specified for data type triggers and provides additional semantics for the trigger. The context available within the condition is based on the type of data event. For all events, the current resource will be available as context. In addition, for modification events, the previous resource will also be available. The expression may be inlined, or may be a simple absolute URI, which is a reference to a named expression within a logic library referenced by a library element or extension within the containing resource. If the expression is a FHIR Path expression, it evaluates in the context of a resource of one of the type identified in the data requirement, and may also refer to the variable %previous for delta comparisons on events of type data-changed, data-modified, and data-deleted which will always have the same type."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="TriggerType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="UDIEntryType" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreBMIProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-bmi" label="US Core BMI Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Coded Responses from C-CDA Vital Sign Results" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreBirthSexExtension" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex" label="US Core Birth Sex Extension" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreBloodPressureProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-blood-pressure" label="US Core Blood Pressure Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Blood Pressure" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="SampledData"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
        <element name="systolic" elementType="QICore.Observation.Component" description="(USCDI) Systolic Blood Pressure" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
        <element name="diastolic" elementType="QICore.Observation.Component" description="(USCDI) Diastolic Blood Pressure" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreBodyHeightProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-body-height" label="US Core Body Height Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Body Height" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreBodyTemperatureProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-body-temperature" label="US Core Body Temperature Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Body Temperature" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreBodyWeightProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-body-weight" label="US Core Body Weight Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Body Weight" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreEthnicityExtension" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity" label="US Core Ethnicity Extension" retrievable="false" baseType="QICore.Extension">
        <element name="ombCategory" elementType="System.Code" target="FHIRHelpers.ToCode(%parent.extension[url='ombCategory'].value)" description="(USCDI) Hispanic or Latino|Not Hispanic or Latino" definition="The 2 ethnicity category codes according to the [OMB Standards for Maintaining, Collecting, and Presenting Federal Data on Race and Ethnicity, Statistical Policy Directive No. 15, as revised, October 30, 1997](https://www.govinfo.gov/content/pkg/FR-1997-10-30/pdf/97-28653.pdf)." mustSupport="true"/>
        <element name="detailed" target="FHIRHelpers.ToCode(%parent.extension[url='detailed'].value)" description="Extended ethnicity codes" definition="The 41 CDC ethnicity codes that are grouped under one of the 2 OMB ethnicity category codes.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
        </element>
        <element name="text" elementType="System.String" target="%parent.extension[url='text'].value.value" description="(USCDI) ethnicity Text" definition="Plain text representation of the ethnicity concept(s)." mustSupport="true"/>
        <element name="url" elementType="System.String" target="%value.value" description="identifies the meaning of the extension" definition="Source of the definition for the extension code - a logical name or a URL." comment="The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreExtensionQuestionnaireUri" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-extension-questionnaire-uri" label="US Core Extension Questionnaire URI" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreGenderIdentityExtension" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-genderIdentity" label="US Core Gender Identity Extension" retrievable="false" baseType="System.Concept"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreHeadCircumferenceProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-head-circumference" label="US Core Head Circumference Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Head Circumference" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreHeartRateProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-heart-rate" label="US Core Heart Rate Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Heart Rate" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreImplantableDeviceProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-implantable-device" label="US Core Implantable Device Profile" target="Device" retrievable="true" primaryCodePath="type" baseType="QICore.DomainResource">
        <element name="identifier" description="Instance identifier" definition="Unique instance identifiers assigned to a device by manufacturers other organizations or owners." comment="The barcode string from a barcode present on a device label or package may identify the instance, include names given to the device in local usage, or may identify the type of device. If the identifier identifies the type of device, Device.type element should be used.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="definition" elementType="QICore.Reference" description="The reference to the definition for the device" definition="The reference to the definition for the device."/>
        <element name="udiCarrier" elementType="QICore.Device.UdiCarrier" description="(USCDI) Unique Device Identifier (UDI) Barcode string" definition="Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold." comment="Some devices may not have UDI information (for example. historical data or patient reported data)." mustSupport="true"/>
        <element name="status" elementType="QICore.FHIRDeviceStatus" target="%value.value" description="active | inactive | entered-in-error | unknown" definition="Status of the Device availability." comment="This element is labeled as a modifier because the status contains the codes inactive and entered-in-error that mark the device (record)as not currently valid.">
            <binding name="FHIRDeviceStatus" description="The availability status of the device." strength="Required"/>
        </element>
        <element name="statusReason" target="FHIRHelpers.ToConcept(%value)" description="online | paused | standby | offline | not-ready | transduc-discon | hw-discon | off" definition="Reason for the dtatus of the Device availability.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="FHIRDeviceStatusReason" description="The availability status reason of the device." strength="Extensible"/>
        </element>
        <element name="distinctIdentifier" elementType="System.String" target="%value.value" description="(USCDI) The distinct identification string" definition="The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product." comment="For example, this applies to devices in the United States regulated under *Code of Federal Regulation 21CFR§1271.290(c)*." mustSupport="true"/>
        <element name="manufacturer" elementType="System.String" target="%value.value" description="Name of device manufacturer" definition="A name of the manufacturer."/>
        <element name="manufactureDate" elementType="System.DateTime" target="%value.value" description="(USCDI) Date when the device was made" definition="The date and time when the device was manufactured." mustSupport="true"/>
        <element name="expirationDate" elementType="System.DateTime" target="%value.value" description="(USCDI) Date and time of expiry of this device (if applicable)" definition="The date and time beyond which this device is no longer valid or should not be used (if applicable)." mustSupport="true"/>
        <element name="lotNumber" elementType="System.String" target="%value.value" description="(USCDI) Lot number of manufacture" definition="Lot number assigned by the manufacturer." mustSupport="true"/>
        <element name="serialNumber" elementType="System.String" target="%value.value" description="(USCDI) Serial number assigned by the manufacturer" definition="The serial number assigned by the organization when the device was manufactured." comment="Alphanumeric Maximum 20." mustSupport="true"/>
        <element name="deviceName" description="The name of the device as given by the manufacturer" definition="This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.DeviceName"/>
        </element>
        <element name="modelNumber" elementType="System.String" target="%value.value" description="The model number for the device" definition="The model number for the device."/>
        <element name="partNumber" elementType="System.String" target="%value.value" description="The part number of the device" definition="The part number of the device." comment="Alphanumeric Maximum 20."/>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) The kind or type of device" definition="The kind or type of device." mustSupport="true">
            <binding description="Codes to identify medical devices" strength="Extensible"/>
        </element>
        <element name="specialization" description="The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication" definition="The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.Specialization"/>
        </element>
        <element name="version" description="The actual design of the device or software version running on the device" definition="The actual design of the device or software version running on the device.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.Version"/>
        </element>
        <element name="property" description="The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties" definition="The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Device.Property"/>
        </element>
        <element name="patient" elementType="QICore.Reference" description="(USCDI) Patient to whom Device is affixed" definition="Patient information, If the device is affixed to a person." mustSupport="true"/>
        <element name="owner" elementType="QICore.Reference" description="Organization responsible for device" definition="An organization that is responsible for the provision and ongoing maintenance of the device."/>
        <element name="contact" description="Details for human/organization for support" definition="Contact details for an organization or a particular human that is responsible for the device." comment="used for troubleshooting etc.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.ContactPoint"/>
        </element>
        <element name="location" elementType="QICore.Reference" description="Where the device is found" definition="The place where the device can be found."/>
        <element name="url" elementType="System.String" target="%value.value" description="Network address to contact device" definition="A network address on which the device may be contacted directly." comment="If the device is running a FHIR server, the network address should  be the Base URL from which a conformance statement may be retrieved."/>
        <element name="note" description="Device notes and comments" definition="Descriptive information, usage information or implantation information that is not captured in an existing element.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="safety" target="FHIRHelpers.ToConcept(%value)" description="Safety Characteristics of Device" definition="Provides additional safety characteristics about a medical device.  For example devices containing latex.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
        </element>
        <element name="parent" elementType="QICore.Reference" description="The parent device" definition="The parent device."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreObservationOccupationProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-occupation" label="US Core Observation Occupation Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.ObservationStatus" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="ObservationStatus" description="Codes providing the status of an observation." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="socialhistory" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Occupation history" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding name="ObservationCode" description="Codes identifying names of simple observations." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToInterval(%value)" description="Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events.">
            <elementTypeSpecifier xsi:type="IntervalTypeSpecifier">
                <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below."/>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
        <element name="industry" elementType="QICore.Observation.Component" description="(USCDI) Occupation industry" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below." mustSupport="true"/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreObservationPregnancyIntentProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-pregnancyintent" label="US Core Observation Pregnancy Intent Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.ObservationStatus" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="ObservationStatus" description="Codes providing the status of an observation." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="SocialHistory" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Pregnancy Status" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding name="ObservationCode" description="Codes identifying names of simple observations." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" elementType="System.DateTime" target="%value.value" description="Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events."/>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below."/>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreObservationPregnancyStatusProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-pregnancystatus" label="US Core Observation Pregnancy Status Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.ObservationStatus" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="ObservationStatus" description="Codes providing the status of an observation." strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="SocialHistory" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Pregnancy Status" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding name="ObservationCode" description="Codes identifying names of simple observations." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" elementType="System.DateTime" target="%value.value" description="Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events."/>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below."/>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreObservationSexualOrientationProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-sexual-orientation" label="US Core Observation Sexual Orientation Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Sexual Orientation" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding name="ObservationCode" description="Codes identifying names of simple observations." strength="Example"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Clinically relevant time/time-period for observation" definition="This records the time during which the patient had identified their emotional, romantic, sexual, or affectional attraction to another person." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Timing"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
            </elementTypeSpecifier>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Actual result" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below."/>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCorePediatricBMIforAgeObservationProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/pediatric-bmi-for-age" label="US Core Pediatric BMI for Age Observation Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) BMI percentile per age and sex for youth 2-20" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCorePediatricHeadOccipitalFrontalCircumferencePercentileProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/head-occipital-frontal-circumference-percentile" label="US Core Pediatric Head Occipital Frontal Circumference Percentile Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Head Occipital Frontal circumference Percentile" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCorePediatricWeightForHeightObservationProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/pediatric-weight-for-height" label="US Core Pediatric Weight for Height Observation Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Weight-for-length per age and gender" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCorePulseOximetryProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-pulse-oximetry" label="US Core Pulse Oximetry Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Oxygen Saturation by Pulse Oximetry" definition="Coded Responses from C-CDA Vital Sign Results." comment="The code (59408-5 Oxygen saturation in Arterial blood by Pulse oximetry) is included as an additional observation code to FHIR Core vital Oxygen Saturation code (2708-6 Oxygen saturation in Arterial blood)." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="PulseOx" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="(USCDI) Code defined by a terminology system" definition="A reference to a code defined by a terminology system." comment="Codes may be defined very casually in enumerations, or code lists, up to very formal definitions such as SNOMED CT - see the HL7 v3 Core Principles for more information.  Ordering of codings is undefined and SHALL NOT be used to infer meaning. Generally, at most only one of the coding values will be labeled as UserSelected = true." mustSupport="true"/>
        <element name="O2Sat" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="(USCDI) Code defined by a terminology system" definition="A reference to a code defined by a terminology system." comment="Codes may be defined very casually in enumerations, or code lists, up to very formal definitions such as SNOMED CT - see the HL7 v3 Core Principles for more information.  Ordering of codings is undefined and SHALL NOT be used to infer meaning. Generally, at most only one of the coding values will be labeled as UserSelected = true." mustSupport="true"/>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Used when reporting flow rates or oxygen concentration." definition="Used when reporting flow rates or oxygen concentration." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
        <element name="FlowRate" elementType="QICore.Observation.Component" description="(USCDI) Inhaled oxygen flow rate" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
        <element name="Concentration" elementType="QICore.Observation.Component" description="(USCDI) Inhaled oxygen concentration" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreRaceExtension" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-race" label="US Core Race Extension" retrievable="false" baseType="QICore.Extension">
        <element name="ombCategory" target="FHIRHelpers.ToCode(%parent.extension[url='ombCategory'].value)" description="(USCDI) American Indian or Alaska Native|Asian|Black or African American|Native Hawaiian or Other Pacific Islander|White" definition="The 5 race category codes according to the [OMB Standards for Maintaining, Collecting, and Presenting Federal Data on Race and Ethnicity, Statistical Policy Directive No. 15, as revised, October 30, 1997](https://www.govinfo.gov/content/pkg/FR-1997-10-30/pdf/97-28653.pdf)." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
        </element>
        <element name="detailed" target="FHIRHelpers.ToCode(%parent.extension[url='detailed'].value)" description="Extended race codes" definition="The 900+ CDC race codes that are grouped under one of the 5 OMB race category codes:.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Code"/>
        </element>
        <element name="text" elementType="System.String" target="%parent.extension[url='text'].value.value" description="(USCDI) Race Text" definition="Plain text representation of the race concept(s)." mustSupport="true"/>
        <element name="url" elementType="System.String" target="%value.value" description="identifies the meaning of the extension" definition="Source of the definition for the extension code - a logical name or a URL." comment="The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreRespiratoryRateProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-respiratory-rate" label="US Core Respiratory Rate Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Respiratory Rate" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" elementType="System.Quantity" target="FHIRHelpers.ToQuantity(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreSexExtension" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-sex" label="US Core Sex Extension" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreSmokingStatusProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-smokingstatus" label="US Core Smoking Status Observation Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="System.String" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="SocialHistory" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Smoking Status" definition="Describes what was observed. Sometimes this is called the observation &quot;name&quot;." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/R4/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" elementType="System.DateTime" target="%value.value" description="Clinically relevant time/time-period for observation" definition="The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the &quot;physiologically relevant time&quot;. This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/R4/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events."/>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/R4/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Typically Coded Responses from Smoking Status Value Set" definition="The information determined as a result of making the observation, if the information has a simple value." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/R4/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="SampledData"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <binding description="This value set enumerates codes SNOMED CT codes historically used for the current smoking status of a patient with a maximum required binding to Snomed CT codes." strength="Preferred"/>
            <constraint name="us-core-3" severity="ERROR" message="SHALL use UCUM for coded quantity units.">
                <expression language="text/fhirpath" expression="value.ofType(Quantity).system.empty() or value.ofType(Quantity).system = 'http://unitsofmeasure.org'"/>
            </constraint>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values.">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/R4/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Related resource that belongs to the Observation group" definition="This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/R4/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/R4/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="Component results" definition="Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/R4/observation.html#notes) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreSpecimenProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-specimen" label="US Core Specimen Profile" target="Specimen" retrievable="true" baseType="QICore.DomainResource">
        <element name="identifier" description="External Identifier" definition="Id for specimen.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="accessionIdentifier" elementType="QICore.Identifier" description="Identifier assigned by the lab" definition="The identifier assigned by the lab when accessioning specimen(s). This is not necessarily the same as the specimen identifier, depending on local lab procedures."/>
        <element name="status" elementType="QICore.SpecimenStatus" target="%value.value" description="available | unavailable | unsatisfactory | entered-in-error" definition="The availability of the specimen." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.">
            <binding name="SpecimenStatus" description="Codes providing the status/availability of a specimen." strength="Required"/>
        </element>
        <element name="type" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Kind of material that forms the specimen" definition="The kind of material that forms the specimen." comment="The type can change the way that a specimen is handled and drives what kind of analyses can properly be performed on the specimen. It is frequently used in diagnostic work flow decision making systems." mustSupport="true">
            <binding strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) The patient where the specimen came from." definition="Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device." mustSupport="true"/>
        <element name="receivedTime" elementType="System.DateTime" target="%value.value" description="The time when specimen was received for processing" definition="Time when specimen was received for processing or testing."/>
        <element name="parent" description="Specimen from which this specimen originated" definition="Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen." comment="The parent specimen could be the source from which the current specimen is derived by some processing step (e.g. an aliquot or isolate or extracted nucleic acids from clinical samples) or one of many specimens that were combined to create a pooled sample.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="request" description="Why the specimen was collected" definition="Details concerning a service request that required a specimen to be collected." comment="The request may be explicit or implied such with a ServiceRequest that requires a blood draw.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="collection" elementType="QICore.Specimen.Collection" description="Collection details" definition="Details concerning the specimen collection."/>
        <element name="processing" description="Processing and processing step details" definition="Details concerning processing and processing steps for the specimen.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Specimen.Processing"/>
        </element>
        <element name="container" description="Direct container of specimen (tube/slide, etc.)" definition="The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Specimen.Container"/>
        </element>
        <element name="condition" target="FHIRHelpers.ToConcept(%value)" description="State of the specimen" definition="A mode or state of being that describes the nature of the specimen." comment="Specimen condition is an observation made about the specimen.  It's a point-in-time assessment.  It can be used to assess its quality or appropriateness for a specific test.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="SpecimenCondition" description="Codes describing the state of the specimen." strength="Extensible"/>
        </element>
        <element name="note" description="Comments" definition="To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreTribalAffiliationExtension" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-tribal-affiliation" label="US Core Tribal Affiliation Extension" retrievable="false" baseType="QICore.Extension">
        <element name="tribalAffiliation" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.extension[url='tribalAffiliation'].value)" description="(USCDI) Affiliated tribe or band name" definition="Affiliated tribe or band name" mustSupport="true"/>
        <element name="isEnrolled" elementType="System.Boolean" target="%parent.extension[url='isEnrolled'].value.value" description="Enrolled tribe member" definition="Whether the individual is an enrolled tribe member"/>
        <element name="url" elementType="System.String" target="%value.value" description="identifies the meaning of the extension" definition="Source of the definition for the extension code - a logical name or a URL." comment="The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. The definition SHALL be a URI for the Structure Definition defining the extension."/>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="USCoreVitalSignsProfile" identifier="http://hl7.org/fhir/us/core/StructureDefinition/us-core-vital-signs" label="US Core Vital Signs Profile" target="Observation" retrievable="true" primaryCodePath="code" baseType="QICore.DomainResource">
        <element name="identifier" description="Business Identifier for observation" definition="A unique identifier assigned to this observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Identifier"/>
        </element>
        <element name="basedOn" description="Fulfills plan, proposal or order" definition="A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="partOf" description="Part of referenced event" definition="A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure." comment="To link an Observation to an Encounter use `encounter`.  See the  [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below for guidance on referencing another Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="status" elementType="QICore.Status" target="%value.value" description="(USCDI) registered | preliminary | final | amended +" definition="The status of the result value." comment="This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid." mustSupport="true">
            <binding name="Status" strength="Required"/>
        </element>
        <element name="category" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="VSCat" elementType="System.Concept" target="FHIRHelpers.ToConcept(%parent.category[coding.system='http://terminology.hl7.org/CodeSystem/observation-category',coding.code='vital-signs'])" description="(USCDI) Classification of  type of observation" definition="A code that classifies the general type of observation being made." comment="In addition to the required category valueset, this element allows various categorization schemes based on the owner’s definition of the category and effectively multiple categories can be used at once.  The level of granularity is defined by the category concepts in the value set." mustSupport="true">
            <binding name="ObservationCategory" description="Codes for high level observation categories." strength="Preferred"/>
        </element>
        <element name="code" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Coded Responses from C-CDA Vital Sign Results" definition="Coded Responses from C-CDA Vital Sign Results." comment="*All* code-value and, if present, component.code-component.value pairs need to be taken into account to correctly understand the meaning of the observation." mustSupport="true">
            <binding description="The vital sign codes from the base FHIR and US Core Vital Signs." strength="Extensible"/>
        </element>
        <element name="subject" elementType="QICore.Reference" description="(USCDI) Who and/or what the observation is about" definition="The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation." comment="One would expect this element to be a cardinality of 1..1. The only circumstance in which the subject can be missing is when the observation is made by a device that does not know the patient. In this case, the observation SHALL be matched to a patient through some context/channel matching technique, and at this point, the observation should be updated." mustSupport="true"/>
        <element name="focus" description="What the observation is about, when it is not about the subject of record" definition="The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus." comment="Typically, an observation is made about the subject - a patient, or group of patients, location, or device - and the distinction between the subject and what is directly measured for an observation is specified in the observation code itself ( e.g., &quot;Blood Glucose&quot;) and does not need to be represented separately using this element.  Use `specimen` if a reference to a specimen is required.  If a code is required instead of a resource use either  `bodysite` for bodysites or the standard extension [focusCode](http://hl7.org/fhir/extension-observation-focuscode.html).">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="encounter" elementType="QICore.Reference" description="Healthcare event during which this observation is made" definition="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made." comment="This will typically be the encounter the event occurred within, but some events may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission laboratory tests)."/>
        <element name="effective" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Often just a dateTime for Vital Signs" definition="Often just a dateTime for Vital Signs." comment="At least a date should be present unless this observation is a historical report.  For recording imprecise or &quot;fuzzy&quot; times (For example, a blood glucose measurement taken &quot;after breakfast&quot;) use the [Timing](http://hl7.org/fhir/datatypes.html#timing) datatype which allow the measurement to be tied to regular life events." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <constraint name="vs-1" severity="ERROR" message="if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day">
                <expression language="text/fhirpath" expression="($this as dateTime).toString().length() &gt;= 8"/>
            </constraint>
        </element>
        <element name="issued" elementType="System.DateTime" target="%value.value" description="Date/Time this version was made available" definition="The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified." comment="For Observations that don’t require review and verification, it may be the same as the [`lastUpdated` ](http://hl7.org/fhir/resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that doesn’t require the new version to be reviewed and verified again."/>
        <element name="performer" description="Who is responsible for the observation" definition="Who was responsible for asserting the observed value as &quot;true&quot;.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="(USCDI) Vital Signs Value" definition="Vital Signs value are typically recorded using the Quantity data type." comment="An observation may have; 1)  a single value here, 2)  both a value and a set of related or component values,  or 3)  only a set of related or component values. If a value is present, the datatype for this element should be determined by Observation.code.  A CodeableConcept with just a text would be used instead of a string if the field was usually coded, or if the type associated with the Observation.code defines a coded value.  For additional guidance, see the [Notes section](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="String"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Integer"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Ratio"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="SampledData"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Time"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="DateTime"/>
                </choice>
            </elementTypeSpecifier>
            <binding description="Common UCUM units for recording Vital Signs." strength="Extensible"/>
        </element>
        <element name="dataAbsentReason" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="(USCDI) Why the result is missing" definition="Provides a reason why the expected value in the element Observation.value[x] is missing." comment="Null or exceptional values can be represented two ways in FHIR Observations.  One way is to simply include them in the value set and represent the exceptions in the value.  For example, measurement values for a serology test could be  &quot;detected&quot;, &quot;not detected&quot;, &quot;inconclusive&quot;, or  &quot;specimen unsatisfactory&quot;.   &#10;&#10;The alternate way is to use the value element for actual observations and use the explicit dataAbsentReason element to record exceptional values.  For example, the dataAbsentReason code &quot;error&quot; could be used when the measurement was not completed. Note that an observation may only be reported if there are values to report. For example differential cell counts values may be reported only when &gt; 0.  Because of these options, use-case agreements are required to interpret general observations for null or exceptional values." mustSupport="true">
            <binding name="ObservationValueAbsentReason" description="Codes specifying why the result (`Observation.value[x]`) is missing." strength="Extensible"/>
        </element>
        <element name="interpretation" target="FHIRHelpers.ToConcept(%value)" description="High, low, normal, etc." definition="A categorical assessment of an observation value.  For example, high, low, normal." comment="Historically used for laboratory results (known as 'abnormal flag' ),  its use extends to other use cases where coded interpretations  are relevant.  Often reported as one or more simple compact codes this element is often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="System.Concept"/>
            <binding name="ObservationInterpretation" description="Codes identifying interpretations of observations." strength="Extensible"/>
        </element>
        <element name="note" description="Comments about the observation" definition="Comments about the observation or the results." comment="May include general statements about the observation, or statements about significant, unexpected or unreliable results values, or information about its source when relevant to its interpretation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Annotation"/>
        </element>
        <element name="bodySite" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="Observed body part" definition="Indicates the site on the subject's body where the observation was made (i.e. the target site)." comment="Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   &#10;&#10;If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](http://hl7.org/fhir/extension-bodysite.html).">
            <binding name="BodySite" description="Codes describing anatomical locations. May include laterality." strength="Example"/>
        </element>
        <element name="method" elementType="System.Concept" target="FHIRHelpers.ToConcept(%value)" description="How it was done" definition="Indicates the mechanism used to perform the observation." comment="Only used if not implicit in code for Observation.code.">
            <binding name="ObservationMethod" description="Methods for simple observations." strength="Example"/>
        </element>
        <element name="specimen" elementType="QICore.Reference" description="Specimen used for this observation" definition="The specimen that was used when this observation was made." comment="Should only be used if not implicit in code found in `Observation.code`.  Observations are not made on specimens themselves; they are made on a subject, but in many cases by the means of a specimen. Note that although specimens are often involved, they are not always tracked and reported explicitly. Also note that observation resources may be used in contexts that track the specimen explicitly (e.g. Diagnostic Report)."/>
        <element name="device" elementType="QICore.Reference" description="(Measurement) Device" definition="The device used to generate the observation data." comment="Note that this is not meant to represent a device involved in the transmission of the result, e.g., a gateway.  Such devices may be documented using the Provenance resource where relevant."/>
        <element name="referenceRange" description="Provides guide for interpretation" definition="Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an &quot;OR&quot;.   In other words, to represent two distinct target populations, two `referenceRange` elements would be used." comment="Most observations only have one generic reference range. Systems MAY choose to restrict to only supplying the relevant reference range based on knowledge about the patient (e.g., specific to the patient's age, gender, weight and other factors), but this might not be possible or appropriate. Whenever more than one reference range is supplied, the differences between them SHOULD be provided in the reference range and/or age properties.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.ReferenceRange"/>
            <constraint name="obs-3" severity="ERROR" message="Must have at least a low or a high or text">
                <expression language="text/fhirpath" expression="low.exists() or high.exists() or text.exists()"/>
            </constraint>
        </element>
        <element name="hasMember" description="Used when reporting vital signs panel components" definition="Used when reporting vital signs panel components." comment="When using this element, an observation will typically have either a value or a set of related resources, although both may be present in some cases.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.  Note that a system may calculate results from [QuestionnaireResponse](http://hl7.org/fhir/questionnaireresponse.html)  into a final score and represent the score as an Observation.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="derivedFrom" description="Related measurements the observation is made from" definition="The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image." comment="All the reference choices that are listed in this element can represent clinical observations and other measurements that may be the source for a derived value.  The most common reference will be another Observation.  For a discussion on the ways Observations can assembled in groups together, see [Notes](http://hl7.org/fhir/observation.html#obsgrouping) below.">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Reference"/>
        </element>
        <element name="component" description="(USCDI) Component observations" definition="Used when reporting component observation such as systolic and diastolic blood pressure." comment="For a discussion on the ways Observations can be assembled in groups together see [Notes](http://hl7.org/fhir/observation.html#notes) below." mustSupport="true">
            <elementTypeSpecifier xsi:type="ListTypeSpecifier" elementType="QICore.Observation.Component"/>
            <constraint name="vs-3" severity="ERROR" message="If there is no a value a data absent reason must be present">
                <expression language="text/fhirpath" expression="value.exists() or dataAbsentReason.exists()"/>
            </constraint>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="UnitsOfTime" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="UsageContext" identifier="http://hl7.org/fhir/StructureDefinition/UsageContext" label="UsageContext" retrievable="false" primaryCodePath="code" baseType="QICore.Element">
        <element name="code" elementType="System.Code" target="FHIRHelpers.ToCode(%value)" description="Type of context being specified" definition="A code that identifies the type of context being specified by this usage context.">
            <binding name="UsageContextType" description="A code that specifies a type of context being specified by a usage context." strength="Extensible"/>
        </element>
        <element name="value" target="FHIRHelpers.ToValue(%value)" description="Value that defines the context" definition="A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.">
            <elementTypeSpecifier xsi:type="ChoiceTypeSpecifier">
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Concept"/>
                <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                <choice xsi:type="IntervalTypeSpecifier">
                    <pointTypeSpecifier xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
                </choice>
                <choice xsi:type="NamedTypeSpecifier" namespace="QICore" name="Reference"/>
            </elementTypeSpecifier>
            <binding name="UsageContextValue" description="A code that defines the specific value for the context being specified." strength="Example"/>
        </element>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="Use" retrievable="false" baseType="System.String"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="abatement" identifier="http://hl7.org/fhir/StructureDefinition/familymemberhistory-abatement" label="abatement" retrievable="false">
        <baseTypeSpecifier xsi:type="ChoiceTypeSpecifier">
            <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Date"/>
            <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Quantity"/>
            <choice xsi:type="NamedTypeSpecifier" namespace="System" name="Boolean"/>
        </baseTypeSpecifier>
    </typeInfo>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="assertedDate" identifier="http://hl7.org/fhir/StructureDefinition/condition-assertedDate" label="assertedDate" retrievable="false" baseType="System.DateTime"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="completionMode" identifier="http://hl7.org/fhir/StructureDefinition/questionnaireresponse-completionMode" label="completionMode" retrievable="false" baseType="System.Concept"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="preferred" identifier="http://hl7.org/fhir/StructureDefinition/iso21090-preferred" label="preferred" retrievable="false" baseType="System.Boolean"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="resolutionAge" identifier="http://hl7.org/fhir/StructureDefinition/allergyintolerance-resolutionAge" label="resolutionAge" retrievable="false" baseType="System.Quantity"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="severity" identifier="http://hl7.org/fhir/StructureDefinition/familymemberhistory-severity" label="severity" retrievable="false" baseType="System.Concept"/>
    <typeInfo xsi:type="ClassInfo" namespace="QICore" name="signature" identifier="http://hl7.org/fhir/StructureDefinition/questionnaireresponse-signature" label="signature" retrievable="false" baseType="QICore.Signature"/>
    <contextInfo name="Practitioner" keyElement="id">
        <contextType namespace="QICore" name="Practitioner"/>
    </contextInfo>
    <contextInfo name="Device" keyElement="id">
        <contextType namespace="QICore" name="Device"/>
    </contextInfo>
    <contextInfo name="Patient" keyElement="id" birthDateElement="birthDate">
        <contextType namespace="QICore" name="Patient"/>
    </contextInfo>
    <contextInfo name="Encounter" keyElement="id">
        <contextType namespace="QICore" name="Encounter"/>
    </contextInfo>
    <contextInfo name="RelatedPerson" keyElement="id">
        <contextType namespace="QICore" name="RelatedPerson"/>
    </contextInfo>
</modelInfo>",
    "url": "http://github.com/HL7/fhir-qi-core/blob/master/input/resources/library-QICore-ModelInfo.json"

    
  } ]
}
